{"version":3,"sources":["serviceWorker.js","Register.js","CreateProfile.js","Login.js","Header.js","SwipeProfiles.js","Matches.js","questions.js","QuestionBtn.js","Questionnaire.js","Messages.js","ViewProfile.js","EditProfile.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Register","props","state","password","confirmPassword","error","handleInputChange","bind","handleSubmit","event","target","value","name","this","setState","preventDefault","checkPasswords","myForm","document","getElementById","myRequest","Request","method","body","FormData","fetch","then","res","json","response","history","push","pathname","id","catch","length","alert","className","onSubmit","class","type","placeholder","onChange","to","React","Component","withRouter","ProfileForm","handleUpdate","completedInput","checkAge","age","append","inputs","i","handleChange","birthday","Date","today","getFullYear","getMonth","getDate","bio","gender","genderPreference","education","interests","maxDistance","maxlength","min","fieldValue","max","Login","console","log","viewBox","fill","d","width","href","src","Header","activeClassName","SwipeProfiles","firstName","description","workplace","potentialFriends","displayedUserId","getPotentialFriendList","displayProfile","handleSwipe","formData","potentialFriendsList","potentialListId","displayProfileId","pop","displayId","workPlace","choice","currentUserId","potentialList","newPotentialUserId","onClick","Matches","userId","userIds","matchesExist","firstnames","selectUser","userSelected","split","headers","JSON","stringify","friendId","currentName","friendName","currentConvoId","friendConvoId","get_matches","prevProps","prevState","matchingSection","userItems","pos_user","key","qBank","question","answers","questionId","QuestionBox","options","ID","selected","map","text","index","Questionnaire","getQuestions","Promise","resolve","questionBank","storeAnswer","answer","matchRequest","socket","io","connect","Messages","componentDidMount","messages","messageSender","fromNames","timeStamps","emit","on","msg","toUTCString","componentWillUnmount","currentRoom","e","message","room","date","onKeyPress","which","names","ViewProfile","EditProfile","updatedMessage","updateStatus","App","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0JAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6DCbAC,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,gBAAiB,GACjBC,MAAO,IAGT,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,8DAaDE,GAChB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpBC,KAAKC,SAAL,eACGF,EAAOD,M,mCAICF,GAAQ,IAAD,OAElB,GADAA,EAAMM,iBACFF,KAAKG,iBAAkB,CACzB,IAAMC,EAASC,SAASC,eAAe,gBACjCC,EAAY,IAAIC,QAAQ,iCAAkC,CAC9DC,OAAQ,OACRC,KAAM,IAAIC,SAASP,KAGrBQ,MAAML,GACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACgB,YAAjBA,EAAIE,UACN,EAAK5B,MACJ6B,QAAQC,KAAK,CACZC,SAAU,iBACV9B,MAAO,CAAC+B,GAAIN,EAAIM,MAGpB,EAAKnB,SAAS,CACZT,MAAOsB,EAAIE,cAGdK,OAAM,SAAC7B,GACN,EAAKS,SAAS,CACZT,MAAO,sC,uCAOf,IAAMF,EAAWU,KAAKX,MAAMC,SACtBC,EAAkBS,KAAKX,MAAME,gBACnC,OAAwB,IAApBD,EAASgC,QACXC,MAAM,wBACC,GACEhC,IAAoBD,IAC7BiC,MAAM,qCACC,K,+BAMT,OACE,yBAAKC,UAAU,YACX,mDACA,0BAAMJ,GAAG,eAAeK,SAAUzB,KAAKL,cACrC,yBAAK+B,MAAQ,2BACX,2BACE3B,KAAK,QACL4B,KAAK,QACLC,YAAY,kBAEd,6BACA,2BACE7B,KAAK,WACL4B,KAAK,WACL7B,MAAOE,KAAKX,MAAMC,SAClBsC,YAAY,iBACZC,SAAU7B,KAAKP,oBAEjB,6BACA,2BACEM,KAAK,kBACL4B,KAAK,WACL7B,MAAOE,KAAKX,MAAME,gBAClBqC,YAAY,oBACZC,SAAU7B,KAAKP,oBAEjB,6BAEA,2BAAOkC,KAAK,SAAS7B,MAAM,SAC3B,6BACA,8BAAOE,KAAKX,MAAMG,SAItB,kBAAC,IAAD,CAAMsC,GAAG,KAAT,kC,GAvGaC,IAAMC,YA6GdC,cAAW9C,GC9GlB+C,G,wDACJ,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IAmBR+C,aAAe,SAACvC,GAEd,GADAA,EAAMM,iBACF,EAAKkC,kBAEL,GADA,EAAKC,WACD,EAAKhD,MAAMiD,IAAM,IAAM,EAAKjD,MAAMiD,IAAM,IAAI,CAAC,IAAD,MACxClB,EAAE,UAAG,EAAKhC,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6B+B,GAClChB,EAAS,IAAIO,SAAUN,SAASC,eAAe,gBACrDF,EAAOmC,OAAO,KAAMnB,GACpBhB,EAAOmC,OAAO,MAAO,EAAKlD,MAAMiD,KAChC,IAAM/B,EAAY,IAAIC,QAAQ,sCAAuC,CACnEC,OAAQ,OACRC,KAAMN,IAGRQ,MAAML,GACLM,MAAK,SAACC,GAAD,OACNA,EAAIC,UACHF,MAAK,SAACC,GACe,YAAjBA,EAAIE,SACL,EAAK5B,MAAM6B,QAAQC,KAAK,CACtBC,SAAU,iBACV9B,MAAO,CAAC+B,GAAIA,KAId,EAAKnB,SAAS,CACZT,MAAOsB,EAAIE,cAIhBK,OAAM,SAAC7B,GACN,EAAKS,SAAS,CACZT,MAAO,yCAMf+B,MAAM,8BA1DS,EA8DnBa,eAAiB,WAEf,IADA,IAAMI,EAAS,CAAC,OAAQ,WAAY,MAAO,SAAU,mBAAoB,YAAa,aAC9EC,EAAG,EAAGA,EAAGD,EAAOlB,OAAQmB,IAC9B,IAAI,EAAKpD,MAAMmD,EAAOC,IACpB,OAAO,EAEX,OAAO,GApEU,EAuEnBC,aAAe,SAAC9C,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKE,SAAL,eACGF,EAAOD,KA7EO,EAiFnBuC,SAAW,WACT,IAAMM,EAAW,IAAIC,KAAK,EAAKvD,MAAMsD,UACjCE,EAAQ,IAAID,KAEZN,EAAMO,EAAMC,cAAgBH,EAASG,eACrCD,EAAME,WAAaJ,EAASI,YAAeF,EAAME,aAAeJ,EAASI,YAAcF,EAAMG,QAAUL,EAASK,aAClHV,GAAO,GAGLA,EAAM,GACRf,MAAM,uCACGe,EAAM,IACff,MAAM,sDACGe,GAAO,IAAMA,GAAO,KAE7Bf,MAAM,+BAER,EAAKlC,MAAMiD,IAAMA,GAhGjB,EAAKjD,MAAQ,CACXU,KAAM,GACN4C,SAAU,GACVM,IAAK,GACLC,OAAQ,SACRC,iBAAkB,SAClBC,UAAW,GACXC,UAAW,GACX7D,MAAO,GACP8D,YAAa,GACbhB,IAAK,GAIP,EAAKH,aAAe,EAAKA,aAAazC,KAAlB,gBACpB,EAAKgD,aAAe,EAAKA,aAAahD,KAAlB,gBAjBH,E,qDAsGjB,OACE,yBAAK8B,UAAU,WACb,0BAAMJ,GAAG,cAAcK,SAAUzB,KAAKmC,cACpC,0CAEA,oCAEA,2BAAOR,KAAK,OAAO5B,KAAK,OAAOD,MAASE,KAAKX,MAAMU,KAAM8B,SAAU7B,KAAK0C,aAAca,UAAU,OAEhG,wCAEA,2BAAO5B,KAAK,OAAO5B,KAAK,WACtBD,MAAOE,KAAKX,MAAMsD,SAClBa,IAAI,aACJ5B,YAAc,aACdC,SAAU7B,KAAK0C,eAGjB,2CAEA,4BACE3C,KAAO,SACP8B,SAAW7B,KAAK0C,aAChB5C,MAASE,KAAKX,MAAM6D,QAEpB,4BAAQpD,MAAM,UAAd,UACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,SAAf,UAGF,iEACA,4BACEC,KAAO,mBACP0D,WAAYzD,KAAKX,MAAM8D,iBACvBtB,SAAU7B,KAAK0C,aACf5C,MAASE,KAAKX,MAAM8D,kBAEpB,4BAAQrD,MAAM,UAAd,UACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,QAAf,SAGF,8CACA,2BAAO6B,KAAK,OAAO5B,KAAK,YAAYD,MAASE,KAAKX,MAAM+D,UAAWvB,SAAU7B,KAAK0C,aAAca,UAAU,OAE1G,8CACA,2BAAO5B,KAAK,OAAO5B,KAAK,YAAYD,MAAQE,KAAKX,MAAMgE,UAAWxB,SAAU7B,KAAK0C,aAAca,UAAU,QAEzG,mCACA,2BAAO5B,KAAK,OAAO5B,KAAK,MAAMD,MAASE,KAAKX,MAAM4D,IAAKpB,SAAU7B,KAAK0C,aAAca,UAAU,QAE9F,4CACA,2BAAO5B,KAAK,QAAQ5B,KAAK,cAAcD,MAASE,KAAKX,MAAMiE,YAAazB,SAAU7B,KAAK0C,aAAcc,IAAI,IAAIE,IAAI,UACjH,8BAAO1D,KAAKX,MAAMiE,YAAlB,MAAuC,6BAEvC,2BAAO3B,KAAK,SAAS7B,MAAM,YAE7B,8BAAOE,KAAKX,MAAMG,Y,GAhKAuC,IAAMC,YAsKnBC,cAAWC,GCrKpByB,G,wDACJ,WAAYvE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVE,MAAO,IAGT,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,8DAWDE,GAChB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpBC,KAAKC,SAAL,eACGF,EAAOD,M,mCAICF,GAAQ,IAAD,OAClBA,EAAMM,iBAEJ,IAAME,EAASC,SAASC,eAAe,aAEjCC,EAAY,IAAIC,QAAQ,yCAA0C,CACtEC,OAAQ,OACRC,KAAM,IAAIC,SAASP,KAErBwD,QAAQC,IAAI,QACZD,QAAQC,IAAItD,GACZK,MAAML,GACLM,MAAK,SAACC,GACL8C,QAAQC,IAAI/C,GACZ8C,QAAQC,IAAI,QACZ/C,EAAIC,UACHF,MAAK,SAAAC,GACkB,YAAjBA,EAAIE,UACL,EAAK5B,MACF6B,QAAQC,KAAK,CACZC,SAAU,QACV9B,MAAO,CAAC+B,GAAIN,EAAIM,MAGtB,EAAKnB,SAAS,CACZT,MAAOsB,EAAIE,cAGhBK,OAAM,SAAC7B,GACNoE,QAAQC,IAAIrE,GACZ,EAAKS,SAAS,CACZT,MAAO,qC,+BAMf,OACE,yBAAKgC,UAAY,SACf,yBAAKA,UAAY,cACjB,yBAAKsC,QAAQ,eACX,0BAAM1C,GAAG,QAAQ2C,KAAO,cAAcC,EAAE,yEACxC,0BAAMC,MAAM,OACZ,8BAAUC,KAAK,UAAf,kCAKF,yBAAKC,IAAI,uBAGT,gDACA,0BAAM/C,GAAK,YAAYK,SAAUzB,KAAKL,cAChC,2BACII,KAAK,QACL4B,KAAK,QACLC,YAAY,kBACZ,6BACF,2BACE7B,KAAK,WACL4B,KAAK,WACL7B,MAASE,KAAKX,MAAMC,SACpBsC,YAAY,iBACZC,SAAU7B,KAAKP,oBACf,6BAEN,2BAAOkC,KAAK,SAAS7B,MAAM,WAAW,6BAEtC,8BAAOE,KAAKX,MAAMG,QAGtB,kBAAC,IAAD,CAAMsC,GAAG,aAAT,6B,GA7FYC,IAAMC,YAmGXC,cAAW0B,GClEXS,G,MAlCA,SAAChF,GACZ,OACI,6BACI,yBAAKoC,UAAU,cACX,yBAAKE,MAAO,UACR,kBAAC,IAAD,CAASI,GAAI,CACTX,SAAS,QACT9B,MAAM,CAAC+B,GAAIhC,EAAMgC,KAAMI,UAAU,WAAW6C,gBAAgB,UAFhE,oBAGA,kBAAC,IAAD,CAASvC,GAAI,CACTX,SAAS,WACT9B,MAAM,CAAC+B,GAAIhC,EAAMgC,KAAMI,UAAU,WAAW6C,gBAAgB,UAFhE,WAGA,kBAAC,IAAD,CAASvC,GAAI,CACTX,SAAS,eACT9B,MAAM,CAAC+B,GAAIhC,EAAMgC,KAAMI,UAAU,WAAW6C,gBAAgB,UAFhE,gBAGA,kBAAC,IAAD,CAASvC,GAAI,CACTX,SAAS,eACT9B,MAAM,CAAC+B,GAAIhC,EAAMgC,KAAMI,UAAU,WAAW6C,gBAAgB,UAFhE,gBAGA,kBAAC,IAAD,CAASvC,GAAI,CACTX,SAAS,YACT9B,MAAM,CAAC+B,GAAIhC,EAAMgC,KAAMI,UAAU,WAAW6C,gBAAgB,UAFhE,YAGA,kBAAC,IAAD,CAASvC,GAAI,CACTX,SAAS,YAAaK,UAAU,WAAW6C,gBAAgB,UAD/D,aAGJ,yBAAK3C,MAAM,UACP,kBAAC,IAAD,CAASI,GAAI,CACTX,SAAS,KAAMK,UAAU,WAAW6C,gBAAgB,UACpD,4BAAQ7C,UAAU,iBAAlB,iBCzBlB8C,G,wDACJ,WAAYlF,GAAQ,IAAD,oCACjB,cAAMA,IACDC,MAAQ,CACX+B,GAAE,UAAE,EAAKhC,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6B+B,GACjCkB,IAAK,GACLiC,UAAW,GACXC,YAAa,GACbnB,UAAW,GACXH,OAAQ,GACRuB,UAAW,GACXC,iBAAkB,GAClBC,gBAAiB,GACjBnF,MAAO,IAGT,EAAKoF,uBAAyB,EAAKA,uBAAuBlF,KAA5B,gBAC9B,EAAKmF,eAAiB,EAAKA,eAAenF,KAApB,gBACtB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBAjBF,E,qEAoBO,IAAD,aACjB0B,EAAE,UAAGpB,KAAKZ,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6B+B,GACpC2D,EAAW,IAAIpE,SACnBoE,EAASxC,OAAO,SAAUnB,GAC1B,IAAMb,EAAY,IAAIC,QAAQ,4CAA6C,CACzEC,OAAQ,OACRC,KAAMqE,IAERnE,MAAML,GACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,GAAqB,YAAjBA,EAAIE,SAAwB,CAC9B,IAAIgE,EAAuBlE,EAAImE,gBACzBC,EAAmBF,EAAqBG,MAC9C,EAAKlF,SAAS,CACZyE,iBAAkBM,EAClBL,gBAAiBO,EACjB1F,MAAO,KAGT,EAAKqF,sBAEL,EAAK5E,SAAS,CACZT,MAAOsB,EAAIE,cAIhBK,OAAM,SAAC7B,GACN,EAAKS,SAAS,CACZT,MAAO,qC,uCAKG,IAAD,OACT4F,EAAYpF,KAAKX,MAAMsF,gBAC7B,GAAIS,EAAW,CACb,IAAIL,EAAW,IAAIpE,SACnBoE,EAASxC,OAAO,SAAU6C,GAC1B,IAAM7E,EAAY,IAAIC,QAAQ,uCAAwC,CACpEC,OAAQ,OACRC,KAAMqE,IAERnE,MAAML,GACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACgB,YAAjBA,EAAIE,SACN,EAAKf,SAAS,CACZqC,IAAKxB,EAAIwB,IACTiC,UAAWzD,EAAIyD,UACfC,YAAa1D,EAAI0D,YACjBnB,UAAWvC,EAAIuC,UACfH,OAAQpC,EAAIoC,OACZuB,UAAW3D,EAAIuE,UACf7F,MAAO,KAGT,EAAKS,SAAS,CACZT,MAAOsB,EAAIE,cAIhBK,OAAM,SAAC7B,GACN,EAAKS,SAAS,CACZT,MAAO,wCAIbQ,KAAKC,SAAS,CACZT,MACE,sE,kCAKI8F,GAAS,IAAD,aAClB1B,QAAQC,IAAIyB,GACZ,IAAMF,EAAYpF,KAAKX,MAAMsF,gBACvBY,EAAa,UAAGvF,KAAKZ,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6B+B,GAC/C2D,EAAW,IAAIpE,SACnBoE,EAASxC,OAAO,gBAAiBgD,GACjCR,EAASxC,OAAO,cAAe6C,GAC/BL,EAASxC,OAAO,QAAS+C,GACzB,IAAM/E,EAAY,IAAIC,QAAQ,8BAA+B,CAC3DC,OAAQ,OACRC,KAAMqE,IAERnE,MAAML,GACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,GAAqB,YAAjBA,EAAIE,SAAwB,CAC9B,IAAIwE,EAAgB,EAAKnG,MAAMqF,iBAC3Be,EAAqBD,EAAcL,MACvC,EAAKlF,SAAS,CACZyE,iBAAkBc,EAClBb,gBAAiBc,EACjBjG,MAAO,KAET,EAAKqF,sBAEL,EAAK5E,SAAS,CACZT,MAAOsB,EAAIE,cAIhBK,OAAM,SAAC7B,GACN,EAAKS,SAAS,CACZT,MAAO,qC,+BAKL,IAAD,OACDkF,EAAmB1E,KAAKX,MAAMqF,iBAC9BC,EAAkB3E,KAAKX,MAAMsF,gBAC7BnF,EAAQQ,KAAKX,MAAMG,MAQzB,MANsB,KAApBmF,GAC4B,IAA5BD,EAAiBpD,QACP,KAAV9B,GAEAQ,KAAK4E,yBAIL,yBAAKpD,UAAU,gBACb,kBAAC,EAAD,CAAQJ,GAAIpB,KAAKX,MAAM+B,KACvB,6BACA,4BAAQM,MAAM,aAAd,sBACA,6BACA,yBAAKyC,IAAI,sBACT,6BACA,6BACA,6BACC3E,EACC,8BAAOA,GAEP,6BACE,qCACA,8BAAOQ,KAAKX,MAAMkF,WAClB,oCACA,8BAAOvE,KAAKX,MAAMiD,KAClB,6BACA,yBAAKZ,MAAM,uBACT,6BACA,uCACA,8BAAO1B,KAAKX,MAAM6D,QAClB,4CACA,8BAAOlD,KAAKX,MAAMmF,aAClB,0CACA,8BAAOxE,KAAKX,MAAMgE,WAClB,iDACA,8BAAOrD,KAAKX,MAAMoF,WAClB,8BAEF,6BACA,4BACE/C,MAAM,wBACNgE,QAAS,kBAAM,EAAKZ,aAAY,KAFlC,eAKU,IACV,6BACA,4BACEpD,MAAM,6BACNgE,QAAS,kBAAM,EAAKZ,aAAY,KAFlC,yB,GAxLgB/C,IAAMC,YAqMnBC,cAAWqC,GCtMpBqB,G,wDACF,WAAYvG,GAAO,IAAD,oCACd,cAAMA,IACDC,MAAQ,CACTuG,OAAM,UAAE,EAAKxG,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6B+B,GACrCyE,QAAS,GACTC,aAAc,UACdC,WAAY,GACZhG,KAAM,IAEV,EAAKiG,WAAa,EAAKA,WAAWtG,KAAhB,gBATJ,E,uDAWPE,GAAQ,IAAD,OACRqG,EAAerG,EAAMC,OAAOC,MAAMoG,MAAM,KACxC3F,EAAY,IAAIC,QAAQ,uCAAwC,CAClEC,OAAQ,OACR0F,QAAS,CAAE,eAAgB,oBAC3BzF,KAAM0F,KAAKC,UAAU,CACjB,OAAUrG,KAAKX,MAAMuG,OACrB,SAAYK,EAAa,OAEjCrF,MAAML,GACDM,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAC,GACF,EAAK1B,MACJ6B,QAAQC,KAAK,CACZC,SAAU,YACV9B,MAAO,CACH+B,GAAI,EAAK/B,MAAMuG,OACfU,SAAUL,EAAa,GACvBM,YAAa,EAAKlH,MAAMU,KACxByG,WAAYP,EAAa,GACzBQ,eAAgB3F,EAAI2F,eACpBC,cAAe5F,EAAI4F,oBAGhCrF,OAAM,SAAC7B,GACJ+B,MAAM,wBACNqC,QAAQpE,MAAMA,Q,oCAIR,IAAD,OACHe,EAAY,IAAIC,QAAQ,gCAAiC,CAC3DC,OAAQ,OACR0F,QAAS,CAAE,eAAgB,oBAC3BzF,KAAM0F,KAAKC,UAAU,CAAC,OAAUrG,KAAKX,MAAMuG,WAE/ChF,MAAML,GACDM,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAC,GAAG,OACJA,EAAI+E,SAAiC,GAAtB/E,EAAI+E,QAAQvE,OACxB,EAAKrB,SAAS,CACV6F,aAAc,SACdD,QAAS/E,EAAI+E,QACbE,WAAYjF,EAAIiF,WAChBhG,KAAMe,EAAIyF,cAGd,EAAKtG,SAAS,CACV6F,aAAc,kBAGzBzE,OAAM,SAAC7B,GACJoE,QAAQpE,MAAMA,Q,0CAItBQ,KAAK2G,gB,yCAEUC,EAAWC,GAC1B,IAAK,IAAIpE,EAAI,EAAGA,EAAIzC,KAAKX,MAAMwG,QAAQvE,SAAUmB,EAC7C,GAAIzC,KAAKX,MAAMwG,QAAQpD,IAAMoE,EAAUhB,QAAQpD,GAAI,CAC/CzC,KAAK2G,cACL,S,+BAOR,IAAIG,EACJ,GAA+B,UAA3B9G,KAAKX,MAAMyG,aAAyB,CAEpC,IADA,IAAIiB,EAAY,GACPtE,EAAI,EAAGA,EAAIzC,KAAKX,MAAMwG,QAAQvE,OAAQmB,IAAI,CAC/C,IAAIuE,EAAWhH,KAAKX,MAAMwG,QAAQpD,GAClCsE,EAAU7F,KACN,4BAAQM,UAAU,WACVyF,IAAKD,EACLlH,MAASE,KAAKX,MAAMwG,QAAQpD,GAAG,IAAIzC,KAAKX,MAAM0G,WAAWtD,GACzDiD,QAAW1F,KAAKgG,YACnBhG,KAAKX,MAAM0G,WAAWtD,KAMnCqE,EAAkB,wBAAI1F,GAAG,oBACrB,+CACA,gDACA,2BACK2F,SAKTD,EADgC,cAA3B9G,KAAKX,MAAMyG,aACE,wBAAI1E,GAAG,gBACrB,+EACA,iHACA,yDAIc,6BAEtB,OACI,yBAAKA,GAAG,mBACF0F,EAEF,yBAAKpF,MAAQ,gBAAgBN,GAAK,iBAC9B,kBAAC,IAAD,CAAMU,GAAI,CAACX,SAAU,QAAS9B,MAAO,CAAC+B,GAAIpB,KAAKX,MAAMuG,UAArD,iBAEJ,yBAAKlE,MAAQ,oBAAoBN,GAAK,qBAClC,kBAAC,IAAD,CAAMU,GAAI,CAACX,SAAU,eAAgB9B,MAAO,CAAC+B,GAAIpB,KAAKX,MAAMuG,UAA5D,sB,GA3HE7D,IAAMC,YAmIbC,cAAW0D,GCvIpBuB,EAAQ,CACV,CACEC,SACE,8DACFC,QAAS,CAAC,8BAA+B,kCACzCC,WAAY,KAEd,CACEF,SACE,sBACFC,QAAS,CAAC,wDAAyD,6DACnEC,WAAY,KAEd,CACEF,SACE,gDACFC,QAAS,CAAC,+BAAgC,0CAC1CC,WAAY,KAEd,CACEF,SAAU,6DACVC,QAAS,CACP,6BACA,+BAEFC,WAAY,KAEd,CACEF,SAAU,gDACVC,QAAS,CAAC,0DAA2D,qDACrEC,WAAY,KAEd,CACEF,SAAU,oEACVC,QAAS,CAAC,SAAU,SACpBC,WAAY,KAEd,CACEF,SAAU,qEACVC,QAAS,CAAC,WAAY,yBACtBC,WAAY,KAEd,CACEF,SAAU,2EACVC,QAAS,CAAC,oCAAqC,sBAC/CC,WAAY,KAEd,CACEF,SAAU,qCACVC,QAAS,CAAC,kBAAmB,qBAC7BC,WAAY,KAEd,CACEF,SAAU,gDACVC,QAAS,CAAC,yBAA0B,oCACpCC,WAAY,MAEd,CACEF,SAAU,+DACVC,QAAS,CAAC,+BAAgC,uCAC1CC,WAAY,MAEd,CACEF,SAAU,mDACVC,QAAS,CAAC,0BAA2B,4BACrCC,WAAY,MAEd,CACEF,SAAU,8FACVC,QAAS,CAAC,gCAAiC,yBAC3CC,WAAY,MAEd,CACEF,SAAU,8FACVC,QAAS,CAAC,qBAAsB,kBAChCC,WAAY,MAEd,CACEF,SAAU,yGACVC,QAAS,CAAC,gCAAiC,yBAC3CC,WAAY,MAEd,CACEF,SAAU,yGACVC,QAAS,CAAC,qBAAsB,kBAChCC,WAAY,OClEHC,EAjBK,SAAC,GAAuC,IAAtCH,EAAqC,EAArCA,SAAUI,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,SAC3C,OACE,6BACE,6BAAOD,EAAP,KAAaL,GACZI,EAAQG,KAAI,SAACC,EAAMC,GAAP,OACX,2BACA,2BAAOjG,KAAK,QAAQ7B,MAAO6H,EAAM5H,KAAMyH,EAAI9B,QAAS,WAClD+B,EAASG,MAERD,QCLLE,G,wDACJ,WAAYzI,GAAO,IAAD,8BAChB,cAAMA,IAqER0I,aAAe,WFYMC,QAAQC,QAAQd,GEXvBrG,MAAK,SAAAsG,GACf,EAAKlH,SAAS,CACZgI,aAAcd,QAzEF,EAgFlBe,YAAc,SAACC,EAAOX,GACpB,EAAKnI,MAAM2B,SAASwG,EAAG,GAAGW,GA/E1B,EAAK9I,MAAQ,CACX4I,aAAc,GACdjH,SAAS,IAEX,EAAKrB,aAAc,EAAKA,aAAaD,KAAlB,gBANH,E,yDASLE,GAAO,IAAD,OAEjB,GADAA,EAAMM,iBACHF,KAAKX,MAAM2B,SAASM,QAAU,GAAG,CAAC,IAAD,MAC5BF,EAAE,UAAGpB,KAAKZ,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6B+B,GAClCb,EAAY,IAAIC,QAAS,sCAAsC,CACnEC,OAAQ,OACR0F,QAAS,CAAC,eAAe,oBACzBzF,KAAM0F,KAAKC,UAAU,CAAC,UAAYrG,KAAKX,MAAM2B,SACvB,OAAUI,MAG5BgH,EAAe,IAAI5H,QAAS,uCAAuC,CACvEC,OAAQ,OACR0F,QAAS,CAAC,eAAe,oBACzBzF,KAAM0F,KAAKC,UAAU,CAAC,UAAYrG,KAAKX,MAAM2B,SACvB,OAAUI,MAGlCR,MAAML,GACLM,MAAK,SAACC,GAAD,OACJA,EAAIC,UACLF,MAAK,SAACC,GACe,YAAjBA,EAAIE,SAGLJ,MAAMwH,GACLvH,MAAK,SAACC,GAAD,OACJA,EAAIC,UACLF,MAAK,SAACC,GACe,YAAjBA,EAAIE,SACL,EAAK5B,MACJ6B,QAAQC,KAAK,CACZC,SAAU,QACV9B,MAAO,CAAC+B,GAAIA,KAId,EAAKnB,SAAS,CACZT,MAAOsB,EAAIE,cAMjB,EAAKf,SAAS,CACZT,MAAOsB,EAAIE,cAKhBK,OAAM,SAAC7B,GACN,EAAKS,SAAS,CACZT,MAAO,wCAKX+B,MAAM,iC,0CAYRvB,KAAK8H,iB,+BAME,IAAD,OACN,OACE,6BACE,6BACE,wDACA,8EAED9H,KAAKX,MAAM4I,aAAa3G,OAAS,GAChCtB,KAAKX,MAAM4I,aAAaP,KAAI,gBAAEP,EAAF,EAAEA,SAASC,EAAX,EAAWA,QAAQC,EAAnB,EAAmBA,WAAnB,OAC1B,kBAAC,EAAD,CACAF,SAAUA,EACVI,QAASH,EACTI,GAAIH,EACJJ,IAAKI,EACLI,SAAU,SAAAU,GAAM,OAAI,EAAKD,YAAYC,EAAOd,SAIhD,6BACE,4BAAQ3B,QAAS1F,KAAKL,cAAtB,gB,GAxGkBqC,cA+GbC,cAAW4F,G,gBC/GtBQ,E,OAASC,EAAGC,QAAH,UADE,0BAGTC,E,kDACJ,WAAYpJ,GAAO,IAAD,4DAChB,cAAMA,IAgBRqJ,kBAAoB,WAAO,IAAD,MAClBhC,EAAc,UAAG,EAAKrH,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6BoH,eAC9ClG,EAAY,IAAIC,QAAQ,oCAAqC,CAC3DC,OAAQ,OACR0F,QAAS,CAAE,eAAgB,oBAC3BzF,KAAM0F,KAAKC,UAAU,CAAC,QAAWI,MAErC7F,MAAML,GACDM,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAC,GACF,EAAKb,SAAS,CACVyI,SAAU5H,EAAI4H,SACdC,cAAe7H,EAAI8H,UACnBC,WAAY/H,EAAI+H,aAGlBR,EAAOS,KAAK,OAAQrC,GACpB4B,EAAOU,GAAG,WAAW,SAAAC,GACnB,EAAK/I,SAAS,CACVyI,SAAS,GAAD,mBAAM,EAAKrJ,MAAMqJ,UAAjB,CAA2BM,IACnCL,cAAc,GAAD,mBAAM,EAAKtJ,MAAMsJ,eAAjB,CAAgC,EAAKtJ,MAAMmH,aACxDqC,WAAW,GAAD,mBAAM,EAAKxJ,MAAMwJ,YAAjB,EAA6B,IAAIjG,MAAOqG,wBAIjE5H,OAAM,SAAC7B,GACJoE,QAAQpE,MAAMA,OA3CN,EA+ClB0J,qBAAsB,WACpB,IAAMC,EAAc,EAAK9J,MAAMoH,eAC/B4B,EAAOS,KAAK,YAAaK,IAjDT,EAsDlBtH,SAAW,SAAAuH,GACT,EAAKnJ,SAAS,CACZoJ,QAASD,EAAEvJ,OAAOC,SAxDJ,EA6DlB4F,QAAU,WAAO,IAAD,MACR2D,EAAU,EAAKhK,MAAMgK,QACrBtJ,EAAO,EAAKV,MAAMkH,YAClB+C,EAAO,EAAKjK,MAAMiK,KAClB7C,EAAc,UAAG,EAAKrH,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6BoH,eACpD,GAAgB,KAAZ4C,EAAgB,CAClBhB,EAAOS,KAAK,UACV,CACEE,IAAMK,EACNC,KAAMA,IAGV,IAAM/I,EAAY,IAAIC,QAAQ,oCAAqC,CAC7DC,OAAQ,OACR0F,QAAS,CAAE,eAAgB,oBAC3BzF,KAAM0F,KAAKC,UAAU,CACjB,QAAWI,EACX,cAAiB,EAAKpH,MAAMiK,KAC5B,UAAa,EAAKjK,MAAMuG,OACxB,SAAY,EAAKvG,MAAMiH,SACvB,QAAW+C,MAEnBzI,MAAML,GACDM,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAC,GACJ8C,QAAQC,IAAI/C,GACS,WAAhBA,EAAIE,UACHO,MAAM,2CAEjBF,OAAM,SAAC7B,GACJoE,QAAQpE,MAAMA,MAEpB,IAAM+J,EAAO,IAAI3G,KACjB,EAAK3C,SAAS,CACZyI,SAAS,GAAD,mBAAM,EAAKrJ,MAAMqJ,UAAjB,CAA2BW,IACnCV,cAAc,GAAD,mBAAM,EAAKtJ,MAAMsJ,eAAjB,CAAgC5I,IAC7C8I,WAAW,GAAD,mBAAM,EAAKxJ,MAAMwJ,YAAjB,CAA6BU,EAAKN,gBAC5CI,QAAS,UAGX9H,MAAM,yBArGQ,EAyGlBiI,WAAa,SAACJ,GACG,KAAZA,EAAEK,OACH,EAAK/D,WAzGP,EAAKrG,MAAQ,CACTuG,OAAM,UAAE,EAAKxG,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6B+B,GACrCsH,SAAW,GACXC,cAAe,GACfE,WAAY,GACZQ,QAAS,GACTC,KAAI,UAAE,EAAKlK,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6BqH,cACnCH,YAAW,UAAE,EAAKnH,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6BkH,YAC1CC,WAAU,UAAE,EAAKpH,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6BmH,WACzCF,SAAQ,UAAG,EAAKlH,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6BiH,UAE5C,EAAKzE,SAAW,EAAKA,SAASnC,KAAd,gBAChB,EAAKgG,QAAU,EAAKA,QAAQhG,KAAb,gBAdC,E,qDA+GR,IAAD,OACH2J,EAAUrJ,KAAKX,MAAMgK,QACrBX,EAAW1I,KAAKX,MAAMqJ,SACtBG,EAAa7I,KAAKX,MAAMwJ,WACxBa,EAAQ1J,KAAKX,MAAMsJ,cACvB,OACE,6BACE,kBAAC,IAAD,CAAM7G,GAAI,CAACX,SAAU,WAAY9B,MAAO,CAAC+B,GAAIpB,KAAKX,MAAMuG,UAAxD,2BACC8C,EAASpH,OAAS,EACjBoH,EAAShB,KAAI,SAACsB,EAAKpB,GAAN,OACX,6BACE,2BAAIiB,EAAWjB,IACf,2BAAI8B,EAAM9B,GAAV,MAAqBoB,OAGzB,yDACF,2BAAOlJ,MAAOuJ,EAAStJ,KAAK,UAAU8B,SAAU,SAAAuH,GAAC,OAAI,EAAKvH,SAASuH,IAAII,WAAYxJ,KAAKwJ,aACxF,4BAAQ9D,QAAS,kBAAK,EAAKA,YAA3B,gBAXF,IAW+D,kC,GAjI9C3D,IAAMC,WAuIdC,cAAWuG,GC3IpBmB,E,kDACF,WAAYvK,GAAQ,IAAD,oCACjB,cAAMA,IACDC,MAAQ,CACXuG,OAAM,UAAE,EAAKxG,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6B+B,GACrCrB,KAAM,GACN4C,SAAU,GACVL,IAAK,EACLW,IAAK,GACLC,OAAQ,SACRC,iBAAkB,SAClBC,UAAW,GACXC,UAAW,GACX7D,MAAO,GACP8D,YAAa,IAbE,E,gEAgBC,IAAD,OACX/C,EAAY,IAAIC,QAAQ,oCAAqC,CACjEC,OAAQ,OACR0F,QAAS,CAAE,eAAgB,oBAC3BzF,KAAM0F,KAAKC,UAAU,CAAC,OAAUrG,KAAKX,MAAMuG,WAE/ChF,MAAML,GACDM,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAC,GAAG,OACD,EAAKb,SAAS,CACVF,KAAMe,EAAIf,KACVuC,IAAKxB,EAAIwB,IACTW,IAAKnC,EAAImC,IACTC,OAAQpC,EAAIoC,OACZC,iBAAkBrC,EAAIqC,iBACtBC,UAAWtC,EAAIsC,UACfC,UAAWvC,EAAIuC,UACfV,SAAU7B,EAAI6B,SACdW,YAAaxC,EAAIwC,iBAE3BjC,OAAM,SAAC7B,GACLoE,QAAQpE,MAAMA,Q,+BAKpB,OACE,yBAAKgC,UAAU,WACb,kBAAC,EAAD,CAAQJ,GAAIpB,KAAKX,MAAMuG,SACvB,0BAAMxE,GAAG,eACP,+CACA,oCAECpB,KAAKX,MAAMU,KAEZ,wCACA,2BAAO4B,KAAK,OAAO5B,KAAK,WACtBD,MAAOE,KAAKX,MAAMsD,SAClBf,YAAc,eAGhB,2CAEA,4BACE7B,KAAO,SACPD,MAASE,KAAKX,MAAM6D,QAEpB,4BAAQpD,MAAM,UAAd,UACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,SAAf,UAGF,iEACA,4BACEC,KAAO,mBACPD,MAASE,KAAKX,MAAM8D,kBAEpB,4BAAQrD,MAAM,UAAd,UACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,QAAf,SAGF,8CACCE,KAAKX,MAAM+D,UAEZ,8CACCpD,KAAKX,MAAMgE,UAEZ,mCACCrD,KAAKX,MAAM4D,IAEZ,4CACA,2BAAOtB,KAAK,QAAQ5B,KAAK,cAAcD,MAASE,KAAKX,MAAMiE,YAAaE,IAAI,IAAIE,IAAI,UACpF,8BAAO1D,KAAKX,MAAMiE,YAAlB,MAAuC,8BAEzC,8BAAOtD,KAAKX,MAAMG,Y,GA5FFuC,IAAMC,WAiGjBC,cAAW0H,GChGlBC,E,kDACJ,WAAYxK,GAAQ,IAAD,oCACjB,cAAMA,IA6CN+C,aAAe,SAACvC,GAEd,GADAA,EAAMM,iBACF,EAAKkC,kBAEL,GADA,EAAKC,WACD,EAAKhD,MAAMiD,IAAM,IAAM,EAAKjD,MAAMiD,IAAM,IAAI,CAAC,IAAD,MACxClB,EAAE,UAAG,EAAKhC,aAAR,iBAAG,EAAYJ,gBAAf,iBAAG,EAAsBK,aAAzB,aAAG,EAA6B+B,GAClChB,EAAS,IAAIO,SAAUN,SAASC,eAAe,gBACrDF,EAAOmC,OAAO,KAAMnB,GACpBhB,EAAOmC,OAAO,MAAO,EAAKlD,MAAMiD,KAChC,IAAM/B,EAAY,IAAIC,QAAQ,oCAAqC,CACjEC,OAAQ,OACRC,KAAMN,IAGRQ,MAAML,GACLM,MAAK,SAACC,GAAD,OACNA,EAAIC,UACHF,MAAK,SAACC,GACe,YAAjBA,EAAIE,SACL,EAAKf,SAAS,CACZ4J,eAAgB,uCAIlB,EAAK5J,SAAS,CACZT,MAAOsB,EAAIE,cAIhBK,OAAM,SAAC7B,GACN,EAAKS,SAAS,CACZT,MAAO,yCAMf+B,MAAM,8BAnFO,EAuFjBa,eAAiB,WAEf,IADA,IAAMI,EAAS,CAAC,OAAQ,WAAY,MAAO,SAAU,mBAAoB,YAAa,aAC9EC,EAAG,EAAGA,EAAGD,EAAOlB,OAAQmB,IAC9B,IAAI,EAAKpD,MAAMmD,EAAOC,IACpB,OAAO,EAEX,OAAO,GA7FQ,EAgGjBC,aAAe,SAAC9C,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKE,SAAL,eACGF,EAAOD,KAtGK,EA0GjBuC,SAAW,WACT,IAAMM,EAAW,IAAIC,KAAK,EAAKvD,MAAMsD,UACjCE,EAAQ,IAAID,KAEZN,EAAMO,EAAMC,cAAgBH,EAASG,eACrCD,EAAME,WAAaJ,EAASI,YAAeF,EAAME,aAAeJ,EAASI,YAAcF,EAAMG,QAAUL,EAASK,aAClHV,GAAO,GAGLA,EAAM,GACRf,MAAM,uCACGe,EAAM,IACff,MAAM,sDACGe,GAAO,IAAMA,GAAO,KAE7Bf,MAAM,+BAER,EAAKlC,MAAMiD,IAAMA,GAzHnB,EAAKjD,MAAQ,CACXuG,OAAM,UAAE,EAAKxG,aAAP,iBAAE,EAAYJ,gBAAd,iBAAE,EAAsBK,aAAxB,aAAE,EAA6B+B,GACrCrB,KAAM,GACN4C,SAAU,GACVL,IAAK,EACLW,IAAK,GACLC,OAAQ,SACRC,iBAAkB,SAClBC,UAAW,GACXC,UAAW,GACX7D,MAAO,GACP8D,YAAa,GACbwG,aAAc,IAGhB,EAAK3H,aAAe,EAAKA,aAAazC,KAAlB,gBACpB,EAAKgD,aAAe,EAAKA,aAAahD,KAAlB,gBAlBH,E,gEAoBC,IAAD,OACTa,EAAY,IAAIC,QAAQ,oCAAqC,CAC/DC,OAAQ,OACR0F,QAAS,CAAE,eAAgB,oBAC3BzF,KAAM0F,KAAKC,UAAU,CAAC,OAAUrG,KAAKX,MAAMuG,WAE3ChF,MAAML,GACDM,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAC,GAAG,OACD,EAAKb,SAAS,CACVF,KAAMe,EAAIf,KACVkD,IAAKnC,EAAImC,IACTC,OAAQpC,EAAIoC,OACZC,iBAAkBrC,EAAIqC,iBACtBC,UAAWtC,EAAIsC,UACfC,UAAWvC,EAAIuC,UACfC,YAAaxC,EAAIwC,YACjBX,SAAU7B,EAAI6B,SACdkH,eAAgB,QAE9BxI,OAAM,SAAC7B,GACLoE,QAAQpE,MAAMA,Q,+BAsFxB,OAEE,yBAAKgC,UAAU,WACb,kBAAC,EAAD,CAAQJ,GAAIpB,KAAKX,MAAMuG,SACvB,0BAAMxE,GAAG,cAAcK,SAAUzB,KAAKmC,cACtC,0CAEE,oCAEA,2BAAOR,KAAK,OAAO5B,KAAK,OAAOD,MAASE,KAAKX,MAAMU,KAAM8B,SAAU7B,KAAK0C,aAAca,UAAU,OAEhG,wCAEA,2BAAO5B,KAAK,OAAO5B,KAAK,WACtBD,MAAOE,KAAKX,MAAMsD,SAClBa,IAAI,aACJ5B,YAAc,aACdC,SAAU7B,KAAK0C,eAIjB,2CAEA,4BACE3C,KAAO,SACP8B,SAAW7B,KAAK0C,aAChB5C,MAASE,KAAKX,MAAM6D,QAEpB,4BAAQpD,MAAM,UAAd,UACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,SAAf,UAGF,iEACA,4BACEC,KAAO,mBACP0D,WAAYzD,KAAKX,MAAM8D,iBACvBtB,SAAU7B,KAAK0C,aACf5C,MAASE,KAAKX,MAAM8D,kBAEpB,4BAAQrD,MAAM,UAAd,UACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,QAAf,SAGF,8CACE,2BAAO6B,KAAK,OAAO5B,KAAK,YAAYD,MAASE,KAAKX,MAAM+D,UAAWvB,SAAU7B,KAAK0C,aAAca,UAAU,OAE5G,8CACE,2BAAO5B,KAAK,OAAO5B,KAAK,YAAYD,MAAQE,KAAKX,MAAMgE,UAAWxB,SAAU7B,KAAK0C,aAAca,UAAU,QAE3G,mCACE,2BAAO5B,KAAK,OAAO5B,KAAK,MAAMD,MAASE,KAAKX,MAAM4D,IAAKpB,SAAU7B,KAAK0C,aAAca,UAAU,QAEhG,4CACE,2BAAO5B,KAAK,QAAQ5B,KAAK,cAAcD,MAASE,KAAKX,MAAMiE,YAAazB,SAAU7B,KAAK0C,aAAcc,IAAI,IAAIE,IAAI,UACjH,8BAAO1D,KAAKX,MAAMiE,YAAlB,MAAuC,6BAEzC,2BAAO3B,KAAK,SAAS7B,MAAM,WAC1BE,KAAKX,MAAMwK,qB,GA3LI9H,IAAMC,WAkMnBC,cAAW2H,GCvLLG,E,uKAGb,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,kBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,gBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,gBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,kBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,c,GAhCKjI,IAAMC,WCEvCiI,IAASC,OACP,kBAAC,EAAD,MACA7J,SAASC,eAAe,Sd+GpB,kBAAmB6J,WACrBA,UAAUC,cAAcC,MACrBxJ,MAAK,SAAAyJ,GACJA,EAAaC,gBAEdlJ,OAAM,SAAA7B,GACLoE,QAAQpE,MAAMA,EAAM6J,a","file":"static/js/main.53904d98.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"./Register.css\";\r\nimport React from \"react\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n    };\r\n    \r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.checkPasswords()) {\r\n      const myForm = document.getElementById(\"registerForm\");\r\n      const myRequest = new Request(\"http://127.0.0.1:5000/register\", {\r\n        method: \"POST\",\r\n        body: new FormData(myForm),\r\n      });\r\n      \r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") \r\n            this.props\r\n            .history.push({\r\n              pathname: \"/createprofile\",\r\n              state: {id: res.id}\r\n            });\r\n            \r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  checkPasswords() {\r\n    const password = this.state.password;\r\n    const confirmPassword = this.state.confirmPassword;\r\n    if (password.length === 0) {\r\n      alert(\"Please add password\");\r\n      return false;\r\n    } else if (confirmPassword !== password) {\r\n      alert(\"Please make sure passwords match\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Register\">\r\n          <h1> Join the Community</h1>\r\n          <form id=\"registerForm\" onSubmit={this.handleSubmit}>\r\n            <div class = \"form-group form in-line\">\r\n              <input \r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Email Address\" \r\n              />\r\n              <br></br>\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={this.state.password}\r\n                placeholder=\"Enter password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br></br>\r\n              <input\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={this.state.confirmPassword}\r\n                placeholder=\"Re-enter password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br></br>\r\n\r\n              <input type=\"submit\" value=\"Join\" />\r\n              <br></br>\r\n              <text>{this.state.error}</text>\r\n            </div>\r\n            \r\n          </form>\r\n          <Link to=\"/\">I Already Have an Account</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Register);\r\n","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n  class ProfileForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        name: \"\",\r\n        birthday: \"\",\r\n        bio: \"\",\r\n        gender: \"Female\",\r\n        genderPreference: \"Female\",\r\n        education: \"\",\r\n        interests: \"\",\r\n        error: \"\",\r\n        maxDistance: 10,\r\n        age: 0,\r\n      };\r\n\r\n      \r\n      this.handleUpdate = this.handleUpdate.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleUpdate = (event) => {\r\n      event.preventDefault();\r\n      if (this.completedInput()){\r\n          this.checkAge();\r\n          if (this.state.age > 18 && this.state.age < 100){\r\n            const id = this.props?.location?.state?.id;\r\n            const myForm = new FormData (document.getElementById(\"profileForm\"));\r\n            myForm.append(\"id\", id);\r\n            myForm.append(\"age\", this.state.age);\r\n            const myRequest = new Request(\"http://127.0.0.1:5000/createprofile\", {\r\n              method: \"POST\",\r\n              body: myForm,\r\n            });\r\n\r\n            fetch(myRequest)\r\n            .then((res) =>\r\n            res.json())\r\n            .then((res) => {\r\n              if(res.response === \"Success\"){\r\n                this.props.history.push({\r\n                  pathname: \"/questionnaire\",\r\n                  state: {id: id},\r\n                });\r\n              }\r\n              else {\r\n                this.setState({\r\n                  error: res.response,\r\n                });\r\n              }  \r\n            })\r\n            .catch((error) => {\r\n              this.setState({\r\n                error: \"Error connecting to backend\",\r\n              });\r\n            });\r\n          }\r\n        } \r\n      else{ \r\n        alert(\"Please fill in all fields\");\r\n      }\r\n    };\r\n\r\n    completedInput = () => {\r\n      const inputs = ['name', 'birthday', 'bio', 'gender', 'genderPreference', 'education', 'interests'];\r\n      for(var i =0; i <inputs.length; i++) {\r\n        if(!this.state[inputs[i]])\r\n          return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n\r\n    checkAge = () => {\r\n      const birthday = new Date(this.state.birthday);\r\n      var today = new Date();\r\n\r\n      var age = today.getFullYear() - birthday.getFullYear()\r\n      if (today.getMonth() < birthday.getMonth() || (today.getMonth() === birthday.getMonth() && today.getDate < birthday.getDate())){\r\n        age -= 1\r\n      }\r\n        \r\n      if (age < 18) {\r\n        alert(\"You need to be above 18 to register\");\r\n      } else if (age > 100) {\r\n        alert(\"Please make sure you have entered a valid birthday\");\r\n      } else if (age >= 18 && age <= 100){\r\n      }else{\r\n        alert(\"Please input valid birthday\")\r\n      }\r\n      this.state.age = age;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"Profile\">\r\n          <form id=\"profileForm\" onSubmit={this.handleUpdate}>\r\n            <h1>My Profile</h1>\r\n\r\n            <p>Name:</p>\r\n\r\n            <input type=\"text\" name=\"name\" value = {this.state.name} onChange={this.handleChange} maxlength=\"30\" />\r\n\r\n            <p>Birthday:</p>\r\n\r\n            <input type=\"date\" name=\"birthday\"\r\n              value={this.state.birthday}\r\n              min=\"1920-01-01\" \r\n              placeholder = \"YYYY-MM-DD\"\r\n              onChange={this.handleChange}\r\n              />\r\n\r\n            <p>Your Gender:</p>\r\n\r\n            <select\r\n              name = \"gender\"\r\n              onChange= {this.handleChange}\r\n              value = {this.state.gender}\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value =\"Male\">Male</option>\r\n              <option value =\"Other\">Other</option>\r\n            </select>\r\n\r\n            <p>Your Preferred Gender for friends:</p>\r\n            <select\r\n              name = \"genderPreference\"\r\n              fieldValue={this.state.genderPreference}\r\n              onChange={this.handleChange}\r\n              value = {this.state.genderPreference}\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value =\"Male\">Male</option>\r\n              <option value =\"Both\">Both</option>\r\n            </select>\r\n\r\n            <p>Education/Work:</p>\r\n            <input type=\"text\" name=\"education\" value = {this.state.education} onChange={this.handleChange} maxlength=\"30\"/>\r\n\r\n            <p>Your interests:</p>\r\n            <input type=\"text\" name=\"interests\" value ={this.state.interests} onChange={this.handleChange} maxlength=\"255\" />\r\n\r\n            <p>Bio:</p>\r\n            <input type=\"text\" name=\"bio\" value = {this.state.bio} onChange={this.handleChange} maxlength=\"255\"/>\r\n\r\n            <p>Max Distance:</p>\r\n            <input type=\"range\" name=\"maxDistance\" value = {this.state.maxDistance} onChange={this.handleChange} min=\"1\" max=\"99999\"/>\r\n            <text>{this.state.maxDistance}KM</text><br></br>\r\n\r\n            <input type=\"submit\" value=\"Update\" />\r\n          </form>\r\n          <text>{this.state.error}</text>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default withRouter(ProfileForm);","import \"./Login.css\";\r\nimport React from 'react';\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: '',\r\n      error: '',\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n      const myForm = document.getElementById('loginForm');\r\n      \r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/login', {\r\n        method: 'POST',\r\n        body: new FormData(myForm),\r\n      });\r\n      console.log(\"test\")\r\n      console.log(myRequest)\r\n      fetch(myRequest)\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\"here\");\r\n        res.json();})\r\n        .then(res => { \r\n            if(res.response === \"Success\") {\r\n              this.props\r\n                .history.push({\r\n                  pathname: \"/main\",\r\n                  state: {id: res.id}\r\n                });\r\n            }\r\n            this.setState({\r\n              error: res.response\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n          this.setState({\r\n            error: \"Error connecting to backend\"\r\n          });\r\n        });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className = \"Login\" >\r\n        <div className = \"logoBanner\">\r\n        <svg viewBox=\"0 0 500 200\">\r\n          <path id=\"curve\" fill = \"transparent\" d=\"M73.2,200.6c4-6.1,65.5-96.8,178.6-95.6c111.3,1.2,170.8,90.3,175.1,97\" />\r\n          <text width=\"500\">\r\n          <textPath href=\"#curve\">\r\n            Making friendly connections.\r\n          </textPath>\r\n            </text>\r\n        </svg>\r\n        <img src=\"ppFriendsLogo.png\"></img>\r\n        </div>\r\n        \r\n        <h1> Purely Platonic</h1>\r\n        <form id = \"loginForm\" onSubmit={this.handleSubmit}>\r\n              <input\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                /><br></br>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value = {this.state.password}\r\n                  placeholder=\"Enter password\"\r\n                  onChange={this.handleInputChange}\r\n                /><br></br>\r\n\r\n            <input type=\"submit\" value=\"Submit\" /><br></br>\r\n\r\n            <text>{this.state.error}</text>\r\n \r\n        </form>\r\n        <Link to=\"/register\">Create a new Account</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <nav>\r\n            <div className='div-header'>\r\n                <div class =\"navbar\">\r\n                    <NavLink to={{\r\n                        pathname:'/main',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Back to Swiping!</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/matches',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Matches</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/viewprofile',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">View Profile</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/editprofile',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Edit Profile</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/messages',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Messages</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/profile'}} className='inactive' activeClassName=\"active\">Settings</NavLink>\r\n                </div>\r\n                <div class=\"navbar\">\r\n                    <NavLink to={{\r\n                        pathname:'/'}} className='inactive' activeClassName=\"active\">\r\n                        <button className='button-header'>Log Out</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from './Header';\r\nimport \"./SwipeProfile.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nclass SwipeProfiles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: this.props?.location?.state?.id,\r\n      age: \"\",\r\n      firstName: \"\",\r\n      description: \"\",\r\n      interests: \"\",\r\n      gender: \"\",\r\n      workplace: \"\",\r\n      potentialFriends: [],\r\n      displayedUserId: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.getPotentialFriendList = this.getPotentialFriendList.bind(this);\r\n    this.displayProfile = this.displayProfile.bind(this);\r\n    this.handleSwipe = this.handleSwipe.bind(this);\r\n  }\r\n\r\n  getPotentialFriendList() {\r\n    const id = this.props?.location?.state?.id;\r\n    var formData = new FormData();\r\n    formData.append(\"userId\", id);\r\n    const myRequest = new Request(\"http://127.0.0.1:5000/getPotentialFriends\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          var potentialFriendsList = res.potentialListId;\r\n          const displayProfileId = potentialFriendsList.pop();\r\n          this.setState({\r\n            potentialFriends: potentialFriendsList,\r\n            displayedUserId: displayProfileId,\r\n            error: \"\",\r\n          });\r\n\r\n          this.displayProfile();\r\n        } else {\r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n  }\r\n\r\n  displayProfile() {\r\n    const displayId = this.state.displayedUserId;\r\n    if (displayId) {\r\n      var formData = new FormData();\r\n      formData.append(\"userId\", displayId);\r\n      const myRequest = new Request(\"http://127.0.0.1:5000/displayProfile\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") {\r\n            this.setState({\r\n              age: res.age,\r\n              firstName: res.firstName,\r\n              description: res.description,\r\n              interests: res.interests,\r\n              gender: res.gender,\r\n              workplace: res.workPlace,\r\n              error: \"\",\r\n            });\r\n          } else {\r\n            this.setState({\r\n              error: res.response,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        error:\r\n          \"There are no current potential friends for you within the area.\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSwipe(choice) {\r\n    console.log(choice);\r\n    const displayId = this.state.displayedUserId;\r\n    const currentUserId = this.props?.location?.state?.id;\r\n    var formData = new FormData();\r\n    formData.append(\"currentUserId\", currentUserId);\r\n    formData.append(\"shownUserId\", displayId);\r\n    formData.append(\"match\", choice);\r\n    const myRequest = new Request(\"http://127.0.0.1:5000/swipe\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          var potentialList = this.state.potentialFriends;\r\n          var newPotentialUserId = potentialList.pop();\r\n          this.setState({\r\n            potentialFriends: potentialList,\r\n            displayedUserId: newPotentialUserId,\r\n            error: \"\",\r\n          });\r\n          this.displayProfile();\r\n        } else {\r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const potentialFriends = this.state.potentialFriends;\r\n    const displayedUserId = this.state.displayedUserId;\r\n    const error = this.state.error;\r\n    if (\r\n      displayedUserId === \"\" &&\r\n      potentialFriends.length === 0 &&\r\n      error === \"\"\r\n    ) {\r\n      this.getPotentialFriendList();\r\n    }\r\n    return (\r\n      /*navigation bar and other necessary information about the match*/\r\n      <div className=\"SwipeProfile\">\r\n        <Header id={this.state.id}/>\r\n        <br></br>\r\n        <header class=\"pageTitle\">Potential Friends!</header>\r\n        <br></br>\r\n        <img src=\"ppFriendsLogo.png\"></img>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        {error ? (\r\n          <text>{error}</text>\r\n        ) : (\r\n          <div>\r\n            <p>Name: </p>\r\n            <text>{this.state.firstName}</text>\r\n            <p>Age: </p>\r\n            <text>{this.state.age}</text>\r\n            <br></br>\r\n            <div class=\"profileIntroSection\">\r\n              <br></br>\r\n              <p>Gender: </p>\r\n              <text>{this.state.gender}</text>\r\n              <p>Description: </p>\r\n              <text>{this.state.description}</text>\r\n              <p>Interests: </p>\r\n              <text>{this.state.interests}</text>\r\n              <p>Education / Work: </p>\r\n              <text>{this.state.workplace}</text>\r\n              <br></br>\r\n            </div>\r\n            <br></br>\r\n            <button\r\n              class=\"button letsTalkButton\"\r\n              onClick={() => this.handleSwipe(true)}\r\n            >\r\n              Let's Talk!\r\n            </button>{\" \"}\r\n            <br></br>\r\n            <button\r\n              class=\"button notInterestedButton\"\r\n              onClick={() => this.handleSwipe(false)}\r\n            >\r\n              Not Interested.\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SwipeProfiles);\r\n","import React from 'react';\r\nimport './Matches.css';\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\nclass Matches extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userId: this.props?.location?.state?.id,\r\n            userIds: [],\r\n            matchesExist: \"not set\",\r\n            firstnames: [],\r\n            name: \"\",\r\n        }\r\n        this.selectUser = this.selectUser.bind(this);\r\n    }\r\n    selectUser(event) {\r\n        const userSelected = event.target.value.split(\"|\");\r\n        const myRequest = new Request('http://127.0.0.1:5000/conversationId', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"userId\": this.state.userId,\r\n                \"friendId\": userSelected[0],\r\n            }),});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.props\r\n                .history.push({\r\n                  pathname: \"/messages\",\r\n                  state: {\r\n                      id: this.state.userId,\r\n                      friendId: userSelected[0],\r\n                      currentName: this.state.name,\r\n                      friendName: userSelected[1],\r\n                      currentConvoId: res.currentConvoId,\r\n                      friendConvoId: res.friendConvoId\r\n                }});\r\n            })\r\n        .catch((error) => {\r\n            alert(\"Something went wrong\");\r\n            console.error(error)\r\n        });\r\n    }\r\n\r\n    get_matches(){\r\n        const myRequest = new Request('http://127.0.0.1:5000/matches', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"userId\": this.state.userId}),\r\n            });\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => \r\n                (res.userIds && res.userIds.length != 0) ?\r\n                    this.setState({\r\n                        matchesExist: \"exists\", \r\n                        userIds: res.userIds,\r\n                        firstnames: res.firstnames,\r\n                        name: res.currentName\r\n                    })\r\n                    :\r\n                    this.setState({\r\n                        matchesExist: \"not exists\"\r\n                    })\r\n            )\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.get_matches()\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        for (var i = 0; i < this.state.userIds.length; ++i){\r\n            if (this.state.userIds[i] != prevState.userIds[i]) {\r\n                this.get_matches()\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        let matchingSection;\r\n        if (this.state.matchesExist == \"exists\"){\r\n            let userItems = [];\r\n            for (var i = 0; i < this.state.userIds.length; i++){\r\n                var pos_user = this.state.userIds[i];\r\n                userItems.push(\r\n                    <button className='pos-user' \r\n                            key={pos_user} \r\n                            value = {this.state.userIds[i]+\"|\"+this.state.firstnames[i]} \r\n                            onClick = {this.selectUser}>\r\n                        {this.state.firstnames[i]}\r\n                    </button>  \r\n                )\r\n                \r\n\r\n            }\r\n            matchingSection = <h3 id='Matches-congrats'>\r\n                <p>Congratulations,</p>\r\n                <p>you have a match!</p> \r\n                <p>\r\n                    {userItems}\r\n                </p>\r\n                </h3>\r\n        }\r\n        else if (this.state.matchesExist == \"not exists\") {\r\n            matchingSection = <h2 id='Matches-none'>\r\n                <p>Sorry, no one met the matching criteria you set.</p> \r\n                <p>We suggest you to edit your profile, or wait for more users to join our community.</p> \r\n                <p>Please try again later :(</p>\r\n            </h2>\r\n        }\r\n        else {\r\n            matchingSection = <h2></h2>\r\n        }\r\n        return(\r\n            <div id='Matches-section'>\r\n                 {matchingSection}                        \r\n\r\n                <div class = \"swipingButton\" id = 'swipingButton'>\r\n                    <Link to={{pathname: '/main', state: {id: this.state.userId}}}>Keep Swiping</Link>\r\n                </div>\r\n                <div class = \"viewProfileButton\" id = 'viewProfileButton'>\r\n                    <Link to={{pathname: '/viewprofile', state: {id: this.state.userId}}}>View Profile</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Matches)","const qBank = [\r\n    {\r\n      question:\r\n        \"What is the most important thing about a friendship to you?\",\r\n      answers: [\"Have somebody to confide in\", \"Have somebody to have fun with\"],\r\n      questionId: \"1\"\r\n    },\r\n    {\r\n      question:\r\n        'Would you rather...',\r\n      answers: [\"Have a friend who enjoys doing the same things as you\", \"Have a friend who feels the same way about life as you do\"],\r\n      questionId: \"2\"\r\n    },\r\n    {\r\n      question:\r\n        \"Which statement below do you relate the most?\",\r\n      answers: [\"I like to be close to people\", \"I like to keep my distance from people\"],\r\n      questionId: \"3\"\r\n    },\r\n    {\r\n      question: \"When you talk with friends on the phone, it is usually to?\",\r\n      answers: [\r\n        \"Make arrangements or plans\",\r\n        \"Have a conversation or chat\"\r\n      ],\r\n      questionId: \"4\"\r\n    },\r\n    {\r\n      question: \"Which statement below do you relate the most?\",\r\n      answers: [\"I like to plan where I am going and who I am going with\", \"I like to be spontaneous and just let fate decide\"],\r\n      questionId: \"5\"\r\n    },\r\n    {\r\n      question: \"You are going to the movies, which genre would you likely choose?\",\r\n      answers: [\"Action\", \"Drama\"],\r\n      questionId: \"6\"\r\n    },\r\n    {\r\n      question: \"If you are meeting a friend, what activity would you prefer doing?\",\r\n      answers: [\"Shopping\", \"Playing at the Arcade\"],\r\n      questionId: \"7\"\r\n    },\r\n    {\r\n      question: \"If you moved to a new city, which would you rather put more effort into?\",\r\n      answers: [\"Staying in touch with old friends\", \"Making new friends\"],\r\n      questionId: \"8\"\r\n    },\r\n    {\r\n      question: \"As a friend, you are someone that?\",\r\n      answers: [\"Supports others\", \"Is fun to be with\"],\r\n      questionId: \"9\"\r\n    },\r\n    {\r\n      question: \"What do you do when your friend has a problem\",\r\n      answers: [\"Discuss their feelings\", \"Come up with practical solutions\"],\r\n      questionId: \"10\"\r\n    },\r\n    {\r\n      question: \"If your friend was having personal problems, what do you do?\",\r\n      answers: [\"Wait for them to contact you\", \"Contact them to discuss the problem\"],\r\n      questionId: \"11\"\r\n    },\r\n    {\r\n      question: \"What do you do when you have a personal problem?\",\r\n      answers: [\"I work it out on my own\", \"I share it with a friend\"],\r\n      questionId: \"12\"\r\n    },\r\n    {\r\n      question: \"When talking with friends, which of the topics below are you more interested to talk about?\",\r\n      answers: [\"Political and current affairs\", \"Hobbies and interests\"],\r\n      questionId: \"13\"\r\n    },\r\n    {\r\n      question: \"When talking with friends, which of the topics below are you more interested to talk about?\",\r\n      answers: [\"Family and friends\", \"Work or school\"],\r\n      questionId: \"14\"\r\n    },\r\n    {\r\n      question: \"When talking to someone you just met, which of the topics below are you more interested to talk about?\",\r\n      answers: [\"Political and current affairs\", \"Hobbies and interests\"],\r\n      questionId: \"15\"\r\n    },\r\n    {\r\n      question: \"When talking to someone you just met, which of the topics below are you more interested to talk about?\",\r\n      answers: [\"Family and friends\", \"Work or school\"],\r\n      questionId: \"16\"\r\n    }\r\n  ];\r\n  \r\n  export default () => Promise.resolve(qBank);\r\n  ","import React, {useState} from \"react\";\r\n\r\nconst QuestionBox = ({question, options, ID, selected}) => {\r\n  return (\r\n    <div>\r\n      <div >{ID}. {question}</div>\r\n      {options.map((text, index) => (\r\n        <p>\r\n        <input type=\"radio\" value={text} name={ID} onClick={() =>{\r\n          selected(index);\r\n        }}/>\r\n          {text}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default QuestionBox;\r\n","import React, {Component} from 'react';\r\nimport questions from './questions';\r\nimport QuestionBox from './QuestionBtn';\r\nimport './Questionnaire.css';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass Questionnaire extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      questionBank: [],\r\n      response:[]\r\n    };\r\n    this.handleSubmit =this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    if(this.state.response.length >= 16){ //checks if all questions have been answered\r\n      const id = this.props?.location?.state?.id;//test ID\r\n      const myRequest = new Request ('http://127.0.0.1:5000/questionnaire',{\r\n        method: 'POST',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({\"responses\":this.state.response, \r\n                              \"userId\": id}),\r\n      });\r\n\r\n      const matchRequest = new Request ('http://127.0.0.1:5000/potentialMatch',{\r\n        method: 'POST',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({\"responses\":this.state.response, \r\n                              \"userId\": id}),\r\n      }); \r\n\r\n      fetch(myRequest)\r\n      .then((res) =>\r\n        res.json())\r\n      .then((res) =>{\r\n        if(res.response === \"Success\") {\r\n          //Once the first questionnaire API call is a success, the second matching call is nested to ensure that the two calls\r\n          //happen in succession\r\n          fetch(matchRequest)\r\n          .then((res) =>\r\n            res.json())\r\n          .then((res) => {\r\n            if(res.response === \"Success\"){\r\n              this.props\r\n              .history.push({\r\n                pathname: \"/main\",\r\n                state: {id: id}\r\n              });\r\n          }\r\n            else {\r\n              this.setState({\r\n                error: res.response,\r\n              });\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n      }\r\n      })\r\n      \r\n      .catch((error) =>{\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n    }\r\n    else{\r\n      alert(\"Please answer all questions\");\r\n    }\r\n  };\r\n\r\n  getQuestions = () => {\r\n    questions().then(question => {\r\n      this.setState({\r\n        questionBank: question\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  storeAnswer = (answer,ID) => {\r\n    this.state.response[ID-1]=answer;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div>\r\n          <h1>PP Friends Questionnaire</h1>\r\n          <h4>Please answer all questions before submitting</h4>\r\n        </div>\r\n        {this.state.questionBank.length > 0 &&\r\n          this.state.questionBank.map(({question,answers,questionId}) =>(\r\n            <QuestionBox \r\n            question={question}\r\n            options={answers}\r\n            ID={questionId}\r\n            key={questionId}\r\n            selected={answer => this.storeAnswer(answer,questionId)}\r\n            />\r\n          ))\r\n        }\r\n        <div>\r\n          <button onClick={this.handleSubmit}>Submit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Questionnaire);","import React from 'react';\r\nimport io from \"socket.io-client\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\n\r\nlet endPoint = \"http://localhost:5000\";\r\nlet socket = io.connect(`${endPoint}`);\r\n\r\nclass Messages extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        userId: this.props?.location?.state?.id,\r\n        messages : [],\r\n        messageSender: [],\r\n        timeStamps: [],\r\n        message :\"\",\r\n        room: this.props?.location?.state?.friendConvoId,\r\n        currentName: this.props?.location?.state?.currentName,\r\n        friendName: this.props?.location?.state?.friendName,\r\n        friendId:  this.props?.location?.state?.friendId,\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const currentConvoId = this.props?.location?.state?.currentConvoId;\r\n    const myRequest = new Request('http://127.0.0.1:5000/getMessages', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"convoId\": currentConvoId,})\r\n            ,});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    messages: res.messages,\r\n                    messageSender: res.fromNames,\r\n                    timeStamps: res.timeStamps,\r\n                  });\r\n\r\n                  socket.emit(\"room\", currentConvoId);\r\n                  socket.on(\"message\", msg => {\r\n                    this.setState({\r\n                        messages: [...this.state.messages, msg],\r\n                        messageSender: [...this.state.messageSender, this.state.friendName],\r\n                        timeStamps: [...this.state.timeStamps, new Date().toUTCString()],\r\n                      });\r\n                });\r\n            })\r\n        .catch((error) => {\r\n            console.error(error)\r\n        });\r\n  };\r\n\r\n  componentWillUnmount= () => {\r\n    const currentRoom = this.state.currentConvoId;\r\n    socket.emit(\"leaveRoom\", currentRoom);\r\n  }\r\n\r\n\r\n  // On Change\r\n  onChange = e => {\r\n    this.setState({\r\n      message: e.target.value\r\n    });\r\n  };\r\n\r\n  // On Click\r\n  onClick = () => {\r\n    const message = this.state.message;\r\n    const name = this.state.currentName;\r\n    const room = this.state.room;\r\n    const currentConvoId = this.props?.location?.state?.currentConvoId;\r\n    if (message !== \"\") {\r\n      socket.emit(\"message\", \r\n        {\r\n          msg: (message),\r\n          room: room,\r\n        }\r\n      );\r\n      const myRequest = new Request('http://127.0.0.1:5000/sendMessage', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"convoId\": currentConvoId,\r\n                \"friendConvoId\": this.state.room,\r\n                \"currentId\": this.state.userId,\r\n                \"friendId\": this.state.friendId,\r\n                \"message\": message\r\n            }),});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n              console.log(res);\r\n                if(res.response != \"Success\")\r\n                    alert(\"Something went wrong sending message\");\r\n            })\r\n        .catch((error) => {\r\n            console.error(error)\r\n        });\r\n      const date = new Date();\r\n      this.setState({\r\n        messages: [...this.state.messages, message],\r\n        messageSender: [...this.state.messageSender, name],\r\n        timeStamps: [...this.state.timeStamps, date.toUTCString()],\r\n        message: \"\",\r\n      });\r\n    } else {\r\n      alert(\"Please Add A Message\");\r\n    }\r\n  };\r\n\r\n  onKeyPress = (e) => {\r\n    if(e.which === 13) {\r\n      this.onClick();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var message = this.state.message;\r\n    var messages = this.state.messages;\r\n    var timeStamps = this.state.timeStamps;\r\n    var names = this.state.messageSender;\r\n    return (\r\n      <div>\r\n        <Link to={{pathname: '/matches', state: {id: this.state.userId}}}>Back to Matches matches</Link>\r\n        {messages.length > 0 ?\r\n          messages.map((msg, index) => (\r\n            <div>\r\n              <p>{timeStamps[index]}</p>\r\n              <p>{names[index]} : {msg}</p>\r\n            </div>\r\n          )):\r\n          <header>Start a conversation!</header>}\r\n        <input value={message} name=\"message\" onChange={e => this.onChange(e)} onKeyPress={this.onKeyPress} />\r\n        <button onClick={() =>this.onClick()} >Send Message</button> <br></br>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withRouter(Messages);","import React from \"react\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport Header from './Header'\r\n\r\nclass ViewProfile extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        userId: this.props?.location?.state?.id,\r\n        name: \"\",\r\n        birthday: \"\",\r\n        age: 0,\r\n        bio: \"\",\r\n        gender: \"Female\",\r\n        genderPreference: \"Female\",\r\n        education: \"\",\r\n        interests: \"\",\r\n        error: \"\",\r\n        maxDistance: 10,\r\n      };\r\n    }\r\n    componentDidMount(){\r\n      const myRequest = new Request('http://127.0.0.1:5000/viewprofile', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\"userId\": this.state.userId}),\r\n        });\r\n    fetch(myRequest)\r\n        .then(response => response.json())\r\n        .then(res => \r\n                this.setState({\r\n                    name: res.name,\r\n                    age: res.age, \r\n                    bio: res.bio,\r\n                    gender: res.gender,\r\n                    genderPreference: res.genderPreference,\r\n                    education: res.education, \r\n                    interests: res.interests,\r\n                    birthday: res.birthday,\r\n                    maxDistance: res.maxDistance,\r\n                })\r\n        ).catch((error) => {\r\n            console.error(error)\r\n        })\r\n      }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"Profile\">\r\n          <Header id={this.state.userId}/>\r\n          <form id=\"profileForm\">\r\n            <h1>View My Profile</h1>\r\n            <p>Name:</p>\r\n\r\n            {this.state.name}\r\n\r\n            <p>Birthday:</p>\r\n            <input type=\"date\" name=\"birthday\"\r\n              value={this.state.birthday}\r\n              placeholder = \"YYYY-MM-DD\"\r\n              />\r\n\r\n            <p>Your Gender:</p>\r\n\r\n            <select\r\n              name = \"gender\"\r\n              value = {this.state.gender}\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value =\"Male\">Male</option>\r\n              <option value =\"Other\">Other</option>\r\n            </select>\r\n\r\n            <p>Your Preferred Gender for friends:</p>\r\n            <select\r\n              name = \"genderPreference\"\r\n              value = {this.state.genderPreference}\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value =\"Male\">Male</option>\r\n              <option value =\"Both\">Both</option>\r\n            </select>\r\n\r\n            <p>Education/Work:</p>\r\n            {this.state.education}\r\n\r\n            <p>Your interests:</p>\r\n            {this.state.interests}\r\n\r\n            <p>Bio:</p>\r\n            {this.state.bio}\r\n\r\n            <p>Max Distance:</p>\r\n            <input type=\"range\" name=\"maxDistance\" value = {this.state.maxDistance} min=\"1\" max=\"99999\"/>\r\n            <text>{this.state.maxDistance}KM</text><br></br>\r\n          </form>\r\n          <text>{this.state.error}</text>\r\n        </div>\r\n      );\r\n  };\r\n}\r\nexport default withRouter(ViewProfile);\r\n","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport Header from './Header'\r\n\r\n  class EditProfile extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        userId: this.props?.location?.state?.id,\r\n        name: \"\",\r\n        birthday: \"\",\r\n        age: 0,\r\n        bio: \"\",\r\n        gender: \"Female\",\r\n        genderPreference: \"Female\",\r\n        education: \"\",\r\n        interests: \"\",\r\n        error: \"\",\r\n        maxDistance: 10,\r\n        updateStatus: \"\",\r\n      };\r\n\r\n      this.handleUpdate = this.handleUpdate.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        const myRequest = new Request('http://127.0.0.1:5000/viewprofile', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"userId\": this.state.userId}),\r\n            });\r\n            fetch(myRequest)\r\n                .then(response => response.json())\r\n                .then(res => \r\n                        this.setState({\r\n                            name: res.name,\r\n                            bio: res.bio,\r\n                            gender: res.gender,\r\n                            genderPreference: res.genderPreference,\r\n                            education: res.education, \r\n                            interests: res.interests,\r\n                            maxDistance: res.maxDistance,\r\n                            birthday: res.birthday,\r\n                            updatedMessage: \"\",\r\n                        })\r\n            ).catch((error) => {\r\n                console.error(error)\r\n        })\r\n\r\n      }\r\n\r\n      handleUpdate = (event) => {\r\n        event.preventDefault();\r\n        if (this.completedInput()){\r\n            this.checkAge();\r\n            if (this.state.age > 18 && this.state.age < 100){\r\n              const id = this.props?.location?.state?.id;\r\n              const myForm = new FormData (document.getElementById(\"profileForm\"));\r\n              myForm.append(\"id\", id);\r\n              myForm.append(\"age\", this.state.age);\r\n              const myRequest = new Request(\"http://127.0.0.1:5000/editprofile\", {\r\n                method: \"POST\",\r\n                body: myForm,\r\n              });\r\n  \r\n              fetch(myRequest)\r\n              .then((res) =>\r\n              res.json())\r\n              .then((res) => {\r\n                if(res.response === \"Success\"){\r\n                  this.setState({\r\n                    updatedMessage: \"Successfully updated your profile!\"\r\n                  })\r\n                }\r\n                else {\r\n                  this.setState({\r\n                    error: res.response,\r\n                  });\r\n                }  \r\n              })\r\n              .catch((error) => {\r\n                this.setState({\r\n                  error: \"Error connecting to backend\",\r\n                });\r\n              });\r\n            }\r\n          } \r\n        else{ \r\n          alert(\"Please fill in all fields\");\r\n        }\r\n      };\r\n  \r\n      completedInput = () => {\r\n        const inputs = ['name', 'birthday', 'bio', 'gender', 'genderPreference', 'education', 'interests'];\r\n        for(var i =0; i <inputs.length; i++) {\r\n          if(!this.state[inputs[i]])\r\n            return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n  \r\n        this.setState({\r\n          [name]: value,\r\n        });\r\n      }\r\n  \r\n      checkAge = () => {\r\n        const birthday = new Date(this.state.birthday);\r\n        var today = new Date();\r\n  \r\n        var age = today.getFullYear() - birthday.getFullYear()\r\n        if (today.getMonth() < birthday.getMonth() || (today.getMonth() === birthday.getMonth() && today.getDate < birthday.getDate())){\r\n          age -= 1\r\n        }\r\n          \r\n        if (age < 18) {\r\n          alert(\"You need to be above 18 to register\");\r\n        } else if (age > 100) {\r\n          alert(\"Please make sure you have entered a valid birthday\");\r\n        } else if (age >= 18 && age <= 100){\r\n        }else{\r\n          alert(\"Please input valid birthday\")\r\n        }\r\n        this.state.age = age;\r\n      }\r\n\r\n    render() {\r\n      return (\r\n          \r\n        <div className=\"Profile\">\r\n          <Header id={this.state.userId}/>\r\n          <form id=\"profileForm\" onSubmit={this.handleUpdate}>\r\n          <h1>My Profile</h1>\r\n\r\n            <p>Name:</p>\r\n\r\n            <input type=\"text\" name=\"name\" value = {this.state.name} onChange={this.handleChange} maxlength=\"30\" />\r\n\r\n            <p>Birthday:</p>\r\n\r\n            <input type=\"date\" name=\"birthday\"\r\n              value={this.state.birthday}\r\n              min=\"1920-01-01\" \r\n              placeholder = \"YYYY-MM-DD\"\r\n              onChange={this.handleChange}\r\n              />\r\n\r\n\r\n            <p>Your Gender:</p>\r\n\r\n            <select\r\n              name = \"gender\"\r\n              onChange= {this.handleChange}\r\n              value = {this.state.gender}\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value =\"Male\">Male</option>\r\n              <option value =\"Other\">Other</option>\r\n            </select>\r\n\r\n            <p>Your Preferred Gender for friends:</p>\r\n            <select\r\n              name = \"genderPreference\"\r\n              fieldValue={this.state.genderPreference}\r\n              onChange={this.handleChange}\r\n              value = {this.state.genderPreference}\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value =\"Male\">Male</option>\r\n              <option value =\"Both\">Both</option>\r\n            </select>\r\n\r\n            <p>Education/Work:</p>\r\n              <input type=\"text\" name=\"education\" value = {this.state.education} onChange={this.handleChange} maxlength=\"30\"/>\r\n\r\n            <p>Your interests:</p>\r\n              <input type=\"text\" name=\"interests\" value ={this.state.interests} onChange={this.handleChange} maxlength=\"255\" />\r\n\r\n            <p>Bio:</p>\r\n              <input type=\"text\" name=\"bio\" value = {this.state.bio} onChange={this.handleChange} maxlength=\"255\"/>\r\n\r\n            <p>Max Distance:</p>\r\n              <input type=\"range\" name=\"maxDistance\" value = {this.state.maxDistance} onChange={this.handleChange} min=\"1\" max=\"99999\"/>\r\n              <text>{this.state.maxDistance}KM</text><br></br>\r\n\r\n            <input type=\"submit\" value=\"Update\" />\r\n            {this.state.updatedMessage}\r\n            </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default withRouter(EditProfile);\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\nimport ProfileForm from \"./CreateProfile\"\r\nimport Login from \"./Login\";\r\nimport SwipeProfiles from \"./SwipeProfiles\";\r\nimport Matches from \"./Matches\";\r\nimport Questionnaire from './Questionnaire';\r\nimport Messages from './Messages';\r\nimport ViewProfile from './ViewProfile';\r\nimport EditProfile from './EditProfile';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/createprofile\">\r\n                            <ProfileForm />\r\n                        </Route>\r\n                        <Route path=\"/viewprofile\">\r\n                            <ViewProfile />\r\n                        </Route>\r\n                        <Route path=\"/editprofile\">\r\n                            <EditProfile />\r\n                        </Route>\r\n                        <Route path=\"/register\">\r\n                            <Register />\r\n                        </Route>\r\n                        <Route path=\"/main\">\r\n                            <SwipeProfiles />\r\n                        </Route>\r\n                        <Route path=\"/matches\">\r\n                            <Matches />\r\n                        </Route>\r\n                        <Route path=\"/questionnaire\">\r\n                            <Questionnaire />\r\n                        </Route>\r\n                        <Route path=\"/messages\">\r\n                            <Messages />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <Login />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\n\r\n// const express = require('express')\r\n// const path = require('path')\r\n// const PORT = process.env.PORT || 5000\r\n\r\n// express()\r\n//   .use(express.static(path.join(__dirname, 'public')))\r\n//   .set('views', path.join(__dirname, 'views'))\r\n//   .set('view engine', 'ejs')\r\n//   .get('/', (req, res) => res.render('pages/index'))\r\n//   .listen(PORT, () => console.log(`Listening on ${ PORT }`))\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}