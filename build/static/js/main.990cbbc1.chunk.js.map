{"version":3,"sources":["serviceWorker.js","cookies.js","Register/Register.js","Profile/CreateProfile.js","Login/Login.js","Header/Header.js","Swiping/SwipeProfiles.js","GetLocation.js","Matches/Matches.js","Questionnaire/questions.js","Questionnaire/QuestionBtn.js","Questionnaire/Questionnaire.js","Messaging/Messages.js","Profile/ViewProfile.js","Profile/EditProfile.js","Setting/UpdateEmail.js","Setting/UpdatePassword.js","Matches/ViewFriendProfile.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","setCookie","cname","cvalue","document","cookie","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","clearCookies","cookies","spcook","Register","props","state","password","confirmPassword","error","handleInputChange","bind","handleSubmit","event","target","value","this","setState","preventDefault","checkPasswords","myForm","getElementById","myRequest","Request","method","body","FormData","fetch","then","res","json","response","id","history","push","pathname","catch","alert","className","onSubmit","class","type","placeholder","onChange","to","React","Component","withRouter","ProfileForm","handleUpdate","completedInput","checkAge","age","append","inputs","handleChange","birthday","Date","today","getFullYear","getMonth","getDate","bio","gender","genderPreference","education","interests","maxDistance","src","maxlength","min","fieldValue","max","Login","viewBox","fill","d","width","href","Header","activeClassName","friendId","replace","SwipeProfiles","firstName","description","workplace","potentialFriends","displayedUserId","getPotentialFriendList","displayProfile","handleSwipe","formData","potentialFriendsList","potentialListId","displayProfileId","pop","displayId","workPlace","choice","currentUserId","potentialList","newPotentialUserId","storedLocation","storedLongitude","storedLatitude","navigator","geolocation","Promise","rej","getCurrentPosition","timeout","undefined","currentLocation","currentLongitude","coords","longitude","currentLatitude","latitude","checkValidLongitude","isFinite","Math","abs","checkValidLatitude","JSON","stringify","userID","console","log","alt","onClick","Matches","userId","userIds","matchesExist","firstnames","selectUser","userSelected","headers","currentName","friendName","currentConvoId","friendConvoId","notMessagedUserIds","notMessagedUserNames","messagedUserIds","messagedUserNames","messageIds","messageSender","messageContent","timeStamp","get_matches","prevProps","prevState","matchingSection","messagedUserItems","notMessagedUserItems","pos_user","messageSenderName","get_button_colour","join","key","qBank","question","answers","questionId","QuestionBox","options","ID","selected","map","text","index","Questionnaire","getQuestions","resolve","questionBank","storeAnswer","answer","responses","matchRequest","socket","io","connect","Messages","scrollToBottom","messagesEnd","scrollIntoView","behavior","componentDidMount","messages","fromNames","timeStamps","emit","on","msg","toUTCString","componentWillUnmount","currentRoom","e","message","room","date","onKeyPress","which","names","style","float","clear","ref","el","ViewProfile","for","EditProfile","updatedMessage","updateStatus","contenteditable","UpdateEmail","email","UpdatePassword","oldPassword","newPassword","ViewFriendProfile","selectUserMessage","displayName","App","path","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.990cbbc1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export function setCookie(cname,cvalue) {\r\n    window.document.cookie = cname + \"=\" + cvalue + \";\";\r\n  }\r\n  \r\nexport function getCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(window.document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i < ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  export function clearCookies() {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++){   \r\n        var spcook =  cookies[i].split(\"=\");\r\n        document.cookie = spcook[0] + \"=;expires=Thu, 21 Sep 1979 00:00:01 UTC;\";                                \r\n    }\r\n  }","import \"./Register.css\";\r\nimport React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { setCookie, clearCookies } from \"../cookies\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.checkPasswords()) {\r\n      const myForm = document.getElementById(\"registerForm\");\r\n      const myRequest = new Request(\"https://pp-friends.herokuapp.com/register\", {\r\n        method: \"POST\",\r\n        body: new FormData(myForm),\r\n      });\r\n\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") {\r\n            setCookie(\"userId\", res.id);\r\n            this.props.history.push({\r\n              pathname: \"/createprofile\",\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  checkPasswords() {\r\n    const password = this.state.password;\r\n    const confirmPassword = this.state.confirmPassword;\r\n    if (password.length === 0) {\r\n      alert(\"Please add password\");\r\n      return false;\r\n    } else if (confirmPassword !== password) {\r\n      alert(\"Please make sure passwords match\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    clearCookies();\r\n    return (\r\n      <div className=\"Register\">\r\n        <h1> Join the Community</h1>\r\n        <form id=\"registerForm\" onSubmit={this.handleSubmit}>\r\n          <div class=\"form-group form in-line\">\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email Address\" />\r\n            <br></br>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              placeholder=\"Enter password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <br></br>\r\n            <input\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              value={this.state.confirmPassword}\r\n              placeholder=\"Re-enter password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <br></br>\r\n\r\n            <input type=\"submit\" value=\"Join\" />\r\n            <br></br>\r\n            <text>{this.state.error}</text>\r\n          </div>\r\n        </form>\r\n        <Link to=\"/\">I Already Have an Account</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Register);\r\n","import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\n\r\nclass ProfileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: getCookie(\"userId\"),\r\n      name: \"\",\r\n      birthday: \"\",\r\n      bio: \"\",\r\n      gender: \"Female\",\r\n      genderPreference: \"Female\",\r\n      education: \"\",\r\n      interests: \"\",\r\n      error: \"\",\r\n      maxDistance: 10,\r\n      age: 0,\r\n    };\r\n\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleUpdate = (event) => {\r\n    event.preventDefault();\r\n    if (this.completedInput()) {\r\n      this.checkAge();\r\n      if (this.state.age > 18 && this.state.age < 100) {\r\n        const id = this.state.id;\r\n        const myForm = new FormData(document.getElementById(\"profileForm\"));\r\n        myForm.append(\"id\", id);\r\n        myForm.append(\"age\", this.state.age);\r\n        const myRequest = new Request(\"https://pp-friends.herokuapp.com/createprofile\", {\r\n          method: \"POST\",\r\n          body: myForm,\r\n        });\r\n\r\n        fetch(myRequest)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res.response === \"Success\") {\r\n              this.props.history.push({\r\n                pathname: \"/questionnaire\",\r\n              });\r\n            } else {\r\n              this.setState({\r\n                error: res.response,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              error: \"Error connecting to backend\",\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"Please fill in all fields\");\r\n    }\r\n  };\r\n\r\n  completedInput = () => {\r\n    const inputs = [\r\n      \"name\",\r\n      \"birthday\",\r\n      \"bio\",\r\n      \"gender\",\r\n      \"genderPreference\",\r\n      \"education\",\r\n      \"interests\",\r\n    ];\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (!this.state[inputs[i]]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  checkAge = () => {\r\n    const birthday = new Date(this.state.birthday);\r\n    var today = new Date();\r\n\r\n    var age = today.getFullYear() - birthday.getFullYear();\r\n    if (\r\n      today.getMonth() < birthday.getMonth() ||\r\n      (today.getMonth() === birthday.getMonth() &&\r\n        today.getDate < birthday.getDate())\r\n    ) {\r\n      age -= 1;\r\n    }\r\n\r\n    if (age < 18) {\r\n      alert(\"You need to be above 18 to register\");\r\n    } else if (age > 100) {\r\n      alert(\"Please make sure you have entered a valid birthday\");\r\n    } else if (age >= 18 && age <= 100) {\r\n    } else {\r\n      alert(\"Please input valid birthday\");\r\n    }\r\n    this.state.age = age;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Profile\">\r\n        <form id=\"profileForm\" onSubmit={this.handleUpdate}>\r\n          <h1>My Profile 👋</h1>\r\n          <img src=\"ppFriendsLogo.png\"></img>\r\n          <br></br>\r\n          <p>Name 😀</p>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            maxlength=\"30\"\r\n          />\r\n\r\n          <p>Birthday 🎂</p>\r\n\r\n          <input\r\n            type=\"date\"\r\n            name=\"birthday\"\r\n            value={this.state.birthday}\r\n            min=\"1920-01-01\"\r\n            placeholder=\"YYYY-MM-DD\"\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <p>Your Gender 👫</p>\r\n\r\n          <select\r\n            name=\"gender\"\r\n            onChange={this.handleChange}\r\n            value={this.state.gender}\r\n          >\r\n            <option value=\"Female\">Female</option>\r\n            <option value=\"Male\">Male</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n\r\n          <p>Your Preferred Gender for friends</p>\r\n          <select\r\n            name=\"genderPreference\"\r\n            fieldValue={this.state.genderPreference}\r\n            onChange={this.handleChange}\r\n            value={this.state.genderPreference}\r\n          >\r\n            <option value=\"Female\">Female</option>\r\n            <option value=\"Male\">Male</option>\r\n            <option value=\"Both\">Both</option>\r\n          </select>\r\n\r\n          <p>Education/Work 💻</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"education\"\r\n            value={this.state.education}\r\n            onChange={this.handleChange}\r\n            maxlength=\"30\"\r\n          />\r\n\r\n          <p>Your interests 🎨</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"interests\"\r\n            value={this.state.interests}\r\n            onChange={this.handleChange}\r\n            maxlength=\"255\"\r\n          />\r\n\r\n          <p>Bio 😶</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"bio\"\r\n            value={this.state.bio}\r\n            onChange={this.handleChange}\r\n            maxlength=\"255\"\r\n          />\r\n\r\n          <p>Max Distance 🌎</p>\r\n          <input\r\n            type=\"range\"\r\n            name=\"maxDistance\"\r\n            value={this.state.maxDistance}\r\n            onChange={this.handleChange}\r\n            min=\"1\"\r\n            max=\"500\"\r\n          />\r\n          <text>{this.state.maxDistance}KM</text>\r\n          <br></br>\r\n          <br></br>\r\n          <input type=\"submit\" value=\"Get Started!\" />\r\n        </form>\r\n        <text>{this.state.error}</text>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProfileForm);\r\n","import \"./Login.css\";\r\nimport React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { setCookie, clearCookies } from \"../cookies\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const myForm = document.getElementById(\"loginForm\");\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/login\", {\r\n      method: \"POST\",\r\n      body: new FormData(myForm),\r\n    });\r\n\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          setCookie(\"userId\", res.id);\r\n          this.props.history.push({\r\n            pathname: \"/main\",\r\n          });\r\n        }\r\n        this.setState({\r\n          error: res.response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    clearCookies();\r\n\r\n    return (\r\n      <div className=\"Login\">\r\n        <div className=\"logoBanner\">\r\n          <svg viewBox=\"0 0 500 200\">\r\n            <path\r\n              id=\"curve\"\r\n              fill=\"transparent\"\r\n              d=\"M73.2,200.6c4-6.1,65.5-96.8,178.6-95.6c111.3,1.2,170.8,90.3,175.1,97\"\r\n            />\r\n            <text width=\"500\">\r\n              <textPath href=\"#curve\">Making friendly connections.</textPath>\r\n            </text>\r\n          </svg>\r\n          <img src=\"ppFriendsLogo.png\"></img>\r\n        </div>\r\n\r\n        <h1> Purely Platonic</h1>\r\n        <form id=\"loginForm\" onSubmit={this.handleSubmit}>\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email Address\" />\r\n          <br></br>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            placeholder=\"Enter password\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br></br>\r\n\r\n          <input type=\"submit\" value=\"Login\" />\r\n          <br></br>\r\n\r\n          <text>{this.state.error}</text>\r\n        </form>\r\n        <Link to=\"/register\">Create a new Account</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <nav>\r\n            <div className='div-header'>\r\n                <div class =\"navbar\">\r\n                    <NavLink to={{\r\n                        pathname:'/main',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Back to Swiping!</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/matches',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Matches</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/viewprofile',\r\n                        state:{id: props.id, friendId: -1}}} className='inactive' activeClassName=\"active\" replace>View Profile</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/editprofile',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Edit Profile</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/updateEmail'}} className='inactive' activeClassName=\"active\">Change Email</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/updatePassword'}} className='inactive' activeClassName=\"active\">Change Password</NavLink>\r\n                </div>\r\n                <div class=\"navbar\">\r\n                    <NavLink to={{\r\n                        pathname:'/login'}} className='inactive' activeClassName=\"active\">\r\n                        <button className='button-header'>Log Out</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport \"./SwipeProfile.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie, setCookie } from \"../cookies\";\r\nimport { getLocation } from \"../GetLocation\";\r\n\r\nclass SwipeProfiles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: getCookie(\"userId\"),\r\n      age: \"\",\r\n      firstName: \"\",\r\n      description: \"\",\r\n      interests: \"\",\r\n      gender: \"\",\r\n      workplace: \"\",\r\n      potentialFriends: [],\r\n      displayedUserId: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.getPotentialFriendList = this.getPotentialFriendList.bind(this);\r\n    this.displayProfile = this.displayProfile.bind(this);\r\n    this.handleSwipe = this.handleSwipe.bind(this);\r\n  }\r\n\r\n  getPotentialFriendList() {\r\n    const id = this.state.id;\r\n    var formData = new FormData();\r\n    formData.append(\"userId\", id);\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/getPotentialFriends\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          var potentialFriendsList = res.potentialListId;\r\n          const displayProfileId = potentialFriendsList.pop();\r\n          this.setState({\r\n            potentialFriends: potentialFriendsList,\r\n            displayedUserId: displayProfileId,\r\n            error: \"\",\r\n          });\r\n\r\n          this.displayProfile();\r\n        } else {\r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n  }\r\n\r\n  displayProfile() {\r\n    const displayId = this.state.displayedUserId;\r\n    if (displayId) {\r\n      var formData = new FormData();\r\n      formData.append(\"userId\", displayId);\r\n      const myRequest = new Request(\"https://pp-friends.herokuapp.com/displayProfile\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") {\r\n            this.setState({\r\n              age: res.age,\r\n              firstName: res.firstName,\r\n              description: res.description,\r\n              interests: res.interests,\r\n              gender: res.gender,\r\n              workplace: res.workPlace,\r\n              error: \"\",\r\n            });\r\n          } else {\r\n            this.setState({\r\n              error: res.response,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        error: (\r\n          <p>\r\n            <img src=\"sad-penguin.svg\"></img>\r\n            <br></br>\r\n            There are no current potential friends for you within the area.{\" \"}\r\n            <br></br>Try updating your profile or come back later!\r\n          </p>\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSwipe(choice) {\r\n    const displayId = this.state.displayedUserId;\r\n    const currentUserId = this.state.id;\r\n    var formData = new FormData();\r\n    formData.append(\"currentUserId\", currentUserId);\r\n    formData.append(\"shownUserId\", displayId);\r\n    formData.append(\"match\", choice);\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/swipe\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          var potentialList = this.state.potentialFriends;\r\n          var newPotentialUserId = potentialList.pop();\r\n          this.setState({\r\n            potentialFriends: potentialList,\r\n            displayedUserId: newPotentialUserId,\r\n            error: \"\",\r\n          });\r\n          this.displayProfile();\r\n        } else {\r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const storedLocation = getCookie(\"location\");\r\n    const storedLongitude = storedLocation[0];\r\n    const storedLatitude = storedLocation[1];\r\n\r\n    var currentLocation = await getLocation();\r\n\r\n    if (currentLocation != undefined) {\r\n      const currentLongitude = currentLocation?.coords?.longitude;\r\n      const currentLatitude = currentLocation?.coords?.latitude;\r\n\r\n      var checkValidLongitude =\r\n        isFinite(currentLongitude) && Math.abs(currentLongitude) <= 180;\r\n      var checkValidLatitude =\r\n        isFinite(currentLatitude) && Math.abs(currentLatitude) <= 90;\r\n\r\n      if (checkValidLongitude && checkValidLatitude) {\r\n        if (\r\n          storedLongitude === currentLongitude &&\r\n          storedLatitude === currentLatitude\r\n        ) {\r\n        } else {\r\n          const id = this.state.id;\r\n          setCookie(\"longitude\", currentLongitude);\r\n          setCookie(\"latitude\", currentLatitude);\r\n\r\n          const myRequest = new Request(\"https://pp-friends.herokuapp.com/location\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userID: id,\r\n              longitude: currentLongitude,\r\n              latitude: currentLatitude,\r\n            }),\r\n          });\r\n\r\n          fetch(myRequest)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n              if (res.response === \"Success\") {\r\n                console.log(\"updated location\");\r\n              } else {\r\n                console.log(\"error location update\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.setState({\r\n                error: \"Error connecting to backend\",\r\n              });\r\n            });\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"error getting user location\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const id = this.state.id;\r\n    const potentialFriends = this.state.potentialFriends;\r\n    const displayedUserId = this.state.displayedUserId;\r\n    const error = this.state.error;\r\n\r\n    if (id === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      displayedUserId === \"\" &&\r\n      potentialFriends.length === 0 &&\r\n      error === \"\"\r\n    ) {\r\n      this.getPotentialFriendList();\r\n    }\r\n\r\n    return (\r\n      <div className=\"SwipeProfile\">\r\n        <Header id={this.state.id} />\r\n\r\n        <br></br>\r\n        <header class=\"pageTitle\">Potential Friends!</header>\r\n        <br></br>\r\n\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        {error ? (\r\n          <text>{error}</text>\r\n        ) : (\r\n          <div>\r\n            <img src=\"ppFriendsLogo.png\"></img>\r\n            <h1>A potential Friend!</h1>\r\n            <div class=\"row\">\r\n              <div class=\"column left\">\r\n                <div class=\"profileLeft\">\r\n                  <img src=\"profilepic.png\" alt=\"profilepic\" width=\"150\"></img>\r\n                  <h1>\r\n                    {this.state.firstName}, ({this.state.age})\r\n                  </h1>\r\n                  <button\r\n                    class=\"button letsTalkButton\"\r\n                    onClick={() => this.handleSwipe(true)}\r\n                  >\r\n                    Let's Talk\r\n                  </button>\r\n                  <br></br>\r\n\r\n                  <button\r\n                    class=\"button notInterestedButton\"\r\n                    onClick={() => this.handleSwipe(false)}\r\n                  >\r\n                    Not Interested\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"column right\">\r\n                <div class=\"profileIntroSection\">\r\n                  <p>Gender 👫 </p>\r\n                  <text>{this.state.gender}</text>\r\n                  <p>Biography 😶 </p>\r\n                  <text>{this.state.description}</text>\r\n                  <p>Interests 🎨 </p>\r\n                  <text>{this.state.interests}</text>\r\n                  <p>Education / Work 💻 </p>\r\n                  <text>{this.state.workplace}</text>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SwipeProfiles);\r\n","export function getLocation(){\r\n\r\n    if (navigator.geolocation){\r\n\r\n        return new Promise ((res,rej) => {\r\n            navigator.geolocation.getCurrentPosition(res, rej, {timeout:10000})\r\n        })\r\n \r\n    }\r\n    else{\r\n        return \"Error: browser does not support geolocation\";\r\n    }\r\n   \r\n}","import React from \"react\";\r\nimport \"./Matches.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\n\r\nclass Matches extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userId: getCookie(\"userId\"),\r\n            userIds: [],\r\n            matchesExist: \"not set\",\r\n            firstnames: [],\r\n            name: \"\",\r\n            userIds: [],\r\n            notMessagedUserIds: [],\r\n            notMessagedUserNames: [],\r\n            messagedUserIds: [],\r\n            messagedUserNames: [],\r\n            messageIds: [],\r\n            messageSender: [],\r\n            messageContent: [],\r\n            timeStamp: [],\r\n        }\r\n        this.selectUser = this.selectUser.bind(this);\r\n    }\r\n    selectUser(event) {\r\n        const userSelected = event.target.value.split(\"|\");\r\n        const myRequest = new Request('https://pp-friends.herokuapp.com/conversationId', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"userId\": this.state.userId,\r\n                \"friendId\": userSelected[0],\r\n            }),});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.props\r\n                .history.push({\r\n                  pathname: \"/messages\",\r\n                  state: {\r\n                      friendId: userSelected[0],\r\n                      currentName: this.state.name,\r\n                      friendName: userSelected[1],\r\n                      currentConvoId: res.currentConvoId,\r\n                      friendConvoId: res.friendConvoId\r\n                }});\r\n            })\r\n        .catch((error) => {\r\n            alert(\"Something went wrong\");\r\n            console.error(error)\r\n        });\r\n  }\r\n\r\n    get_matches(){\r\n        const myRequest = new Request('https://pp-friends.herokuapp.com/matches', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"userId\": this.state.userId}),\r\n            });\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => \r\n                (res.userIds && res.userIds.length != 0) ?\r\n                    this.setState({\r\n                        name: res.currentName,\r\n                        matchesExist: \"exists\", \r\n                        userIds: res.userIds,\r\n                        notMessagedUserIds: res.notMessagedUserIds,\r\n                        notMessagedUserNames: res.notMessagedUserNames,\r\n                        messagedUserIds: res.messagedUserIds,\r\n                        messagedUserNames: res.messagedUserNames,\r\n                        messageIds: res.messageIds,\r\n                        messageSender: res.messageSender,\r\n                        messageContent: res.messageContent,\r\n                        timeStamp: res.timeStamp,\r\n                    })\r\n                    :\r\n                    this.setState({\r\n                        matchesExist: \"not exists\"\r\n                    })\r\n            )\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.get_matches();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    for (var i = 0; i < this.state.userIds.length; ++i) {\r\n      if (this.state.userIds[i] != prevState.userIds[i]) {\r\n        this.get_matches();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  get_button_colour(i){\r\n    let buttonColour\r\n    if (i%2 == 0){\r\n        buttonColour = \"blue\"\r\n    }\r\n    else {\r\n        buttonColour = \"yellow\"\r\n    }\r\n    return buttonColour\r\n  }\r\n  render() {\r\n    if (this.state.userId === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n        let matchingSection;\r\n        if (this.state.matchesExist == \"exists\"){\r\n            let messagedUserItems = [];\r\n            let notMessagedUserItems = [];\r\n            if (this.state.messagedUserIds && this.state.messagedUserIds.length > 0){\r\n                for (var i = 0; i < this.state.messagedUserIds.length; i++){\r\n                    var pos_user = this.state.messagedUserIds[i];\r\n                    let messageSenderName;\r\n                    if (this.state.messageSender[i] == this.userId){\r\n                        messageSenderName = this.state.currentName;\r\n                    }\r\n                    else {\r\n                        messageSenderName = this.state.messagedUserNames[i]\r\n                    }\r\n                    messagedUserItems.push(\r\n                        <div>\r\n                            <Link to={{pathname: '/viewfriendprofile', state: {id: this.state.userId, friendId: this.state.messagedUserIds[i]}}}>{this.state.messagedUserNames[i]}</Link>\r\n                            <button className={[this.get_button_colour(i), 'pos-user'].join(' ')}\r\n                                    key={pos_user}\r\n                                    value = {this.state.messagedUserIds[i]+\"|\"+this.state.messagedUserNames[i]} \r\n                                    onClick = {this.selectUser}>\r\n\r\n                                {messageSenderName}: {this.state.messageContent[i]}\r\n                                timestamp: {this.state.timeStamp[i]}\r\n                            </button>  \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            if (this.state.notMessagedUserIds && this.state.notMessagedUserIds.length > 0){\r\n                for (var i = 0; i < this.state.notMessagedUserIds.length; i++){\r\n                    var pos_user = this.state.notMessagedUserIds[i];\r\n                    notMessagedUserItems.push(\r\n                        <div>\r\n                            <Link to={{pathname: '/viewfriendprofile', state: {id: this.state.userId, friendId: this.state.notMessagedUserIds[i]}}}>{this.state.notMessagedUserNames[i]}</Link>\r\n                            <button className={[this.get_button_colour(i), 'pos-user'].join(' ')}\r\n                                    key={pos_user} \r\n                                    value = {this.state.notMessagedUserIds[i]+\"|\"+this.state.notMessagedUserNames[i]} \r\n                                    onClick = {this.selectUser}>\r\n                                {this.state.notMessagedUserNames[i]}\r\n                            </button>  \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            if (this.state.messagedUserIds.length !== 0 && this.state.notMessagedUserIds.length !== 0){\r\n                matchingSection = (\r\n                    <h3 id=\"Matches-congrats\">\r\n                      <img src=\"happy-penguin.svg\"></img>\r\n                      <p>Congratulations, you have a match!</p>\r\n                      <h2>Messaged Users</h2>\r\n                      <h3>{messagedUserItems}</h3>\r\n                      <p>Not Messaged Users</p>\r\n                      <p>{notMessagedUserItems}</p>\r\n                    </h3>\r\n                  );\r\n            }\r\n            else if (messagedUserItems.length > 0) {\r\n                matchingSection =  \r\n                    <h3 id=\"Matches-congrats\">\r\n                        <img src=\"happy-penguin.svg\"></img>\r\n                        <h4>Congratulations, you have a match!</h4>\r\n                        <h6>You don't have any new matches</h6>\r\n                        <h6>Please keep swiping or check back later!</h6>\r\n                        <h6>Messaged Users</h6>\r\n                        <div className=\"containerBox\">\r\n                        <p>{messagedUserItems}</p>\r\n                        </div>\r\n                    </h3>\r\n            }\r\n            else if (notMessagedUserItems.length > 0) {\r\n                matchingSection =  \r\n                        <h3 id=\"Matches-congrats\">\r\n                        <img src=\"happy-penguin.svg\"></img>\r\n                        <p>Congratulations, you have a match!</p>\r\n                        <p>There are friends you haven't messaged yet :)</p>\r\n                        <p>Not Messaged Users</p>\r\n                        <p>{notMessagedUserItems}</p>\r\n                      </h3>\r\n            }\r\n            } else if (this.state.matchesExist == \"not exists\") {\r\n            matchingSection = (\r\n                <h2 id=\"Matches-none\">\r\n                <p>Sorry, no one met the matching criteria you set.</p>\r\n                <p>\r\n                    We suggest you to edit your profile, or wait for more users to join\r\n                    our community.\r\n                </p>\r\n                <p>Please try again later :(</p>\r\n                </h2>\r\n            );\r\n            } else {\r\n            matchingSection = <h2></h2>;\r\n            }\r\n    return (\r\n      <div id=\"Matches-section\">\r\n        {matchingSection}\r\n\r\n        <div class=\"swipingButton\" id=\"swipingButton\">\r\n          <Link to={{ pathname: \"/main\" }}>Keep Swiping</Link>\r\n        </div>\r\n        <br></br>\r\n        <div class=\"viewProfileButton\" id=\"viewProfileButton\">\r\n          <Link to={{ pathname: \"/viewprofile\" }}>View Profile</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Matches);\r\n","import \"./Questionnaire.css\";\r\n\r\nconst qBank = [\r\n  {\r\n    question: \"What is the most important thing about a friendship to you?\",\r\n    answers: [\"Have somebody to confide in\", \"Have somebody to have fun with\"],\r\n    questionId: \"1\",\r\n  },\r\n  {\r\n    question: \"Would you rather...\",\r\n    answers: [\r\n      \"Have a friend who enjoys doing the same things as you\",\r\n      \"Have a friend who feels the same way about life as you do\",\r\n    ],\r\n    questionId: \"2\",\r\n  },\r\n  {\r\n    question: \"Which statement below do you relate the most?\",\r\n    answers: [\r\n      \"I like to be close to people\",\r\n      \"I like to keep my distance from people\",\r\n    ],\r\n    questionId: \"3\",\r\n  },\r\n  {\r\n    question: \"When you talk with friends on the phone, it is usually to?\",\r\n    answers: [\"Make arrangements or plans\", \"Have a conversation or chat\"],\r\n    questionId: \"4\",\r\n  },\r\n  {\r\n    question: \"Which statement below do you relate the most?\",\r\n    answers: [\r\n      \"I like to plan where I am going and who I am going with\",\r\n      \"I like to be spontaneous and just let fate decide\",\r\n    ],\r\n    questionId: \"5\",\r\n  },\r\n  {\r\n    question:\r\n      \"You are going to the movies, which genre would you likely choose?\",\r\n    answers: [\"Action\", \"Drama\"],\r\n    questionId: \"6\",\r\n  },\r\n  {\r\n    question:\r\n      \"If you are meeting a friend, what activity would you prefer doing?\",\r\n    answers: [\"Shopping\", \"Playing at the Arcade\"],\r\n    questionId: \"7\",\r\n  },\r\n  {\r\n    question:\r\n      \"If you moved to a new city, which would you rather put more effort into?\",\r\n    answers: [\"Staying in touch with old friends\", \"Making new friends\"],\r\n    questionId: \"8\",\r\n  },\r\n  {\r\n    question: \"As a friend, you are someone that?\",\r\n    answers: [\"Supports others\", \"Is fun to be with\"],\r\n    questionId: \"9\",\r\n  },\r\n  {\r\n    question: \"What do you do when your friend has a problem\",\r\n    answers: [\"Discuss their feelings\", \"Come up with practical solutions\"],\r\n    questionId: \"10\",\r\n  },\r\n  {\r\n    question: \"If your friend was having personal problems, what do you do?\",\r\n    answers: [\r\n      \"Wait for them to contact you\",\r\n      \"Contact them to discuss the problem\",\r\n    ],\r\n    questionId: \"11\",\r\n  },\r\n  {\r\n    question: \"What do you do when you have a personal problem?\",\r\n    answers: [\"I work it out on my own\", \"I share it with a friend\"],\r\n    questionId: \"12\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking with friends, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Political and current affairs\", \"Hobbies and interests\"],\r\n    questionId: \"13\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking with friends, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Family and friends\", \"Work or school\"],\r\n    questionId: \"14\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking to someone you just met, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Political and current affairs\", \"Hobbies and interests\"],\r\n    questionId: \"15\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking to someone you just met, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Family and friends\", \"Work or school\"],\r\n    questionId: \"16\",\r\n  },\r\n];\r\n\r\nexport default () => Promise.resolve(qBank);\r\n","import React, { useState } from \"react\";\r\n\r\nconst QuestionBox = ({ question, options, ID, selected }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        {ID}. {question}\r\n      </div>\r\n      {options.map((text, index) => (\r\n        <p>\r\n          <input\r\n            type=\"radio\"\r\n            value={text}\r\n            name={ID}\r\n            onClick={() => {\r\n              selected(index);\r\n            }}\r\n          />\r\n          {text}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n","import React, { Component } from \"react\";\r\nimport questions from \"./questions\";\r\nimport QuestionBox from \"./QuestionBtn\";\r\nimport \"./Questionnaire.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\n\r\nclass Questionnaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: getCookie(\"userId\"),\r\n      questionBank: [],\r\n      response: [],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(this.state.response.length)\r\n    event.preventDefault();\r\n    if (this.state.response.length >= 16) {\r\n      //checks if all questions have been answered\r\n      console.log(this.state.response.length)\r\n      const id = this.state.id;\r\n      const myRequest = new Request(\"https://pp-friends.herokuapp.com/questionnaire\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ responses: this.state.response, userId: id }),\r\n      });\r\n\r\n      const matchRequest = new Request(\"https://pp-friends.herokuapp.com/potentialMatch\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ responses: this.state.response, userId: id }),\r\n      });\r\n\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") {\r\n            console.log(this.state.response.length)\r\n            console.log(res)\r\n            //Once the first questionnaire API call is a success, the second matching call is nested to ensure that the two calls\r\n            //happen in succession\r\n            fetch(matchRequest)\r\n              .then((res) => res.json())\r\n              .then((res) => {\r\n                if (res.response === \"Success\") {\r\n                  this.props.history.push({\r\n                    pathname: \"/main\",\r\n                  });\r\n                } else {\r\n                  this.setState({\r\n                    error: res.response,\r\n                  });\r\n                }\r\n              });\r\n          } else {\r\n            this.setState({\r\n              error: res.response,\r\n            });\r\n          }\r\n        })\r\n\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    } else {\r\n      alert(\"Please answer all questions\");\r\n    }\r\n  }\r\n\r\n  getQuestions = () => {\r\n    questions().then((question) => {\r\n      this.setState({\r\n        questionBank: question,\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  storeAnswer = (answer, ID) => {\r\n    this.state.response[ID - 1] = answer;\r\n  };\r\n  render() {\r\n    if (this.state.id === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"ppQuestionnaire\">\r\n          <h1>PP Friends Questionnaire</h1>\r\n          <img src=\"question-penguin.svg\"></img>\r\n          <h2>Let's get to know you!</h2>\r\n          <h4>Please answer all questions before submitting</h4>\r\n        </div>\r\n        <div className=\"boxed\">\r\n          <br></br>\r\n          <br></br>\r\n          {this.state.questionBank.length > 0 &&\r\n            this.state.questionBank.map(({ question, answers, questionId }) => (\r\n              <div className=\"Questions\">\r\n                <QuestionBox\r\n                  question={question}\r\n                  options={answers}\r\n                  ID={questionId}\r\n                  key={questionId}\r\n                  selected={(answer) => this.storeAnswer(answer, questionId)}\r\n                />\r\n                <br></br>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <br></br>\r\n        <button class=\"submitButton\" onClick={this.handleSubmit}>\r\n          Get Started!\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Questionnaire);\r\n","import React from 'react';\r\nimport io from \"socket.io-client\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport {getCookie} from '../cookies';\r\nimport \"./Messages.css\";\r\nimport Header from '../Header/Header';\r\n\r\n// const PORT = process.env.PORT || 80;\r\n// const INDEX = '/index.html';\r\n\r\n// const server = express()\r\n//   .use((req, res) => res.sendFile(INDEX, {root: __dirname}))\r\n//   .listen(PORT, () => console.log (`Listening on ${PORT}`));\r\n\r\nlet endPoint = \"https://pp-friends.herokuapp.com\";\r\nlet socket = io.connect(`${endPoint}`);\r\n\r\nclass Messages extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        userId: getCookie(\"userId\"),\r\n        messages : [],\r\n        messageSender: [],\r\n        timeStamps: [],\r\n        message :\"\",\r\n        room: this.props?.location?.state?.friendConvoId,\r\n        currentName: this.props?.location?.state?.currentName,\r\n        friendName: this.props?.location?.state?.friendName,\r\n        friendId:  this.props?.location?.state?.friendId,\r\n        currentConvoId: this.props?.location?.state?.currentConvoId,\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const currentConvoId = this.state.currentConvoId;\r\n    const myRequest = new Request('https://pp-friends.herokuapp.com/getMessages', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"convoId\": currentConvoId,})\r\n            ,});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    messages: res.messages,\r\n                    messageSender: res.fromNames,\r\n                    timeStamps: res.timeStamps,\r\n                  });\r\n\r\n                  socket.emit(\"room\", currentConvoId);\r\n                  socket.on(\"message\", msg => {\r\n                    this.setState({\r\n                        messages: [...this.state.messages, msg],\r\n                        messageSender: [...this.state.messageSender, this.state.friendName],\r\n                        timeStamps: [...this.state.timeStamps, new Date().toUTCString()],\r\n                      });\r\n                  this.scrollToBottom();\r\n                });\r\n            })\r\n        .catch((error) => {\r\n            console.error(error)\r\n        });\r\n  };\r\n\r\n  componentWillUnmount= () => {\r\n    const currentRoom = this.state.currentConvoId;\r\n    socket.emit(\"leaveRoom\", currentRoom);\r\n  }\r\n\r\n\r\n  // On Change\r\n  onChange = e => {\r\n    this.setState({\r\n      message: e.target.value\r\n    });\r\n  };\r\n\r\n  // On Click\r\n  onClick = () => {\r\n    const message = this.state.message;\r\n    const name = this.state.currentName;\r\n    const room = this.state.room;\r\n    const currentConvoId = this.state.currentConvoId;\r\n    if (message !== \"\") {\r\n      socket.emit(\"message\", \r\n        {\r\n          msg: (message),\r\n          room: room,\r\n        }\r\n      );\r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/sendMessage', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"convoId\": currentConvoId,\r\n                \"friendConvoId\": this.state.room,\r\n                \"currentId\": this.state.userId,\r\n                \"friendId\": this.state.friendId,\r\n                \"message\": message\r\n            }),});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if(res.response != \"Success\")\r\n                    alert(\"Something went wrong sending message\");\r\n            })\r\n        .catch((error) => {\r\n            console.error(error)\r\n        });\r\n      const date = new Date();\r\n      this.setState({\r\n        messages: [...this.state.messages, message],\r\n        messageSender: [...this.state.messageSender, name],\r\n        timeStamps: [...this.state.timeStamps, date.toUTCString()],\r\n        message: \"\",\r\n      });\r\n    } else {\r\n      alert(\"Please Add A Message\");\r\n    }\r\n  };\r\n\r\n  onKeyPress = (e) => {\r\n    if(e.which === 13) {\r\n      this.onClick();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.state.userId === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n  }\r\n\r\n    var message = this.state.message;\r\n    var messages = this.state.messages;\r\n    var timeStamps = this.state.timeStamps;\r\n    var names = this.state.messageSender;\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId}/>\r\n      <div className = \"PageContainer\">\r\n        <p>You are currently messaging:</p>\r\n         <h1>{this.state.friendName}</h1>\r\n        <div className = \"MessageContainer\">\r\n        {messages.length > 0 ?\r\n          messages.map((msg, index) => (\r\n             names[index]==this.state.currentName ?\r\n              <div className = \"UserOne\">\r\n                <p1>{timeStamps[index]}</p1>\r\n                <p>{names[index]} : {msg}</p>\r\n              </div> :\r\n              <div className = \"UserTwo\">\r\n                <p1>{timeStamps[index]}</p1>\r\n                <p>{names[index]} : {msg}</p>\r\n              </div>\r\n            )):\r\n          <p>Start a conversation!</p>}\r\n\r\n          <div style={{ float:\"left\", clear: \"both\" }}\r\n            ref={(el) => { this.messagesEnd = el; }}>\r\n          </div>\r\n          \r\n          <input value={message} name=\"message\" onChange={e => this.onChange(e)} onKeyPress={this.onKeyPress} />\r\n          <button onClick={() =>this.onClick()} >Send Message</button> <br></br>\r\n            \r\n        </div>  \r\n      </div>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withRouter(Messages);","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport \"./ViewProfile.css\";\r\n\r\nclass ViewProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: getCookie(\"userId\"),\r\n      name: \"\",\r\n      birthday: \"\",\r\n      age: 0,\r\n      bio: \"\",\r\n      gender: \"Female\",\r\n      genderPreference: \"Female\",\r\n      education: \"\",\r\n      interests: \"\",\r\n      error: \"\",\r\n      maxDistance: 10,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/viewprofile\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ userId: this.state.userId }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((res) =>\r\n        this.setState({\r\n          name: res.name,\r\n          age: res.age,\r\n          bio: res.bio,\r\n          gender: res.gender,\r\n          genderPreference: res.genderPreference,\r\n          education: res.education,\r\n          interests: res.interests,\r\n          birthday: res.birthday,\r\n          maxDistance: res.maxDistance,\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.userId === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId} />\r\n        <div>\r\n          {\" \"}\r\n          <div className=\"Profile\">\r\n            <form id=\"profileForm\">\r\n              <h1>View My Profile</h1>\r\n              <img src=\"ppFriendsLogo.png\"></img>\r\n              <br></br>\r\n              <br></br>\r\n              <div class=\"rectangle\">\r\n                <label for=\"User\">Name 😀</label>\r\n                <input name={this.state.name} value={this.state.name} />\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label for=\"Birthday\">Birthday 🎂</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"birthday\"\r\n                  value={this.state.birthday}\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                />\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label for=\"Gender\">Gender 👫</label>\r\n                <select name=\"gender\" value={this.state.gender}>\r\n                  <option value=\"Female\">Female</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label for=\"GenderPreference\">\r\n                  Your Preferred Gender for friends 🎎\r\n                </label>\r\n                <select\r\n                  name=\"genderPreference\"\r\n                  value={this.state.genderPreference}\r\n                >\r\n                  <option value=\"Female\">Female</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Both\">Both</option>\r\n                </select>\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label for=\"Education\">Education/Work 💻</label>\r\n                <input\r\n                  name={this.state.education}\r\n                  value={this.state.education}\r\n                />\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label for=\"Interests\">Your interests 🎨</label>\r\n                <input\r\n                  name={this.state.interests}\r\n                  value={this.state.interests}\r\n                />\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label for=\"Bio\">Bio 😶</label>\r\n                <input name={this.state.bio} value={this.state.bio} />\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label for=\"Distance\">Max Distance 🌎</label>\r\n                <input\r\n                  type=\"range\"\r\n                  name=\"maxDistance\"\r\n                  value={this.state.maxDistance}\r\n                  min=\"1\"\r\n                  max=\"99999\"\r\n                />\r\n                <text>{this.state.maxDistance}KM</text>\r\n                <text>{this.state.error}</text>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <p>Profile Picture</p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(ViewProfile);\r\n","import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\n\r\nclass EditProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: getCookie(\"userId\"),\r\n      name: \"\",\r\n      birthday: \"\",\r\n      age: 0,\r\n      bio: \"\",\r\n      gender: \"Female\",\r\n      genderPreference: \"Female\",\r\n      education: \"\",\r\n      interests: \"\",\r\n      error: \"\",\r\n      maxDistance: 10,\r\n      updateStatus: \"\",\r\n    };\r\n\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/viewprofile\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ userId: this.state.userId }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((res) =>\r\n        this.setState({\r\n          name: res.name,\r\n          bio: res.bio,\r\n          gender: res.gender,\r\n          genderPreference: res.genderPreference,\r\n          education: res.education,\r\n          interests: res.interests,\r\n          maxDistance: res.maxDistance,\r\n          birthday: res.birthday,\r\n          updatedMessage: \"\",\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  handleUpdate = (event) => {\r\n    event.preventDefault();\r\n    if (this.completedInput()) {\r\n      this.checkAge();\r\n      if (this.state.age > 18 && this.state.age < 100) {\r\n        const id = this.props?.location?.state?.id;\r\n        const myForm = new FormData(document.getElementById(\"profileForm\"));\r\n        myForm.append(\"id\", id);\r\n        myForm.append(\"age\", this.state.age);\r\n        const myRequest = new Request(\"https://pp-friends.herokuapp.com/editprofile\", {\r\n          method: \"POST\",\r\n          body: myForm,\r\n        });\r\n        /*his.setState(state => \r\n  ({ style: Object.assign(state.style, { backgroundColor: 'red' } })) */\r\n\r\n        fetch(myRequest)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res.response === \"Success\") {\r\n              this.setState({\r\n                updatedMessage: (\r\n                  <p>You have successfully updated your profile!</p>\r\n                ),\r\n              });\r\n            } else {\r\n              this.setState({\r\n                error: res.response,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              error: \"Error connecting to backend\",\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"Please fill in all fields\");\r\n    }\r\n  };\r\n\r\n  completedInput = () => {\r\n    const inputs = [\r\n      \"name\",\r\n      \"birthday\",\r\n      \"bio\",\r\n      \"gender\",\r\n      \"genderPreference\",\r\n      \"education\",\r\n      \"interests\",\r\n    ];\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (!this.state[inputs[i]]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  checkAge = () => {\r\n    const birthday = new Date(this.state.birthday);\r\n    var today = new Date();\r\n\r\n    var age = today.getFullYear() - birthday.getFullYear();\r\n    if (\r\n      today.getMonth() < birthday.getMonth() ||\r\n      (today.getMonth() === birthday.getMonth() &&\r\n        today.getDate < birthday.getDate())\r\n    ) {\r\n      age -= 1;\r\n    }\r\n\r\n    if (age < 18) {\r\n      alert(\"You need to be above 18 to register\");\r\n    } else if (age > 100) {\r\n      alert(\"Please make sure you have entered a valid birthday\");\r\n    } else if (age >= 18 && age <= 100) {\r\n    } else {\r\n      alert(\"Please input valid birthday\");\r\n    }\r\n    this.state.age = age;\r\n  };\r\n\r\n  render() {\r\n    const id = this.state.id;\r\n    if (id === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Header id={this.state.userId} />\r\n        <div className=\"Profile\">\r\n          <form id=\"profileForm\" onSubmit={this.handleUpdate}>\r\n            <h1>Update My Profile 👋</h1>\r\n            <img src=\"ppFriendsLogo.png\"></img>\r\n            <br></br>\r\n            <br></br>\r\n            <div class=\"rectangle2\">\r\n              <label for=\"User\">Name 😀</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                maxlength=\"30\"\r\n              />\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <label for=\"Birthday\">Birthday 🎂</label>\r\n\r\n              <input\r\n                type=\"date\"\r\n                name=\"birthday\"\r\n                value={this.state.birthday}\r\n                min=\"1920-01-01\"\r\n                placeholder=\"YYYY-MM-DD\"\r\n                onChange={this.handleChange}\r\n              />\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <label for=\"Gender\">Gender 👫</label>\r\n\r\n              <select\r\n                name=\"gender\"\r\n                onChange={this.handleChange}\r\n                value={this.state.gender}\r\n              >\r\n                <option value=\"Female\">Female</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <label for=\"GenderPreference\">\r\n                Your Preferred Gender for friends 🎎\r\n              </label>\r\n\r\n              <select\r\n                name=\"genderPreference\"\r\n                fieldValue={this.state.genderPreference}\r\n                onChange={this.handleChange}\r\n                value={this.state.genderPreference}\r\n              >\r\n                <option value=\"Female\">Female</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Both\">Both</option>\r\n              </select>\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <label for=\"Education\">Education/Work 💻</label>\r\n\r\n              <input\r\n                type=\"text\"\r\n                name=\"education\"\r\n                value={this.state.education}\r\n                onChange={this.handleChange}\r\n                maxlength=\"30\"\r\n              />\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <label for=\"Interests\">Your interests 🎨</label>\r\n\r\n              <input\r\n                type=\"text\"\r\n                name=\"interests\"\r\n                value={this.state.interests}\r\n                onChange={this.handleChange}\r\n                maxlength=\"255\"\r\n              />\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <label for=\"Bio\">Bio 😶</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"bio\"\r\n                value={this.state.bio}\r\n                onChange={this.handleChange}\r\n                maxlength=\"255\"\r\n                contenteditable=\"true\"\r\n              />\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <label for=\"Distance\">Max Distance 🌎</label>\r\n              <input\r\n                type=\"range\"\r\n                name=\"maxDistance\"\r\n                value={this.state.maxDistance}\r\n                onChange={this.handleChange}\r\n                min=\"1\"\r\n                max=\"500\"\r\n              />\r\n              <text>{this.state.maxDistance}KM</text>\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <p>Profile Picture</p>\r\n            </div>\r\n            <div class=\"updateProfileButton\">\r\n              <input type=\"submit\" value=\"Update\" />\r\n              {this.state.updatedMessage}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditProfile);\r\n","import React from \"react\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport {getCookie} from '../cookies';\r\nimport Header from '../Header/Header';\r\nimport \"./setting.css\";\r\n\r\n\r\nclass UpdateEmail extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        userId: getCookie(\"userId\"),\r\n        email: \"\",\r\n        error:\"\",\r\n      };\r\n      \r\n      this.handleInputChange = this.handleInputChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      \r\n    }\r\n    \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value,\r\n        });\r\n\r\n    }\r\n        \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (this.state.email != \"\"){\r\n\r\n            const id = this.state.userId;\r\n            const myForm = new FormData (document.getElementById(\"newEmailForm\"));\r\n            myForm.append(\"id\", id);\r\n\r\n            const myRequest = new Request(\"https://pp-friends.herokuapp.com/updateEmail\", {\r\n                method: \"POST\",\r\n                body: myForm,\r\n            });\r\n  \r\n            fetch(myRequest)\r\n            .then((res) =>\r\n            res.json())\r\n            .then((res) => {\r\n                this.setState({error: \"\"});\r\n                if(res.response === \"Success\"){\r\n                    alert(\"You have successfully changed your email\")\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        error: res.response,\r\n                    });\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                  error: \"Error connecting to backend\",\r\n                });\r\n            });\r\n            \r\n        } \r\n        else{ \r\n          alert(\"Please enter a new email address\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updateEmail\">\r\n            <Header id={this.state.userId}/>\r\n            <form id=\"newEmailForm\" onSubmit={this.handleSubmit}>\r\n            <h1>Update Email</h1>\r\n              <p>Please enter your new email address</p> \r\n              <input \r\n                name=\"email\" \r\n                type=\"email\" \r\n                value={this.state.email}\r\n                placeholder=\"New Email Address\"\r\n                onChange={this.handleInputChange} \r\n              />\r\n                <br></br>\r\n                <br></br>\r\n              <input type=\"submit\" value=\"Update\" /> \r\n              <br></br>\r\n              <text>{this.state.error}</text>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\nexport default withRouter(UpdateEmail);","import React from \"react\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport {getCookie} from '../cookies';\r\nimport Header from '../Header/Header';\r\nimport \"./setting.css\";\r\n\r\n\r\nclass UpdatePassword extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        userId: getCookie(\"userId\"),\r\n        oldPassword: \"\",\r\n        newPassword:\"\",\r\n        confirmPassword:\"\",\r\n        error: \"\",\r\n      };\r\n      \r\n      this.handleInputChange = this.handleInputChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      \r\n    }\r\n    \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            error: \"\",\r\n          [name]: value,\r\n        });\r\n\r\n    }\r\n\r\n    completedInput = () => {\r\n        const inputs = ['oldPassword', 'newPassword', 'confirmPassword'];\r\n        for(var i =0; i <inputs.length; i++) {\r\n          if(!this.state[inputs[i]])\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    checkPasswords() {\r\n        const newPassword = this.state.newPassword;\r\n        const confirmPassword = this.state.confirmPassword;\r\n        const oldPassword = this.state.oldPassword;\r\n        if (newPassword.length === 0) {\r\n          alert(\"Please add password\");\r\n          return false;\r\n        } else if (confirmPassword != newPassword) {\r\n          alert(\"Please make sure the new passwords match\");\r\n            \r\n          return false;\r\n        } else if ((confirmPassword == newPassword) && (newPassword == oldPassword)){\r\n            alert(\"Your new password is the same as your old password\")\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n        \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (this.completedInput()){\r\n            if (this.checkPasswords()){\r\n                const id = this.state.userId;\r\n                const myForm = new FormData (document.getElementById(\"newPasswordForm\"));\r\n                myForm.append(\"id\", id);\r\n\r\n                const myRequest = new Request(\"https://pp-friends.herokuapp.com/updatePassword\", {\r\n                    method: \"POST\",\r\n                    body: myForm,\r\n                });\r\n  \r\n                fetch(myRequest)\r\n                .then((res) =>\r\n                res.json())\r\n                .then((res) => {\r\n                    this.setState({error: \"\"});\r\n                    if(res.response === \"Success\"){\r\n                        this.setState({\r\n                            error: \"Successfully updated password!\",\r\n                            });\r\n                    }\r\n                    \r\n                    else {\r\n                        this.setState({\r\n                            error: res.response,\r\n                        });\r\n                    }  \r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                    error: \"Error connecting to backend\",\r\n                    });\r\n                });\r\n            }\r\n        } \r\n        else{ \r\n          alert(\"Please enter all fields\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updatePassword\">\r\n            <Header id={this.state.userId}/>\r\n            <form id=\"newPasswordForm\" onSubmit={this.handleSubmit}>\r\n            <h1>Change Password</h1>\r\n              <p>Please enter your current password</p> \r\n              <input \r\n                name=\"oldPassword\" \r\n                type=\"password\" \r\n                value={this.state.oldPassword}\r\n                placeholder=\"current password\"\r\n                onChange={this.handleInputChange} \r\n              />\r\n              <br></br>\r\n              <p>Please enter your new password</p>\r\n              <input\r\n                name=\"newPassword\"\r\n                type=\"Password\"\r\n                value={this.state.newPassword}\r\n                placeholder=\"new password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br></br>\r\n              <p>Please re-enter your new password</p>\r\n              <input\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={this.state.confirmPassword}\r\n                placeholder=\"Re-enter new password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br></br>\r\n\r\n                <br></br>\r\n              <input type=\"submit\" value=\"Update\" /> <br></br>\r\n              <text>{this.state.error}</text>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\nexport default withRouter(UpdatePassword);","import React from \"react\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport Header from '../Header/Header'\r\n\r\nclass ViewFriendProfile extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        userId: this.props?.location?.state?.id,\r\n        friendId: this.props?.location?.state?.friendId,\r\n        name: \"\",\r\n        birthday: \"\",\r\n        age: 0,\r\n        bio: \"\",\r\n        gender: \"Female\",\r\n        education: \"\",\r\n        interests: \"\",\r\n        error: \"\",\r\n      };\r\n      this.selectUserMessage = this.selectUserMessage.bind(this);\r\n    }\r\n    componentDidMount(){\r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/viewprofile', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\"userId\": this.state.friendId}),\r\n        });\r\n    fetch(myRequest)\r\n        .then(response => response.json())\r\n        .then(res => \r\n                this.setState({\r\n                    name: res.name,\r\n                    age: res.age, \r\n                    bio: res.bio,\r\n                    gender: res.gender,\r\n                    education: res.education, \r\n                    interests: res.interests,\r\n                    birthday: res.birthday,\r\n                })\r\n        ).catch((error) => {\r\n            console.error(error)\r\n        })\r\n    }\r\n    selectUserMessage(event) {\r\n      const userSelected = event.target.value.split(\"|\");\r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/conversationId', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n              \"userId\": this.state.userId,\r\n              \"friendId\": userSelected[0],\r\n          }),});\r\n      fetch(myRequest)\r\n          .then(response => response.json())\r\n          .then(res => {\r\n              this.props\r\n              .history.push({\r\n                pathname: \"/messages\",\r\n                state: {\r\n                    id: this.state.userId,\r\n                    friendId: userSelected[0],\r\n                    currentName: this.state.name,\r\n                    friendName: userSelected[1],\r\n                    currentConvoId: res.currentConvoId,\r\n                    friendConvoId: res.friendConvoId\r\n              }});\r\n          })\r\n      .catch((error) => {\r\n          alert(\"Something went wrong\");\r\n          console.error(error)\r\n      });\r\n  }\r\n    render() {\r\n      var displayName = this.state.name+\"'s\";\r\n      return (\r\n        <div className=\"Profile\">\r\n          <Header id={this.state.userId}/>\r\n          <button className='pos-user' \r\n              key={this.state.friendId+\"|message\"}\r\n              value = {this.state.friendId+\"|\"+this.state.name} \r\n              onClick = {this.selectUserMessage}>\r\n            message {this.state.name}\r\n          </button>  \r\n          <form id=\"profileForm\">\r\n            <h1>View {displayName} Profile</h1>\r\n            <p>Name:</p>\r\n\r\n            {this.state.name}\r\n\r\n            <p>Birthday:</p>\r\n            <input type=\"date\" name=\"birthday\"\r\n              value={this.state.birthday}\r\n              placeholder = \"YYYY-MM-DD\"\r\n              />\r\n\r\n            <p>{displayName} Gender:</p>\r\n\r\n            <select\r\n              name = \"gender\"\r\n              value = {this.state.gender}\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value =\"Male\">Male</option>\r\n              <option value =\"Other\">Other</option>\r\n            </select>\r\n\r\n            <p>Education/Work:</p>\r\n            {this.state.education}\r\n\r\n            <p>{displayName} interests:</p>\r\n            {this.state.interests}\r\n\r\n            <p>Bio:</p>\r\n            {this.state.bio}\r\n          </form>\r\n          <text>{this.state.error}</text>\r\n        </div>\r\n      );\r\n  };\r\n}\r\nexport default withRouter(ViewFriendProfile);\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport {getCookie} from './cookies';\r\nimport Register from \"./Register/Register\";\r\nimport ProfileForm from \"./Profile/CreateProfile\"\r\nimport Login from \"./Login/Login\";\r\nimport SwipeProfiles from \"./Swiping/SwipeProfiles\";\r\nimport Matches from \"./Matches/Matches\";\r\nimport Questionnaire from './Questionnaire/Questionnaire';\r\nimport Messages from './Messaging/Messages';\r\nimport ViewProfile from './Profile/ViewProfile';\r\nimport EditProfile from './Profile/EditProfile';\r\nimport UpdateEmail from \"./Setting/UpdateEmail\";\r\nimport UpdatePassword from \"./Setting/UpdatePassword\";\r\n\r\nimport ViewFriendProfile from './Matches/ViewFriendProfile';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        var id = getCookie(\"userId\");\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/createprofile\">\r\n                            <ProfileForm />\r\n                        </Route>\r\n                        <Route path=\"/viewprofile\">\r\n                            <ViewProfile />\r\n                        </Route>\r\n                        <Route path=\"/viewfriendprofile\">\r\n                            <ViewFriendProfile />\r\n                        </Route>\r\n                        <Route path=\"/editprofile\">\r\n                            <EditProfile />\r\n                        </Route>\r\n                        <Route path=\"/register\">\r\n                            <Register />\r\n                        </Route>\r\n                        <Route path=\"/main\">\r\n                            <SwipeProfiles />\r\n                        </Route>\r\n                        <Route path=\"/matches\">\r\n                            <Matches />\r\n                        </Route>\r\n                        <Route path=\"/questionnaire\">\r\n                            <Questionnaire />\r\n                        </Route>\r\n                        <Route path=\"/messages\">\r\n                            <Messages />\r\n                        </Route>\r\n                        <Route path= \"/updateEmail\">\r\n                            <UpdateEmail />\r\n                        </Route> \r\n                        <Route path= \"/updatePassword\">\r\n                            <UpdatePassword />\r\n                        </Route> \r\n                        <Route path=\"/login\">\r\n                            <Login />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            {id === \"\"?\r\n                            <Login /> :\r\n                            <SwipeProfiles />\r\n                            }\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\n\r\n// const express = require('express')\r\n// const path = require('path')\r\n// const PORT = process.env.PORT || 5000\r\n\r\n// express()\r\n//   .use(express.static(path.join(__dirname, 'public')))\r\n//   .set('views', path.join(__dirname, 'views'))\r\n//   .set('view engine', 'ejs')\r\n//   .get('/', (req, res) => res.render('pages/index'))\r\n//   .listen(PORT, () => console.log(`Listening on ${ PORT }`))\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}