{"version":3,"sources":["serviceWorker.js","cookies.js","Register/Register.js","Profile/CreateProfile.js","Login/Login.js","Header/Header.js","Profile/LoadingSpinner.js","Swiping/SwipeProfiles.js","GetLocation.js","Matches/Matches.js","Questionnaire/questions.js","Questionnaire/QuestionBtn.js","Questionnaire/Questionnaire.js","Questionnaire/UpdateQuestionnaire.js","Messaging/Messages.js","Profile/ViewProfile.js","Profile/EditProfile.js","Setting/UpdateEmail.js","Setting/UpdatePassword.js","Matches/ViewFriendProfile.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","setCookie","cname","cvalue","document","cookie","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","clearCookies","cookies","spcook","Register","props","state","password","confirmPassword","error","handleInputChange","bind","handleSubmit","event","target","value","this","setState","preventDefault","checkPasswords","myForm","getElementById","myRequest","Request","method","body","FormData","fetch","then","res","json","response","id","history","push","pathname","catch","alert","className","onSubmit","class","type","placeholder","onChange","to","React","Component","withRouter","ProfileForm","handleUpdate","completedInput","checkAge","age","append","inputs","handleChange","birthday","Date","today","getFullYear","getMonth","getDate","bio","gender","genderPreference","education","interests","maxDistance","src","accept","for","maxlength","min","fieldValue","contenteditable","max","Login","viewBox","fill","d","width","href","Header","activeClassName","friendId","replace","LoadingSpinner","SwipeProfiles","firstName","description","workplace","profilePicture","potentialFriends","displayedUserId","loading","mutualFriendAmount","mutualFriendNames","getPotentialFriendList","displayProfile","handleSwipe","formData","potentialFriendsList","potentialListId","displayProfileId","pop","displayId","currentUserId","workPlace","choice","potentialList","newPotentialUserId","storedLocation","storedLongitude","storedLatitude","navigator","geolocation","Promise","rej","getCurrentPosition","timeout","undefined","currentLocation","currentLongitude","coords","longitude","currentLatitude","latitude","checkValidLongitude","isFinite","Math","abs","checkValidLatitude","JSON","stringify","userID","console","log","mutualFriendSection","alt","onClick","Matches","userId","userIds","matchesExist","firstnames","selectUser","unmatchUser","userSelected","headers","currentName","friendName","currentConvoId","friendConvoId","notMessagedUserIds","notMessagedUserNames","messagedUserIds","messagedUserNames","messageIds","messageSender","messageContent","timeStamp","get_matches","prevProps","prevState","matchingSection","messagedUserItems","notMessagedUserItems","pos_user","messageSenderName","key","e","confirm","get_button_colour","join","qBank","question","answers","questionId","resolve","QuestionBox","options","ID","selected","map","text","index","Questionnaire","getQuestions","questions","questionBank","storeAnswer","answer","checkResponses","responses","matchRequest","countanswer","UpdateQuestionnaire","socket","io","connect","Messages","scrollToBottom","messagesEnd","scrollIntoView","behavior","componentDidMount","messages","fromNames","timeStamps","emit","on","msg","toUTCString","componentWillUnmount","currentRoom","message","room","date","onKeyPress","which","names","style","float","clear","ref","el","ViewProfile","EditProfile","updatedMessage","imageURL","removePicture","querySelector","updateStatus","UpdateEmail","email","UpdatePassword","oldPassword","newPassword","ViewFriendProfile","selectUserMessage","displayName","App","path","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4c7e999.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export function setCookie(cname,cvalue) {\r\n    window.document.cookie = cname + \"=\" + cvalue + \";\";\r\n  }\r\n  \r\nexport function getCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(window.document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i < ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  export function clearCookies() {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++){   \r\n        var spcook =  cookies[i].split(\"=\");\r\n        document.cookie = spcook[0] + \"=;expires=Thu, 21 Sep 1979 00:00:01 UTC;\";                                \r\n    }\r\n  }","import \"./Register.css\";\r\nimport React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { setCookie, clearCookies } from \"../cookies\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.checkPasswords()) {\r\n      const myForm = document.getElementById(\"registerForm\");\r\n      const myRequest = new Request(\"https://pp-friends.herokuapp.com/register\", {\r\n        method: \"POST\",\r\n        body: new FormData(myForm),\r\n      });\r\n\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") {\r\n            setCookie(\"userId\", res.id);\r\n            this.props.history.push({\r\n              pathname: \"/createprofile\",\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            error: res.response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  checkPasswords() {\r\n    const password = this.state.password;\r\n    const confirmPassword = this.state.confirmPassword;\r\n    if (password.length === 0) {\r\n      alert(\"Please add password\");\r\n      return false;\r\n    } else if (confirmPassword !== password) {\r\n      alert(\"Please make sure passwords match\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    clearCookies();\r\n    return (\r\n      <div className=\"Register\">\r\n        <h1> Join the Community</h1>\r\n        <form id=\"registerForm\" onSubmit={this.handleSubmit}>\r\n          <div class=\"form-group form in-line\">\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email Address\" />\r\n            <br></br>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              placeholder=\"Enter password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <br></br>\r\n            <input\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              value={this.state.confirmPassword}\r\n              placeholder=\"Re-enter password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <br></br>\r\n\r\n            <input type=\"submit\" value=\"Join\" />\r\n            <br></br>\r\n            <text>{this.state.error}</text>\r\n          </div>\r\n        </form>\r\n        <Link to=\"/\">I Already Have an Account</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Register);\r\n","import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\n\r\nclass ProfileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: getCookie(\"userId\"),\r\n      name: \"\",\r\n      birthday: \"\",\r\n      bio: \"\",\r\n      gender: \"Female\",\r\n      genderPreference: \"Female\",\r\n      education: \"\",\r\n      interests: \"\",\r\n      error: \"\",\r\n      maxDistance: 10,\r\n      age: 0,\r\n    };\r\n\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleUpdate = (event) => {\r\n    event.preventDefault();\r\n    if (this.completedInput()) {\r\n      this.checkAge();\r\n      if (this.state.age > 18 && this.state.age < 100) {\r\n        const id = this.state.id;\r\n        const myForm = new FormData(document.getElementById(\"profileForm\"));\r\n        myForm.append(\"id\", id);\r\n        myForm.append(\"age\", this.state.age);\r\n        const myRequest = new Request(\"https://pp-friends.herokuapp.com/createprofile\", {\r\n          method: \"POST\",\r\n          body: myForm,\r\n        });\r\n\r\n        fetch(myRequest)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res.response === \"Success\") {\r\n              this.props.history.push({\r\n                pathname: \"/questionnaire\",\r\n              });\r\n            } else {\r\n              this.setState({\r\n                error: res.response,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              error: \"Error connecting to backend\",\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"Please fill in all fields\");\r\n    }\r\n  };\r\n\r\n  completedInput = () => {\r\n    const inputs = [\r\n      \"name\",\r\n      \"birthday\",\r\n      \"bio\",\r\n      \"gender\",\r\n      \"genderPreference\",\r\n      \"education\",\r\n      \"interests\",\r\n    ];\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (!this.state[inputs[i]]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  checkAge = () => {\r\n    const birthday = new Date(this.state.birthday);\r\n    var today = new Date();\r\n\r\n    var age = today.getFullYear() - birthday.getFullYear();\r\n    if (\r\n      today.getMonth() < birthday.getMonth() ||\r\n      (today.getMonth() === birthday.getMonth() &&\r\n        today.getDate < birthday.getDate())\r\n    ) {\r\n      age -= 1;\r\n    }\r\n\r\n    if (age < 18) {\r\n      alert(\"You need to be above 18 to register\");\r\n    } else if (age > 100) {\r\n      alert(\"Please make sure you have entered a valid birthday\");\r\n    } else if (age >= 18 && age <= 100) {\r\n    } else {\r\n      alert(\"Please input valid birthday\");\r\n    }\r\n    this.state.age = age;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Profile\">\r\n        <form id=\"profileForm\" onSubmit={this.handleUpdate}>\r\n        <h1>My Profile 👋</h1>\r\n            <img src=\"ppFriendsLogo.png\"></img>\r\n            <div class = \"row\">\r\n              <div class = \"column left\">\r\n                <div class = \"profilepic\">\r\n                  <p >Upload Profile Picture:</p>\r\n                      <input \r\n                        type=\"file\" \r\n                        id=\"img\" \r\n                        name=\"img\" \r\n                        accept=\"image/*\">\r\n                      </input>\r\n                      <p >Submit Profile:</p>\r\n                    <input type=\"submit\" value=\"Let's get started\" />\r\n                </div>\r\n                                  \r\n              </div>\r\n              <div class = \"column right\">\r\n                <div class=\"rectangle3\">\r\n                  <label for=\"User\">Name 😀</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    maxlength=\"30\"\r\n                  />\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Birthday\">Birthday 🎂</label>\r\n\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"birthday\"\r\n                    value={this.state.birthday}\r\n                    min=\"1920-01-01\"\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Gender\">Gender 👫</label>\r\n\r\n                  <select\r\n                    name=\"gender\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.gender}\r\n                  >\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"GenderPreference\">\r\n                    Your Preferred Gender for friends 🎎\r\n                  </label>\r\n\r\n                  <select\r\n                    name=\"genderPreference\"\r\n                    fieldValue={this.state.genderPreference}\r\n                    onChange={this.handleChange}\r\n                    value={this.state.genderPreference}\r\n                  >\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Both\">Both</option>\r\n                  </select>\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n\r\n                  <label for=\"Education\">Education/Work 💻</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"education\"\r\n                    value={this.state.education}\r\n                    onChange={this.handleChange}\r\n                    maxlength=\"30\"\r\n                  />\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Interests\">Your interests 🎨</label>\r\n\r\n                  <textarea\r\n                    type=\"text\"\r\n                    name=\"interests\"\r\n                    value={this.state.interests}\r\n                    onChange={this.handleChange}\r\n                    maxlength=\"255\"\r\n                  />\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Bio\">Bio 😶</label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    name=\"bio\"\r\n                    value={this.state.bio}\r\n                    onChange={this.handleChange}\r\n                    maxlength=\"255\"\r\n                    contenteditable=\"true\"\r\n                  />\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Distance\">Max Distance 🌎</label>\r\n                  <input\r\n                    type=\"range\"\r\n                    name=\"maxDistance\"\r\n                    value={this.state.maxDistance}\r\n                    onChange={this.handleChange}\r\n                    min=\"1\"\r\n                    max=\"500\"\r\n                  />\r\n                  <text>{this.state.maxDistance}KM</text>\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n        </form>\r\n        <text>{this.state.error}</text>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProfileForm);\r\n","import \"./Login.css\";\r\nimport React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { setCookie, clearCookies } from \"../cookies\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const myForm = document.getElementById(\"loginForm\");\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/login\", {\r\n      method: \"POST\",\r\n      body: new FormData(myForm),\r\n    });\r\n\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          setCookie(\"userId\", res.id);\r\n          this.props.history.push({\r\n            pathname: \"/main\",\r\n          });\r\n        }\r\n        this.setState({\r\n          error: res.response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    clearCookies();\r\n\r\n    return (\r\n      <div className=\"Login\">\r\n        <div className=\"logoBanner\">\r\n          <svg viewBox=\"0 0 500 200\">\r\n            <path\r\n              id=\"curve\"\r\n              fill=\"transparent\"\r\n              d=\"M73.2,200.6c4-6.1,65.5-96.8,178.6-95.6c111.3,1.2,170.8,90.3,175.1,97\"\r\n            />\r\n            <text width=\"500\">\r\n              <textPath href=\"#curve\">Making friendly connections.</textPath>\r\n            </text>\r\n          </svg>\r\n          <img src=\"ppFriendsLogo.png\"></img>\r\n        </div>\r\n\r\n        <h1> Purely Platonic</h1>\r\n        <form id=\"loginForm\" onSubmit={this.handleSubmit}>\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email Address\" />\r\n          <br></br>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            placeholder=\"Enter password\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br></br>\r\n\r\n          <input type=\"submit\" value=\"Login\" />\r\n          <br></br>\r\n\r\n          <text>{this.state.error}</text>\r\n        </form>\r\n        <Link to=\"/register\">Create a new Account</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <nav>\r\n            <div className='div-header'>\r\n                <div class =\"navbar\">\r\n                    <NavLink to={{\r\n                        pathname:'/main',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Back to Swiping!</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/matches',\r\n                        state:{id: props.id}}} className='inactive' activeClassName=\"active\">Matches</NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/viewprofile',\r\n                        state:{id: props.id, friendId: -1}}} className='inactive' activeClassName=\"active\" replace>View Profile</NavLink>\r\n                    <div class = \"dropdown\">\r\n                        <button class=\"dropbtn\">Settings<i class=\"arrow down\"></i></button>\r\n                        <div class=\"dropdown-content\">\r\n                            <NavLink to={{\r\n                                pathname:'/editprofile',\r\n                                state:{id: props.id}}} className='inactive' activeClassName=\"active\">Edit Profile</NavLink>\r\n                            <NavLink to={{\r\n                                pathname:'/updateEmail'}} className='inactive' activeClassName=\"active\">Change Email</NavLink>\r\n                            <NavLink to={{\r\n                                pathname:'/updatePassword'}} className='inactive' activeClassName=\"active\">Change Password</NavLink>\r\n                            <NavLink to={{\r\n                                pathname:'/updateQuestionnaire'}} className='inactive' activeClassName=\"active\">Re-answer Questionnaire</NavLink>\r\n                            </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"navbar\">\r\n                    <NavLink to={{\r\n                        pathname:'/login'}} className='inactive' activeClassName=\"active\">\r\n                        <button className='button-header'>Log Out</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./LoadingSpinner.css\";\r\n\r\nclass LoadingSpinner extends React.Component {\r\n  render() {\r\n    return <div className=\"Loading\"></div>;\r\n  }\r\n}\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport \"./SwipeProfile.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie, setCookie } from \"../cookies\";\r\nimport { getLocation } from \"../GetLocation\";\r\nimport LoadingSpinner from \"../Profile/LoadingSpinner\";\r\n\r\nclass SwipeProfiles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: getCookie(\"userId\"),\r\n      age: \"\",\r\n      firstName: \"\",\r\n      description: \"\",\r\n      interests: \"\",\r\n      gender: \"\",\r\n      workplace: \"\",\r\n      profilePicture: null,\r\n      potentialFriends: [],\r\n      displayedUserId: \"\",\r\n      error: \"\",\r\n      loading: true,\r\n\r\n      mutualFriendAmount: 0,\r\n      mutualFriendNames: null,\r\n    };\r\n\r\n    this.getPotentialFriendList = this.getPotentialFriendList.bind(this);\r\n    this.displayProfile = this.displayProfile.bind(this);\r\n    this.handleSwipe = this.handleSwipe.bind(this);\r\n  }\r\n\r\n  getPotentialFriendList() {\r\n    const id = this.state.id;\r\n    var formData = new FormData();\r\n    formData.append(\"userId\", id);\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/getPotentialFriends\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          var potentialFriendsList = res.potentialListId;\r\n          const displayProfileId = potentialFriendsList.pop();\r\n          this.setState({\r\n            potentialFriends: potentialFriendsList,\r\n            displayedUserId: displayProfileId,\r\n            error: \"\",\r\n          });\r\n\r\n          this.displayProfile();\r\n        } else {\r\n          this.setState({\r\n            error: res.response,\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: \"Error connecting to backend\",\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  displayProfile() {\r\n    const displayId = this.state.displayedUserId;\r\n\r\n    const currentUserId = this.state.id;\r\n    if (displayId) {\r\n      var formData = new FormData();\r\n      formData.append(\"currentUserId\", currentUserId);\r\n      formData.append(\"shownUserId\", displayId);\r\n      const myRequest = new Request(\"https://pp-friends.herokuapp.com/displayProfile\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") {\r\n            this.setState({\r\n              age: res.age,\r\n              firstName: res.firstName,\r\n              description: res.description,\r\n              interests: res.interests,\r\n              gender: res.gender,\r\n              workplace: res.workPlace,\r\n              profilePicture: res.profilePicture,\r\n              mutualFriendAmount: res.mutualFriendAmount,\r\n              mutualFriendNames: res.mutualFriendNames,\r\n              error: \"\",\r\n              loading: false,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              error: res.response,\r\n              loading: false,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            loading: false,\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n        error: (\r\n          <p>\r\n            <img src=\"sad-penguin.svg\"></img>\r\n            <br></br>\r\n            There are no current potential friends for you within the area.{\" \"}\r\n            <br></br>Try updating your profile or come back later!\r\n          </p>\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSwipe(choice) {\r\n    this.setState({ loading: true });\r\n    const displayId = this.state.displayedUserId;\r\n    const currentUserId = this.state.id;\r\n    var formData = new FormData();\r\n    formData.append(\"currentUserId\", currentUserId);\r\n    formData.append(\"shownUserId\", displayId);\r\n    formData.append(\"match\", choice);\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/swipe\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    fetch(myRequest)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.response === \"Success\") {\r\n          var potentialList = this.state.potentialFriends;\r\n          if (potentialList) {\r\n            var newPotentialUserId = potentialList.pop();\r\n            this.setState({\r\n              potentialFriends: potentialList,\r\n              displayedUserId: newPotentialUserId,\r\n              error: \"\",\r\n            });\r\n            this.displayProfile();\r\n          } else {\r\n            this.setState({\r\n              error: (\r\n                <p>\r\n                  <img src=\"sad-penguin.svg\"></img>\r\n                  <br></br>\r\n                  There are no more potential friends for you within the area.{\" \"}\r\n                  <br></br>Try updating your profile or come back later!\r\n                </p>\r\n              ),\r\n              loading: false,\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            error: res.response,\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"Error connecting to backend\",\r\n        });\r\n      });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const storedLocation = getCookie(\"location\");\r\n    const storedLongitude = storedLocation[0];\r\n    const storedLatitude = storedLocation[1];\r\n\r\n    var currentLocation = await getLocation();\r\n\r\n    if (currentLocation != undefined) {\r\n      const currentLongitude = currentLocation?.coords?.longitude;\r\n      const currentLatitude = currentLocation?.coords?.latitude;\r\n\r\n      var checkValidLongitude =\r\n        isFinite(currentLongitude) && Math.abs(currentLongitude) <= 180;\r\n      var checkValidLatitude =\r\n        isFinite(currentLatitude) && Math.abs(currentLatitude) <= 90;\r\n\r\n      if (checkValidLongitude && checkValidLatitude) {\r\n        if (\r\n          storedLongitude === currentLongitude &&\r\n          storedLatitude === currentLatitude\r\n        ) {\r\n        } else {\r\n          const id = this.state.id;\r\n          setCookie(\"longitude\", currentLongitude);\r\n          setCookie(\"latitude\", currentLatitude);\r\n\r\n          const myRequest = new Request(\"https://pp-friends.herokuapp.com/location\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userID: id,\r\n              longitude: currentLongitude,\r\n              latitude: currentLatitude,\r\n            }),\r\n          });\r\n\r\n          fetch(myRequest)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n              if (res.response === \"Success\") {\r\n                console.log(\"updated location\");\r\n              } else {\r\n                console.log(\"error location update\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.setState({\r\n                error: \"Error connecting to backend\",\r\n                loading: false,\r\n              });\r\n            });\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"error getting user location\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const loading = this.state.loading;\r\n    const id = this.state.id;\r\n    const potentialFriends = this.state.potentialFriends;\r\n    const displayedUserId = this.state.displayedUserId;\r\n    const error = this.state.error;\r\n    const profilePicture = this.state.profilePicture;\r\n\r\n    let mutualFriendNames = this.state.mutualFriendNames;\r\n    let mutualFriendSection;\r\n    if (this.state.mutualFriendAmount == 0) {\r\n      mutualFriendSection = (\r\n        <div className=\"noMutualFriends\">\r\n          <p>No Mutual Friends</p>\r\n        </div>\r\n      );\r\n    } else if (this.state.mutualFriendAmount > 0) {\r\n      mutualFriendSection = (\r\n        <div className=\"mutualFriendSection\">\r\n          <p>Your Mutual Friends:</p>\r\n          <text>{this.state.mutualFriendNames}</text>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (id === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      displayedUserId === \"\" &&\r\n      potentialFriends.length === 0 &&\r\n      error === \"\"\r\n    ) {\r\n      this.getPotentialFriendList();\r\n    }\r\n\r\n    return (\r\n      <div className=\"SwipeProfile\">\r\n        <Header id={this.state.id} />\r\n\r\n        <br></br>\r\n        <header class=\"pageTitle\">Potential Friends!</header>\r\n\r\n        <br></br>\r\n        <br></br>\r\n\r\n        {loading ? (\r\n          <LoadingSpinner />\r\n        ) : error ? (\r\n          <text>{error}</text>\r\n        ) : (\r\n          <div>\r\n            <img src=\"ppFriendsLogo.png\"></img>\r\n            <h1>A potential Friend!</h1>\r\n            <div class=\"row\">\r\n              <div class=\"column left\">\r\n                <div class=\"profileLeft\">\r\n                  {profilePicture ? (\r\n                    <img src={profilePicture} alt=\"profilepic\"></img>\r\n                  ) : (\r\n                    <img src=\"profilepic.png\" alt=\"profilepic\"></img>\r\n                  )}\r\n                  <h1>\r\n                    {this.state.firstName}, ({this.state.age})\r\n                  </h1>\r\n                  {mutualFriendSection}\r\n\r\n                  <button\r\n                    class=\"button letsTalkButton\"\r\n                    onClick={() => this.handleSwipe(true)}\r\n                  >\r\n                    Let's Talk\r\n                  </button>\r\n                  <br></br>\r\n                  <button\r\n                    class=\"button notInterestedButton\"\r\n                    onClick={() => this.handleSwipe(false)}\r\n                  >\r\n                    Not Interested\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"column right\">\r\n                <div class=\"profileIntroSection\">\r\n                  <p>Gender 👫 </p>\r\n                  <text>{this.state.gender}</text>\r\n                  <p>Biography 😶 </p>\r\n                  <text>{this.state.description}</text>\r\n                  <p>Interests 🎨 </p>\r\n                  <text>{this.state.interests}</text>\r\n                  <p>Education / Work 💻 </p>\r\n                  <text>{this.state.workplace}</text>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SwipeProfiles);","export function getLocation(){\r\n\r\n    if (navigator.geolocation){\r\n\r\n        return new Promise ((res,rej) => {\r\n            navigator.geolocation.getCurrentPosition(res, rej, {timeout:10000})\r\n        })\r\n \r\n    }\r\n    else{\r\n        return \"Error: browser does not support geolocation\";\r\n    }\r\n   \r\n}","import React from \"react\";\r\nimport \"./Matches.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\nimport LoadingSpinner from \"../Profile/LoadingSpinner\";\r\n\r\n\r\n\r\nclass Matches extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: getCookie(\"userId\"),\r\n      userIds: [],\r\n      matchesExist: \"not set\",\r\n      firstnames: [],\r\n      name: \"\",\r\n      userIds: [],\r\n      notMessagedUserIds: [],\r\n      notMessagedUserNames: [],\r\n      messagedUserIds: [],\r\n      messagedUserNames: [],\r\n      messageIds: [],\r\n      messageSender: [],\r\n      messageContent: [],\r\n      timeStamp: [],\r\n      loading: true,\r\n    };\r\n    this.selectUser = this.selectUser.bind(this);\r\n    this.unmatchUser = this.unmatchUser.bind(this);\r\n  }\r\n  selectUser(event) {\r\n    const userSelected = event.target.value.split(\"|\");\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/conversationId\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userId: this.state.userId,\r\n        friendId: userSelected[0],\r\n      }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        this.props.history.push({\r\n          pathname: \"/messages\",\r\n          state: {\r\n            friendId: userSelected[0],\r\n            currentName: this.state.name,\r\n            friendName: userSelected[1],\r\n            currentConvoId: res.currentConvoId,\r\n            friendConvoId: res.friendConvoId,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Something went wrong\");\r\n        console.error(error);\r\n      });\r\n  }\r\n  unmatchUser(event) {\r\n    const userSelected = event.target.value.split(\"|\");\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/unmatch\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userId: this.state.userId,\r\n        friendId: userSelected[0],\r\n      }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((res) =>\r\n        res.userIds && res.userIds.length != 0\r\n          ? this.setState({\r\n              name: res.currentName,\r\n              matchesExist: \"exists\",\r\n              userIds: res.userIds,\r\n              notMessagedUserIds: res.notMessagedUserIds,\r\n              notMessagedUserNames: res.notMessagedUserNames,\r\n              messagedUserIds: res.messagedUserIds,\r\n              messagedUserNames: res.messagedUserNames,\r\n              messageIds: res.messageIds,\r\n              messageSender: res.messageSender,\r\n              messageContent: res.messageContent,\r\n              timeStamp: res.timeStamp,\r\n            })\r\n          : this.setState({\r\n              matchesExist: \"not exists\",\r\n            })\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  get_matches() {\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/matches\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ userId: this.state.userId }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((res) =>\r\n        res.userIds && res.userIds.length != 0\r\n          ? this.setState({\r\n              name: res.currentName,\r\n              matchesExist: \"exists\",\r\n              userIds: res.userIds,\r\n              notMessagedUserIds: res.notMessagedUserIds,\r\n              notMessagedUserNames: res.notMessagedUserNames,\r\n              messagedUserIds: res.messagedUserIds,\r\n              messagedUserNames: res.messagedUserNames,\r\n              messageIds: res.messageIds,\r\n              messageSender: res.messageSender,\r\n              messageContent: res.messageContent,\r\n              timeStamp: res.timeStamp,\r\n              loading: false,\r\n            })\r\n          : this.setState({\r\n              matchesExist: \"not exists\",\r\n              loading: false,\r\n            })\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.get_matches();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    for (var i = 0; i < this.state.userIds.length; ++i) {\r\n      if (this.state.userIds[i] != prevState.userIds[i]) {\r\n        this.get_matches();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  get_button_colour(i) {\r\n    let buttonColour;\r\n    if (i % 2 == 0) {\r\n      buttonColour = \"blue\";\r\n    } else {\r\n      buttonColour = \"yellow\";\r\n    }\r\n    return buttonColour;\r\n  }\r\n  render() {\r\n    const loading = this.state.loading;\r\n    if (this.state.userId === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n\r\n        let matchingSection;\r\n        if (this.state.matchesExist == \"exists\"){\r\n            let messagedUserItems = [];\r\n            let notMessagedUserItems = [];\r\n            if (this.state.messagedUserIds && this.state.messagedUserIds.length > 0){\r\n                for (var i = 0; i < this.state.messagedUserIds.length; i++){\r\n                    var pos_user = this.state.messagedUserIds[i];\r\n                    let messageSenderName;\r\n                    if (this.state.messageSender[i] == this.userId){\r\n                        messageSenderName = this.state.currentName;\r\n                    }\r\n                    else {\r\n                        messageSenderName = this.state.messagedUserNames[i]\r\n                    }\r\n                    messagedUserItems.push(\r\n                        <div className = \"MessagedUsers\">\r\n                            <p1>{messageSenderName} | </p1>\r\n                            <Link to={{pathname: '/viewfriendprofile', state: {id: this.state.userId, friendId: this.state.messagedUserIds[i], currentName: this.state.name}}}>View Profile | </Link>                            <button className='unmatch-button'\r\n                              key={pos_user+\"match\"}\r\n                              value = {this.state.messagedUserIds[i]+\"|\"+this.state.messagedUserIds[i]}\r\n                              onClick = {(e) => { if (window.confirm('Are you sure you wish to unmatch with this user? You cannot undo this action')) this.unmatchUser(e) } }\r\n                            >\r\n                              Unmatch\r\n                            </button>      \r\n                            <button className={[this.get_button_colour(i), 'pos-user'].join(' ')}\r\n                              key={pos_user}\r\n                              value = {this.state.messagedUserIds[i]+\"|\"+this.state.messagedUserNames[i]} \r\n                              onClick = {this.selectUser}>\r\n                              Message {messageSenderName}\r\n                            </button>  \r\n                            <br></br>\r\n                            <i>{messageSenderName}: {this.state.messageContent[i]} </i>\r\n                            <br></br>\r\n                            <i>{this.state.timeStamp[i]}\r\n                            </i>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            if (this.state.notMessagedUserIds && this.state.notMessagedUserIds.length > 0){\r\n                for (var i = 0; i < this.state.notMessagedUserIds.length; i++){\r\n                    var pos_user = this.state.notMessagedUserIds[i];\r\n                    notMessagedUserItems.push(\r\n                        <div>\r\n                            <p1>{this.state.notMessagedUserNames[i]} | </p1>\r\n                            <Link to={{pathname: '/viewfriendprofile', state: {id: this.state.userId, friendId: this.state.notMessagedUserIds[i], currentName: this.state.name}}}>View Profile | </Link>\r\n                            <button className='unmatch-button'\r\n                              key={pos_user+\"match\"}\r\n                              value = {this.state.notMessagedUserIds[i]+\"|\"+this.state.notMessagedUserNames[i]}\r\n                              onClick = {(e) => { if (window.confirm('Are you sure you wish to unmatch with this user? You cannot undo this action')) this.unmatchUser(e) } }\r\n                            >\r\n                              Unmatch\r\n                            </button>      \r\n                            <button className={[this.get_button_colour(i), 'pos-user'].join(' ')}\r\n                              key={pos_user} \r\n                              value = {this.state.notMessagedUserIds[i]+\"|\"+this.state.notMessagedUserNames[i]} \r\n                              onClick = {this.selectUser}>\r\n                              Message {this.state.notMessagedUserNames[i]}\r\n                            </button>  \r\n                  \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            if (this.state.messagedUserIds.length !== 0 && this.state.notMessagedUserIds.length !== 0){\r\n                matchingSection = (\r\n                  <div className= \"UserContainers\">\r\n                  <div className = \"row\">\r\n                      <img src=\"happy-penguin.svg\"></img>\r\n                      <h2>Congratulations, you have a match!</h2>\r\n                          <div className = \"column left\">\r\n                            <h2>Not Messaged Users</h2>\r\n                            {notMessagedUserItems}\r\n                            \r\n                          </div>\r\n                          <div className = \"column right\">\r\n                            <h2>Messaged Users</h2>\r\n                            {messagedUserItems}\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n            }\r\n            else if (messagedUserItems.length > 0) {\r\n                matchingSection =  \r\n                    <div className= \"UserContainers\">\r\n                        <img src=\"happy-penguin.svg\"></img>\r\n                        <h2>You don't have any new matches</h2>\r\n                        <h2>Please keep swiping or check back later!</h2>\r\n\r\n                        <br></br>\r\n\r\n                            <h2>Messaged Users</h2>\r\n                            <div className=\"SingleColumn\">\r\n                                <p>{messagedUserItems}</p>\r\n                            </div>\r\n                    </div>\r\n            }\r\n            else if (notMessagedUserItems.length > 0) {\r\n                matchingSection =  \r\n                        <div className=\"UserContainers\">\r\n                        <img src=\"happy-penguin.svg\"></img>\r\n                        <h2>Congratulations, you have a match!</h2>\r\n                        <h2>There are friends you haven't messaged yet :)</h2>\r\n                        <br></br>\r\n                        <h2>Not Messaged Users</h2>\r\n                        <p>{notMessagedUserItems}</p>\r\n                      </div>\r\n            }\r\n            } else if (this.state.matchesExist == \"not exists\") {\r\n            matchingSection = (\r\n                <h2 id=\"Matches-none\">\r\n                <img src=\"sad-penguin.svg\"></img>\r\n\r\n                <h2>Sorry, no one met the matching criteria you set.</h2>\r\n                <br></br>\r\n                <p>\r\n                    We suggest you to edit your profile, or wait for more users to join\r\n                    our community.\r\n                </p>\r\n                <p>Please try again later :(</p>\r\n                </h2>\r\n            );\r\n            } else {\r\n            matchingSection = <h2></h2>;\r\n            }\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId} />\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        {loading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n        <div id=\"Matches-section\">\r\n          {matchingSection}\r\n\r\n          <div class=\"swipingButton\" id=\"swipingButton\">\r\n            <Link to={{ pathname: \"/main\" }}>Keep Swiping</Link>\r\n          </div>\r\n          <div class=\"viewProfileButton\" id=\"viewProfileButton\">\r\n            <Link to={{ pathname: \"/viewprofile\" }}>View Profile</Link>\r\n          </div>\r\n        </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Matches);","import \"./Questionnaire.css\";\r\n\r\nconst qBank = [\r\n  {\r\n    question: \"What is the most important thing about a friendship to you?\",\r\n    answers: [\"Have somebody to confide in\", \"Have somebody to have fun with\"],\r\n    questionId: \"1\",\r\n  },\r\n  {\r\n    question: \"Would you rather...\",\r\n    answers: [\r\n      \"Have a friend who enjoys doing the same things as you\",\r\n      \"Have a friend who feels the same way about life as you do\",\r\n    ],\r\n    questionId: \"2\",\r\n  },\r\n  {\r\n    question: \"Which statement below do you relate the most?\",\r\n    answers: [\r\n      \"I like to be close to people\",\r\n      \"I like to keep my distance from people\",\r\n    ],\r\n    questionId: \"3\",\r\n  },\r\n  {\r\n    question: \"When you talk with friends on the phone, it is usually to?\",\r\n    answers: [\"Make arrangements or plans\", \"Have a conversation or chat\"],\r\n    questionId: \"4\",\r\n  },\r\n  {\r\n    question: \"Which statement below do you relate the most?\",\r\n    answers: [\r\n      \"I like to plan where I am going and who I am going with\",\r\n      \"I like to be spontaneous and just let fate decide\",\r\n    ],\r\n    questionId: \"5\",\r\n  },\r\n  {\r\n    question:\r\n      \"You are going to the movies, which genre would you likely choose?\",\r\n    answers: [\"Action\", \"Drama\"],\r\n    questionId: \"6\",\r\n  },\r\n  {\r\n    question:\r\n      \"If you are meeting a friend, what activity would you prefer doing?\",\r\n    answers: [\"Shopping\", \"Playing at the Arcade\"],\r\n    questionId: \"7\",\r\n  },\r\n  {\r\n    question:\r\n      \"If you moved to a new city, which would you rather put more effort into?\",\r\n    answers: [\"Staying in touch with old friends\", \"Making new friends\"],\r\n    questionId: \"8\",\r\n  },\r\n  {\r\n    question: \"As a friend, you are someone that?\",\r\n    answers: [\"Supports others\", \"Is fun to be with\"],\r\n    questionId: \"9\",\r\n  },\r\n  {\r\n    question: \"What do you do when your friend has a problem\",\r\n    answers: [\"Discuss their feelings\", \"Come up with practical solutions\"],\r\n    questionId: \"10\",\r\n  },\r\n  {\r\n    question: \"If your friend was having personal problems, what do you do?\",\r\n    answers: [\r\n      \"Wait for them to contact you\",\r\n      \"Contact them to discuss the problem\",\r\n    ],\r\n    questionId: \"11\",\r\n  },\r\n  {\r\n    question: \"What do you do when you have a personal problem?\",\r\n    answers: [\"I work it out on my own\", \"I share it with a friend\"],\r\n    questionId: \"12\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking with friends, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Political and current affairs\", \"Hobbies and interests\"],\r\n    questionId: \"13\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking with friends, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Family and friends\", \"Work or school\"],\r\n    questionId: \"14\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking to someone you just met, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Political and current affairs\", \"Hobbies and interests\"],\r\n    questionId: \"15\",\r\n  },\r\n  {\r\n    question:\r\n      \"When talking to someone you just met, which of the topics below are you more interested to talk about?\",\r\n    answers: [\"Family and friends\", \"Work or school\"],\r\n    questionId: \"16\",\r\n  },\r\n];\r\n\r\nexport default () => Promise.resolve(qBank);\r\n","import React from \"react\";\r\nimport \"./Questionnaire.css\";\r\n\r\nconst QuestionBox = ({ question, options, ID, selected }) => {\r\n  return (\r\n    <div class=\"questionBox\">\r\n      <div class=\"Questions\">\r\n        {ID}. {question}\r\n      </div>\r\n      {options.map((text, index) => (\r\n        <label class=\"container\">\r\n          <input\r\n            type=\"radio\"\r\n            value={text}\r\n            name={ID}\r\n            onClick={() => {\r\n              selected(index);\r\n            }}\r\n          />\r\n          {text}\r\n          <span class=\"checkmark\"></span>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n","import React, { Component } from \"react\";\r\nimport questions from \"./questions\";\r\nimport QuestionBox from \"./QuestionBtn\";\r\nimport \"./Questionnaire.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\n\r\nclass Questionnaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: getCookie(\"userId\"),\r\n      questionBank: [],\r\n      response: [],\r\n      error:\"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(this.state.response.length)\r\n    event.preventDefault();\r\n    if (this.checkResponses()) {\r\n      //checks if all questions have been answered\r\n      console.log(this.state.response.length)\r\n      const id = this.state.id;\r\n      const myRequest = new Request(\"https://pp-friends.herokuapp.com/questionnaire\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ responses: this.state.response, userId: id }),\r\n      });\r\n\r\n      const matchRequest = new Request(\"https://pp-friends.herokuapp.com/potentialMatch\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ responses: this.state.response, userId: id }),\r\n      });\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.response === \"Success\") {\r\n            console.log(this.state.response.length)\r\n            console.log(res)\r\n            //Once the first questionnaire API call is a success, the second matching call is nested to ensure that the two calls\r\n            //happen in succession\r\n            fetch(matchRequest)\r\n              .then((res) => res.json())\r\n              .then((res) => {\r\n                if (res.response === \"Success\") {\r\n                  this.props.history.push({\r\n                    pathname: \"/main\",\r\n                  });\r\n                } else {\r\n                  this.setState({\r\n                    error: res.response,\r\n                  });\r\n                }\r\n              });\r\n          } else {\r\n            this.setState({\r\n              error: res.response,\r\n            });\r\n          }\r\n        })\r\n\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    } else {\r\n      alert(\"Please answer all questions\");\r\n    }\r\n  }\r\n\r\n  checkResponses(){\r\n    var countanswer=0;\r\n    this.state.response.map(answer=>{\r\n      if(answer == 0 || answer == 1){\r\n        countanswer++\r\n      }\r\n    })\r\n    return countanswer==16\r\n}\r\n\r\n  getQuestions = () => {\r\n    questions().then((question) => {\r\n      this.setState({\r\n        questionBank: question,\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  storeAnswer = (answer, ID) => {\r\n    this.state.response[ID - 1] = answer;\r\n  };\r\n  render() {\r\n    if (this.state.id === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"ppQuestionnaire\">\r\n          <h1>PP Friends Questionnaire</h1>\r\n          <img src=\"question-penguin.svg\"></img>\r\n          <h2>Let's get to know you!</h2>\r\n          <h2>Please answer all questions before submitting</h2>\r\n        </div>\r\n        <div className=\"boxed\">\r\n          <br></br>\r\n          <br></br>\r\n          {this.state.questionBank.length > 0 &&\r\n            this.state.questionBank.map(({ question, answers, questionId }) => (\r\n              <div>\r\n                <QuestionBox\r\n                  question={question}\r\n                  options={answers}\r\n                  ID={questionId}\r\n                  key={questionId}\r\n                  selected={(answer) => this.storeAnswer(answer, questionId)}\r\n                />\r\n                <br></br>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <br></br>\r\n        <button class=\"submitButton\" onClick={this.handleSubmit}>\r\n          Get Started!\r\n        </button>\r\n        <h4 class=\"err\">{this.state.error}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Questionnaire);\r\n","import React, { Component } from \"react\";\r\nimport questions from \"./questions\";\r\nimport QuestionBox from \"./QuestionBtn\";\r\nimport \"./Questionnaire.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\n\r\nclass UpdateQuestionnaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: getCookie(\"userId\"),\r\n      questionBank: [],\r\n      response: [],\r\n      error:\"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.checkResponses()) {\r\n      //checks if all questions have been answered\r\n        const id = this.state.id;\r\n        const myRequest = new Request(\"https://pp-friends.herokuapp.com/updateQuestionnaire\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ responses: this.state.response, userId: id }),\r\n        });\r\n          const matchRequest = new Request(\"https://pp-friends.herokuapp.com/potentialMatch\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ responses: this.state.response, userId: id }),\r\n          });\r\n\r\n        fetch(myRequest)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res.response === \"Success\") {\r\n                //Once the first questionnaire API call is a success, the second matching call is nested to ensure that the two calls\r\n                //happen in succession\r\n                fetch(matchRequest)\r\n                  .then((res) => res.json())\r\n                  .then((res) => {\r\n                    if (res.response === \"Success\") {\r\n                        this.setState({\r\n                          error: \"Successfully updated your questionnaire responses!\",\r\n                        });\r\n                    } else {\r\n                      this.setState({\r\n                        error: res.response,\r\n                      });\r\n                    }\r\n                  });\r\n                \r\n          } else {\r\n            this.setState({\r\n              error: res.response,\r\n            });\r\n          }\r\n        })\r\n\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    } else {\r\n      alert(\"Please answer all questions\");\r\n    }\r\n  }\r\n  checkResponses(){\r\n    var countanswer=0;\r\n    this.state.response.map(answer=>{\r\n      if(answer == 0 || answer == 1){\r\n        countanswer++\r\n      }\r\n    })\r\n    return countanswer==16\r\n  }\r\n  getQuestions = () => {\r\n    questions().then((question) => {\r\n      this.setState({\r\n        questionBank: question,\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  storeAnswer = (answer, ID) => {\r\n    this.state.response[ID - 1] = answer;\r\n  };\r\n  render() {\r\n    if (this.state.id === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n          <Header id={this.state.userId} />\r\n            <div class=\"ppQuestionnaire\">\r\n            <h1>PP Friends Questionnaire</h1>\r\n            <img src=\"question-penguin.svg\"></img>\r\n            <h2>Update Your Questionnaire Responses!</h2>\r\n            <h4>Please answer all questions before submitting</h4>\r\n            </div>\r\n            <div className=\"boxed\">\r\n            <br></br>\r\n            <br></br>\r\n            {this.state.questionBank.length > 0 &&\r\n                this.state.questionBank.map(({ question, answers, questionId }) => (\r\n                <div className=\"Questions\">\r\n                    <QuestionBox\r\n                    question={question}\r\n                    options={answers}\r\n                    ID={questionId}\r\n                    key={questionId}\r\n                    selected={(answer) => this.storeAnswer(answer, questionId)}\r\n                    />\r\n                    <br></br>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        <br></br>\r\n        <button class=\"submitButton\" onClick={this.handleSubmit}>\r\n          Update\r\n        </button>\r\n        <h4 class=\"err\">{this.state.error}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UpdateQuestionnaire);\r\n","import React from 'react';\r\nimport io from \"socket.io-client\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport {getCookie} from '../cookies';\r\nimport \"./Messages.css\";\r\nimport Header from '../Header/Header';\r\n\r\n// const PORT = process.env.PORT || 80;\r\n// const INDEX = '/index.html';\r\n\r\n// const server = express()\r\n//   .use((req, res) => res.sendFile(INDEX, {root: __dirname}))\r\n//   .listen(PORT, () => console.log (`Listening on ${PORT}`));\r\n\r\nlet endPoint = \"pp-friends.herokuapp.com/:1080\";\r\nlet socket = io.connect();\r\n\r\nclass Messages extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        userId: getCookie(\"userId\"),\r\n        messages : [],\r\n        messageSender: [],\r\n        timeStamps: [],\r\n        message :\"\",\r\n        room: this.props?.location?.state?.friendConvoId,\r\n        currentName: this.props?.location?.state?.currentName,\r\n        friendName: this.props?.location?.state?.friendName,\r\n        friendId:  this.props?.location?.state?.friendId,\r\n        currentConvoId: this.props?.location?.state?.currentConvoId,\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const currentConvoId = this.state.currentConvoId;\r\n    const myRequest = new Request('https://pp-friends.herokuapp.com/getMessages', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"convoId\": currentConvoId,})\r\n            ,});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    messages: res.messages,\r\n                    messageSender: res.fromNames,\r\n                    timeStamps: res.timeStamps,\r\n                  });\r\n                  \r\n                  socket.emit(\"room\", currentConvoId);\r\n                  socket.on(\"message\", msg => {\r\n                    this.setState({\r\n                        messages: [...this.state.messages, msg],\r\n                        messageSender: [...this.state.messageSender, this.state.friendName],\r\n                        timeStamps: [...this.state.timeStamps, new Date().toUTCString()],\r\n                      });\r\n                  this.scrollToBottom();\r\n                });\r\n            })\r\n        .catch((error) => {\r\n            console.error(error)\r\n        });\r\n  };\r\n\r\n  componentWillUnmount= () => {\r\n    const currentRoom = this.state.currentConvoId;\r\n    socket.emit(\"leaveRoom\", currentRoom);\r\n  }\r\n\r\n\r\n  // On Change\r\n  onChange = e => {\r\n    this.setState({\r\n      message: e.target.value\r\n    });\r\n  };\r\n\r\n  // On Click\r\n  onClick = () => {\r\n    const message = this.state.message;\r\n    const name = this.state.currentName;\r\n    const room = this.state.room;\r\n    const currentConvoId = this.state.currentConvoId;\r\n    if (message !== \"\") {\r\n      socket.emit(\"message\", \r\n        {\r\n          msg: (message),\r\n          room: room,\r\n        }\r\n      );\r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/sendMessage', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"convoId\": currentConvoId,\r\n                \"friendConvoId\": this.state.room,\r\n                \"currentId\": this.state.userId,\r\n                \"friendId\": this.state.friendId,\r\n                \"message\": message\r\n            }),});\r\n        fetch(myRequest)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if(res.response != \"Success\")\r\n                    alert(\"Something went wrong sending message\");\r\n            })\r\n        .catch((error) => {\r\n            console.error(error)\r\n        });\r\n      const date = new Date();\r\n      this.setState({\r\n        messages: [...this.state.messages, message],\r\n        messageSender: [...this.state.messageSender, name],\r\n        timeStamps: [...this.state.timeStamps, date.toUTCString()],\r\n        message: \"\",\r\n      });\r\n    } else {\r\n      alert(\"Please Add A Message\");\r\n    }\r\n  };\r\n\r\n  onKeyPress = (e) => {\r\n    if(e.which === 13) {\r\n      this.onClick();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.state.userId === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n  }\r\n\r\n    var message = this.state.message;\r\n    var messages = this.state.messages;\r\n    var timeStamps = this.state.timeStamps;\r\n    var names = this.state.messageSender;\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId}/>\r\n      <div className = \"PageContainer\">\r\n        <br></br>\r\n        <h2>You are currently messaging:</h2>\r\n         <h1>{this.state.friendName}</h1>\r\n        <div className = \"MessageContainer\">\r\n        {messages.length > 0 ?\r\n          messages.map((msg, index) => (\r\n             names[index]==this.state.currentName ?\r\n              <div className = \"UserOne\">\r\n                <p1>{timeStamps[index]}</p1>\r\n                <p>{names[index]} : {msg}</p>\r\n              </div> :\r\n              <div className = \"UserTwo\">\r\n                <p1>{timeStamps[index]}</p1>\r\n                <p>{names[index]} : {msg}</p>\r\n              </div>\r\n            )):\r\n          <p>Start a conversation!</p>}\r\n\r\n          <div style={{ float:\"left\", clear: \"both\" }}\r\n            ref={(el) => { this.messagesEnd = el; }}>\r\n          </div>\r\n          \r\n          <input value={message} name=\"message\" onChange={e => this.onChange(e)} onKeyPress={this.onKeyPress} />\r\n          <button onClick={() =>this.onClick()} >Send Message</button> <br></br>\r\n            \r\n        </div>  \r\n      </div>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withRouter(Messages);","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\n\r\nimport \"./ViewProfile.css\";\r\n\r\nclass ViewProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: getCookie(\"userId\"),\r\n      name: \"\",\r\n      birthday: \"\",\r\n      age: 0,\r\n      bio: \"\",\r\n      gender: \"Female\",\r\n      genderPreference: \"Female\",\r\n      education: \"\",\r\n      interests: \"\",\r\n      error: \"\",\r\n      maxDistance: 10,\r\n      loading: true,\r\n\r\n      profilePicture: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/viewprofile\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ userId: this.state.userId }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((res) =>\r\n        this.setState({\r\n          name: res.name,\r\n          age: res.age,\r\n          bio: res.bio,\r\n          gender: res.gender,\r\n          genderPreference: res.genderPreference,\r\n          education: res.education,\r\n          interests: res.interests,\r\n          birthday: res.birthday,\r\n          maxDistance: res.maxDistance,\r\n          loading: false,\r\n\r\n          profilePicture: res.profilePicture,\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const error = this.state.error;\r\n    const loading = this.state.loading;\r\n    if (this.state.userId === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId} />\r\n        {loading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <div className=\"Profile\">\r\n            <h1>View My Profile</h1>\r\n            <img src=\"ppFriendsLogo.png\"></img>\r\n            <div class=\"row\">\r\n              <div class=\"column left\">\r\n                <div class=\"profilepic\">\r\n                  <p>Profile Picture</p>\r\n                  {this.state.profilePicture && (\r\n                    <img src={this.state.profilePicture}></img>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div class=\"column right\">\r\n                <div class=\"rectangle\">\r\n                  <label for=\"User\">Name 😀</label>\r\n                  {this.state.name}\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Birthday\">Birthday 🎂</label>\r\n                  {this.state.birthday}\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Gender\">Gender 👫</label>\r\n                  {this.state.gender}\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"GenderPreference\">\r\n                    Your Preferred Gender for friends 🎎\r\n                  </label>\r\n                  {this.state.genderPreference}\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Education\">Education/Work 💻</label>\r\n                  <text>{this.state.education}</text>\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Interests\">Your interests 🎨</label>\r\n                  <text class=\"bigText\">{this.state.interests}</text>\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Bio\">Bio 😶</label>\r\n                  <text class=\"bigText\">{this.state.bio}</text>\r\n\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <label for=\"Distance\">Max Distance 🌎</label>\r\n                  <input\r\n                    type=\"range\"\r\n                    name=\"maxDistance\"\r\n                    value={this.state.maxDistance}\r\n                    min=\"1\"\r\n                    max=\"500\"\r\n                  />\r\n                  <text>{this.state.maxDistance}KM</text>\r\n                  <text>{this.state.error}</text>\r\n                  <br></br>\r\n                  <br></br>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ViewProfile);\r\n","import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\n\r\nclass EditProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: getCookie(\"userId\"),\r\n      name: \"\",\r\n      birthday: \"\",\r\n      age: 0,\r\n      bio: \"\",\r\n      gender: \"Female\",\r\n      genderPreference: \"Female\",\r\n      education: \"\",\r\n      interests: \"\",\r\n      error: \"\",\r\n      maxDistance: 10,\r\n      updateStatus: \"\",\r\n      loading: true,\r\n\r\n      profilePicture: null,\r\n    };\r\n\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const myRequest = new Request(\"https://pp-friends.herokuapp.com/viewprofile\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ userId: this.state.userId }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((res) =>\r\n        this.setState({\r\n          name: res.name,\r\n          bio: res.bio,\r\n          gender: res.gender,\r\n          genderPreference: res.genderPreference,\r\n          education: res.education,\r\n          interests: res.interests,\r\n          maxDistance: res.maxDistance,\r\n          birthday: res.birthday,\r\n          profilePicture: res.profilePicture,\r\n          updatedMessage: \"\",\r\n          loading: false,\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  handleUpdate = (event) => {\r\n    event.preventDefault();\r\n    if (this.completedInput()) {\r\n      this.checkAge();\r\n      if (this.state.age > 18 && this.state.age < 100) {\r\n        const id = this.props?.location?.state?.id;\r\n        const myForm = new FormData(document.getElementById(\"profileForm\"));\r\n        myForm.append(\"id\", id);\r\n        myForm.append(\"age\", this.state.age);\r\n        const myRequest = new Request(\"https://pp-friends.herokuapp.com/editprofile\", {\r\n          method: \"POST\",\r\n          body: myForm,\r\n        });\r\n\r\n        fetch(myRequest)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res.response === \"Success\") {\r\n              this.setState({\r\n                updatedMessage: (\r\n                  <p>You have successfully updated your profile!</p>\r\n                ),\r\n                profilePicture: res.imageURL,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                error: res.response,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              error: \"Error connecting to backend\",\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"Please fill in all fields\");\r\n    }\r\n  };\r\n\r\n  completedInput = () => {\r\n    const inputs = [\r\n      \"name\",\r\n      \"birthday\",\r\n      \"bio\",\r\n      \"gender\",\r\n      \"genderPreference\",\r\n      \"education\",\r\n      \"interests\",\r\n    ];\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (!this.state[inputs[i]]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  removePicture = () => {\r\n    document.querySelector(\"input[type=file]\").value = \"\";\r\n    this.setState({\r\n      profilePicture: null,\r\n    });\r\n  };\r\n\r\n  checkAge = () => {\r\n    const birthday = new Date(this.state.birthday);\r\n    var today = new Date();\r\n\r\n    var age = today.getFullYear() - birthday.getFullYear();\r\n    if (\r\n      today.getMonth() < birthday.getMonth() ||\r\n      (today.getMonth() === birthday.getMonth() &&\r\n        today.getDate < birthday.getDate())\r\n    ) {\r\n      age -= 1;\r\n    }\r\n\r\n    if (age < 18) {\r\n      alert(\"You need to be above 18 to register\");\r\n    } else if (age > 100) {\r\n      alert(\"Please make sure you have entered a valid birthday\");\r\n    } else if (age >= 18 && age <= 100) {\r\n    } else {\r\n      alert(\"Please input valid birthday\");\r\n    }\r\n    this.state.age = age;\r\n  };\r\n\r\n  render() {\r\n    const error = this.state.error;\r\n    const id = this.state.id;\r\n    const loading = this.state.loading;\r\n    if (id === \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId} />\r\n        {loading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <div className=\"Profile\">\r\n            <form id=\"profileForm\" onSubmit={this.handleUpdate}>\r\n              <h1>Update My Profile 👋</h1>\r\n              <img src=\"ppFriendsLogo.png\"></img>\r\n              <div class=\"row\">\r\n                <div class=\"column left\">\r\n                  <div class=\"profilepic\">\r\n                    <p>Profile Picture</p>\r\n                    <br></br>\r\n                    {this.state.profilePicture && (\r\n                      <img src={this.state.profilePicture}></img>\r\n                    )}\r\n                    <p>Upload New image:</p>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"img\"\r\n                      name=\"img\"\r\n                      accept=\"image/*\"\r\n                    ></input>\r\n                    <br></br>\r\n                    <text class=\"removepic\" onClick={this.removePicture}>\r\n                      Remove picture\r\n                    </text>\r\n                    <div class=\"updateProfileButton\">\r\n                      <input type=\"submit\" value=\"Save Profile\" />\r\n                      {this.state.updatedMessage}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"column right\">\r\n                  <div class=\"rectangle2\">\r\n                    <label for=\"User\">Name 😀</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleChange}\r\n                      maxlength=\"30\"\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Birthday\">Birthday 🎂</label>\r\n\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"birthday\"\r\n                      value={this.state.birthday}\r\n                      min=\"1920-01-01\"\r\n                      placeholder=\"YYYY-MM-DD\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Gender\">Gender 👫</label>\r\n\r\n                    <select\r\n                      name=\"gender\"\r\n                      onChange={this.handleChange}\r\n                      value={this.state.gender}\r\n                    >\r\n                      <option value=\"Female\">Female</option>\r\n                      <option value=\"Male\">Male</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </select>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"GenderPreference\">\r\n                      Your Preferred Gender for friends 🎎\r\n                    </label>\r\n\r\n                    <select\r\n                      name=\"genderPreference\"\r\n                      fieldValue={this.state.genderPreference}\r\n                      onChange={this.handleChange}\r\n                      value={this.state.genderPreference}\r\n                    >\r\n                      <option value=\"Female\">Female</option>\r\n                      <option value=\"Male\">Male</option>\r\n                      <option value=\"Both\">Both</option>\r\n                    </select>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Education\">Education/Work 💻</label>\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"education\"\r\n                      value={this.state.education}\r\n                      onChange={this.handleChange}\r\n                      maxlength=\"30\"\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Interests\">Your interests 🎨</label>\r\n\r\n                    <textarea\r\n                      type=\"text\"\r\n                      name=\"interests\"\r\n                      value={this.state.interests}\r\n                      onChange={this.handleChange}\r\n                      maxlength=\"255\"\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Bio\">Bio 😶</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      name=\"bio\"\r\n                      value={this.state.bio}\r\n                      onChange={this.handleChange}\r\n                      maxlength=\"255\"\r\n                      contenteditable=\"true\"\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Distance\">Max Distance 🌎</label>\r\n                    <input\r\n                      type=\"range\"\r\n                      name=\"maxDistance\"\r\n                      value={this.state.maxDistance}\r\n                      onChange={this.handleChange}\r\n                      min=\"1\"\r\n                      max=\"500\"\r\n                    />\r\n                    <text>{this.state.maxDistance}KM</text>\r\n                    <br></br>\r\n                    <br></br>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditProfile);\r\n","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\nimport \"./UpdateEmail.css\";\r\n\r\nclass UpdateEmail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: getCookie(\"userId\"),\r\n      email: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.email != \"\") {\r\n      const id = this.state.userId;\r\n      const myForm = new FormData(document.getElementById(\"newEmailForm\"));\r\n      myForm.append(\"id\", id);\r\n\r\n      const myRequest = new Request(\"https://pp-friends.herokuapp.com/updateEmail\", {\r\n        method: \"POST\",\r\n        body: myForm,\r\n      });\r\n\r\n      fetch(myRequest)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          this.setState({ error: \"\" });\r\n          if (res.response === \"Success\") {\r\n            alert(\"You have successfully changed your email\");\r\n          } else {\r\n            this.setState({\r\n              error: res.response,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            error: \"Error connecting to backend\",\r\n          });\r\n        });\r\n    } else {\r\n      alert(\"Please enter a new email address\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId} />\r\n        <div className=\"updateEmail\">\r\n          <form id=\"newEmailForm\" onSubmit={this.handleSubmit}>\r\n            <h1>Update Email</h1>\r\n            <p>Please enter your new email address:</p>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              placeholder=\"New Email Address\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <br></br>\r\n            <input name=\"UpdateEmail\" type=\"submit\" value=\"Update\" />\r\n            <text>{this.state.error}</text>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(UpdateEmail);\r\n","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getCookie } from \"../cookies\";\r\nimport Header from \"../Header/Header\";\r\nimport \"./UpdatePassword.css\";\r\n\r\nclass UpdatePassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: getCookie(\"userId\"),\r\n      oldPassword: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      error: \"\",\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  completedInput = () => {\r\n    const inputs = [\"oldPassword\", \"newPassword\", \"confirmPassword\"];\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (!this.state[inputs[i]]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  checkPasswords() {\r\n    const newPassword = this.state.newPassword;\r\n    const confirmPassword = this.state.confirmPassword;\r\n    const oldPassword = this.state.oldPassword;\r\n    if (newPassword.length === 0) {\r\n      alert(\"Please add password\");\r\n      return false;\r\n    } else if (confirmPassword != newPassword) {\r\n      alert(\"Please make sure the new passwords match\");\r\n\r\n      return false;\r\n    } else if (confirmPassword == newPassword && newPassword == oldPassword) {\r\n      alert(\"Your new password is the same as your old password\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.completedInput()) {\r\n      if (this.checkPasswords()) {\r\n        const id = this.state.userId;\r\n        const myForm = new FormData(document.getElementById(\"newPasswordForm\"));\r\n        myForm.append(\"id\", id);\r\n\r\n        const myRequest = new Request(\"https://pp-friends.herokuapp.com/updatePassword\", {\r\n          method: \"POST\",\r\n          body: myForm,\r\n        });\r\n\r\n        fetch(myRequest)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            this.setState({ error: \"\" });\r\n            if (res.response === \"Success\") {\r\n              this.setState({\r\n                error: \"Successfully updated password!\",\r\n              });\r\n            } else {\r\n              this.setState({\r\n                error: res.response,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              error: \"Error connecting to backend\",\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"Please enter all fields\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header id={this.state.userId} />\r\n        <div className=\"Password\">\r\n          <form id=\"newPasswordForm\" onSubmit={this.handleSubmit}>\r\n            <div className=\"updatePassword\">\r\n              <h1>Change Password</h1>\r\n              <label for=\"oldPassword\">Old Password</label>\r\n              <input\r\n                name=\"oldPassword\"\r\n                type=\"password\"\r\n                value={this.state.oldPassword}\r\n                placeholder=\"Current Password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br></br>\r\n              <label for=\"newPassword\">New Password</label>\r\n              <input\r\n                name=\"newPassword\"\r\n                type=\"Password\"\r\n                value={this.state.newPassword}\r\n                placeholder=\"New Password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br></br>\r\n              <label for=\"confirmPassword\">Confirm Password</label>\r\n              <input\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={this.state.confirmPassword}\r\n                placeholder=\"Re-enter New Password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br></br>\r\n              <input type=\"submit\" value=\"Update\" />\r\n              <text>{this.state.error}</text>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(UpdatePassword);\r\n","import React from \"react\";\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport Header from '../Header/Header'\r\nimport \"../Profile/profile.css\";\r\n\r\n\r\nclass ViewFriendProfile extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        userId: this.props?.location?.state?.id,\r\n        friendId: this.props?.location?.state?.friendId,\r\n        currentName: this.props?.location?.state?.currentName,\r\n        name: \"\",\r\n        birthday: \"\",\r\n        age: 0,\r\n        bio: \"\",\r\n        gender: \"Female\",\r\n        education: \"\",\r\n        interests: \"\",\r\n        error: \"\",\r\n        profilePicture: null, \r\n      };\r\n      this.selectUserMessage = this.selectUserMessage.bind(this);\r\n      this.unmatchUser = this.unmatchUser.bind(this);\r\n    }\r\n    componentDidMount(){\r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/viewprofile', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\"userId\": this.state.friendId}),\r\n        });\r\n    fetch(myRequest)\r\n        .then(response => response.json())\r\n        .then(res => \r\n                this.setState({\r\n                    name: res.name,\r\n                    age: res.age, \r\n                    bio: res.bio,\r\n                    gender: res.gender,\r\n                    education: res.education, \r\n                    interests: res.interests,\r\n                    birthday: res.birthday,\r\n                    profilePicture: res.profilePicture,\r\n                })\r\n        ).catch((error) => {\r\n            console.error(error)\r\n        })\r\n    }\r\n    selectUserMessage(event) {\r\n      const userSelected = event.target.value.split(\"|\");\r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/conversationId', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n              \"userId\": this.state.userId,\r\n              \"friendId\": userSelected[0],\r\n          }),});\r\n      fetch(myRequest)\r\n          .then(response => response.json())\r\n          .then(res => {\r\n              this.props\r\n              .history.push({\r\n                pathname: \"/messages\",\r\n                state: {\r\n                    friendId: userSelected[0],\r\n                    currentName: this.state.currentName,\r\n                    friendName: userSelected[1],\r\n                    currentConvoId: res.currentConvoId,\r\n                    friendConvoId: res.friendConvoId\r\n              }});\r\n          })\r\n      .catch((error) => {\r\n          alert(\"Something went wrong\");\r\n          console.error(error)\r\n      });\r\n  }\r\n    unmatchUser(event) {\r\n      const myRequest = new Request('https://pp-friends.herokuapp.com/unmatch', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n              \"userId\": this.state.userId,\r\n              \"friendId\": this.state.friendId,\r\n          }),\r\n      });\r\n      fetch(myRequest)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n          this.props\r\n          .history.push({\r\n            pathname: \"/matches\",\r\n            state: {\r\n                id: this.state.userId,\r\n          }});\r\n      })\r\n      .catch((error) => {\r\n          alert(\"Something went wrong\");\r\n          console.error(error)\r\n      });\r\n    }\r\n    render() {\r\n      var displayName = this.state.name+\"'s\";\r\n      return (\r\n        <div>\r\n          <Header id={this.state.userId}/>\r\n          <div className=\"Profile\">\r\n            <form id=\"profileForm\">\r\n            < h1>View {displayName} Profile</h1>             \r\n              <div class = \"row\">\r\n                <br></br>\r\n                <button className='pos-user' \r\n                  key={this.state.friendId+\"|message\"}\r\n                  value = {this.state.friendId+\"|\"+this.state.name} \r\n                  onClick = {this.selectUserMessage}>\r\n                  message {this.state.name}\r\n                </button>\r\n                <br></br>\r\n                <div class = \"column left\">\r\n                  <div class = \"profilepic\">\r\n                  <button className='unmatch-button'\r\n                  onClick = {(e) => { if (window.confirm('Are you sure you wish to unmatch with this user? You cannot undo this action')) this.unmatchUser(e) } }\r\n                >\r\n                  Unmatch {this.state.name}\r\n                </button>\r\n                <br></br>\r\n                    {this.state.profilePicture \r\n                    && <img src={this.state.profilePicture}></img>\r\n                    }     \r\n                  </div>\r\n                </div>\r\n                <div class = \"column right\">\r\n                  <div class= \"rectangle\">\r\n                    <label for=\"User\">Name 😀</label>\r\n                    {this.state.name}\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Birthday\">Birthday 🎂</label>\r\n                      {this.state.birthday}\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Gender\">Gender 👫</label>\r\n                    {this.state.gender}\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Education\">Education/Work 💻</label>\r\n                    <text>{this.state.education}</text>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Interests\">Your interests 🎨</label>\r\n                    <text class= \"bigText\">{this.state.interests}</text>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"Bio\">Bio 😶</label>\r\n                    <text class= \"bigText\">{this.state.bio}</text>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n \r\n                  </div>              \r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <text>{this.state.error}</text>\r\n          </div>\r\n        </div>\r\n\r\n      );\r\n  };\r\n}\r\nexport default withRouter(ViewFriendProfile);\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport {getCookie} from './cookies';\r\nimport Register from \"./Register/Register\";\r\nimport ProfileForm from \"./Profile/CreateProfile\"\r\nimport Login from \"./Login/Login\";\r\nimport SwipeProfiles from \"./Swiping/SwipeProfiles\";\r\nimport Matches from \"./Matches/Matches\";\r\nimport Questionnaire from './Questionnaire/Questionnaire';\r\nimport UpdateQuestionnaire from './Questionnaire/UpdateQuestionnaire';\r\nimport Messages from './Messaging/Messages';\r\nimport ViewProfile from './Profile/ViewProfile';\r\nimport EditProfile from './Profile/EditProfile';\r\nimport UpdateEmail from \"./Setting/UpdateEmail\";\r\nimport UpdatePassword from \"./Setting/UpdatePassword\";\r\n\r\nimport ViewFriendProfile from './Matches/ViewFriendProfile';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        var id = getCookie(\"userId\");\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/createprofile\">\r\n                            <ProfileForm />\r\n                        </Route>\r\n                        <Route path=\"/viewprofile\">\r\n                            <ViewProfile />\r\n                        </Route>\r\n                        <Route path=\"/viewfriendprofile\">\r\n                            <ViewFriendProfile />\r\n                        </Route>\r\n                        <Route path=\"/editprofile\">\r\n                            <EditProfile />\r\n                        </Route>\r\n                        <Route path=\"/register\">\r\n                            <Register />\r\n                        </Route>\r\n                        <Route path=\"/main\">\r\n                            <SwipeProfiles />\r\n                        </Route>\r\n                        <Route path=\"/matches\">\r\n                            <Matches />\r\n                        </Route>\r\n                        <Route path=\"/questionnaire\">\r\n                            <Questionnaire />\r\n                        </Route>\r\n                        <Route path=\"/updateQuestionnaire\">\r\n                            <UpdateQuestionnaire />\r\n                        </Route>\r\n                        <Route path=\"/messages\">\r\n                            <Messages />\r\n                        </Route>\r\n                        <Route path= \"/updateEmail\">\r\n                            <UpdateEmail />\r\n                        </Route> \r\n                        <Route path= \"/updatePassword\">\r\n                            <UpdatePassword />\r\n                        </Route> \r\n                        <Route path=\"/login\">\r\n                            <Login />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            {id === \"\"?\r\n                            <Login /> :\r\n                            <SwipeProfiles />\r\n                            }\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}